bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(count  <  =  1)  {  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  }  else  if(count  <  =  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	}  else  if(count  <  =  1)  {	  }    else    if(count    <    =    0)    {    	non-compiled	[CE]  	4	None	replace
2	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  letters);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	9	None	replace
3	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  +  1);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  +  1);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end  +  1);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	9	None	replace
4	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end);  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start,  end);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	9	None	replace
5	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  0);  [CE]  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  0);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(ch,  0,  0);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	9	None	replace
6	[BUG]  [BUGGY]  while(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  1. ");  }  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  while(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  1. ");  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	while(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  1. ");  }	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    1.   ");    }    	non-compiled	[CE]  	14	None	replace
7	[BUG]  [BUGGY]  while(!numbers  &&  count  <  =  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  1. ");  }  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  while(!numbers  &&  count  <  =  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  1. ");  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	while(!numbers  &&  count  <  =  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  1. ");  }	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    1.   ");    }    	non-compiled	[CE]  	14	None	replace
8	[BUG]  [BUGGY]  while(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  1.. ");  }  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  while(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  1.. ");  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	while(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  1.. ");  }	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    1.   ");    }    	non-compiled	[CE]  	14	None	replace
9	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars();  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars();  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars();	      char[]    buffer    =    random.chars();    	non-compiled	[CE]  	8	None	replace
10	[BUG]  [BUGGY]  char[]  buffer  =  random.toCharArray();  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.toCharArray();  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.toCharArray();	      char[]    buffer    =    random.chars();    	non-compiled	[CE]  	8	None	replace
11	[BUG]  [BUGGY]  char[]  buffer  =  random.getBytes();  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getBytes();  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getBytes();	      char[]    buffer    =    random.chars();    	non-compiled	[CE]  	8	None	replace
12	[BUG]  [BUGGY]  }  else  if(count  ==  1)  {  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  }  else  if(count  ==  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	}  else  if(count  ==  1)  {	  }    else    if(count!=    0)    {    	non-compiled	[CE]  	2	None	replace
13	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  +  1);	      char[]    buffer    =    random.getChars(ch,    0,    count);    	non-compiled	[CE]  	7	None	replace
14	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start);	      char[]    buffer    =    random.getChars(ch,    0,    count);    	non-compiled	[CE]  	7	None	replace
15	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  -  1);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  -  1);	      char[]    buffer    =    random.getChars(ch,    0,    count);    	non-compiled	[CE]  	7	None	replace
16	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(ch,  0,  count  +  1,  random.length);	      char[]    buffer    =    random.getChars(ch,    0,    count);    	non-compiled	[CE]  	7	None	replace
17	[BUG]  [BUGGY]  char[]  buffer,  chars,  random);  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer,  chars,  random);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer,  chars,  random);	      char[]    buffer,    chars);    	non-compiled	[CE]  	6	None	replace
18	[BUG]  [BUGGY]  char[]  buffer,  new  char[count]);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer,  new  char[count]);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer,  new  char[count]);	      char[]    buffer,    chars);    	non-compiled	[CE]  	6	None	replace
19	[BUG]  [BUGGY]  char[]  buffer,  0,  chars.length);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer,  0,  chars.length);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer,  0,  chars.length);	      char[]    buffer,    chars);    	non-compiled	[CE]  	6	None	replace
20	[BUG]  [BUGGY]  char[]  buffer,  0,  chars);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer,  0,  chars);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer,  0,  chars);	      char[]    buffer,    chars);    	non-compiled	[CE]  	6	None	replace
21	[BUG]  [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0. ");  }  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0. ");  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	bucket  ==  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0. ");  }	      if(count    ==    0)    {    throw    new    IllegalArgumentException(   "Invalid    random    string    length   "    +    count    +   "    is    less    than    0.   ");    }    	non-compiled	[CE]  	13	None	replace
22	[BUG]  [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  random  string  length "  +  count  + "  is  less  than  0. ");  }  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  random  string  length "  +  count  + "  is  less  than  0. ");  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	bucket  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  random  string  length "  +  count  + "  is  less  than  0. ");  }	      if(count    ==    0)    {    throw    new    IllegalArgumentException(   "Invalid    random    string    length   "    +    count    +   "    is    less    than    0.   ");    }    	non-compiled	[CE]  	13	None	replace
23	[BUG]  [BUGGY]  [Delete]  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  [Delete]  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	[Delete]	      if(count    ==    0)    {    throw    new    IllegalArgumentException(   "Invalid    random    string    length   "    +    count    +   "    is    less    than    0.   ");    }    	non-compiled	[CE]  	13	None	replace
24	[BUG]  [BUGGY]  bucket  ==  null  ||!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  bucket  ==  null  ||!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	bucket  ==  null  ||!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    0.5   ");    }    	non-compiled	[CE]  	16	None	replace
25	[BUG]  [BUGGY]  bucket  ==  0  &&!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  bucket  ==  0  &&!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	bucket  ==  0  &&!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    0.5   ");    }    	non-compiled	[CE]  	16	None	replace
26	[BUG]  [BUGGY]  bucket  ==  null  &&!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  bucket  ==  null  &&!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	bucket  ==  null  &&!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    0.5   ");    }    	non-compiled	[CE]  	16	None	replace
27	[BUG]  [BUGGY]  }  else  if(count  >=  1)  {  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  }  else  if(count  >=  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	}  else  if(count  >=  1)  {	  }    else    if(count    <    1)    {    	non-compiled	[CE]  	17	None	replace
28	[BUG]  [BUGGY]  while(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  0. ");  }  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  while(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  0. ");  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	while(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  0. ");  }	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    0.   ");    }    	non-compiled	[CE]  	12	None	replace
29	[BUG]  [BUGGY]  while(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  0.. ");  }  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  while(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  0.. ");  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	while(!numbers)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  + "  is  less  than  0.. ");  }	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    0.   ");    }    	non-compiled	[CE]  	12	None	replace
30	[BUG]  [BUGGY]  }  else  if(numbers)  {  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  }  else  if(numbers)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	}  else  if(numbers)  {	  }    else    if(count    ==    0)    {    	non-compiled	[CE]  	1	None	replace
31	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  0,  count);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  0,  count);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(ch,  start,  0,  count);	      char[]    buffer    =    random.getChars(ch,    start,    count);    	non-compiled	[CE]  	10	None	replace
32	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  1);  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  1);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(ch,  start,  1);	      char[]    buffer    =    random.getChars(ch,    start,    count);    	non-compiled	[CE]  	10	None	replace
33	[BUG]  [BUGGY]  Random  random  =  random.nullValue();  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  Random  random  =  random.nullValue();  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	Random  random  =  random.nullValue();	      	non-compiled	[CE]  	5	None	replace
34	[BUG]  [BUGGY]  char[]  buffer,  chars[count++]);  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer,  chars[count++]);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer,  chars[count++]);	      	non-compiled	[CE]  	5	None	replace
35	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  count);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(start,  count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(start,  count);	      	non-compiled	[CE]  	5	None	replace
36	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  count;  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer,  int  start,  int  count;  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer,  int  start,  int  count;	      	non-compiled	[CE]  	5	None	replace
37	[BUG]  [BUGGY]  char[]  buffer,  chars,  count);  [CE]  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer,  chars,  count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer,  chars,  count);	      	non-compiled	[CE]  	5	None	replace
38	[BUG]  [BUGGY]  MutableStringBuffer  buffer  =  new  MutableStringBuffer(64,  chars);  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  MutableStringBuffer  buffer  =  new  MutableStringBuffer(64,  chars);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	MutableStringBuffer  buffer  =  new  MutableStringBuffer(64,  chars);	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    1.   ");    }    	non-compiled	[CE]  	14	None	replace
39	[BUG]  [BUGGY]  MutableStringBuffer[]  buffer  =  new  MutableStringBuffer(64,  chars);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  MutableStringBuffer[]  buffer  =  new  MutableStringBuffer(64,  chars);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	MutableStringBuffer[]  buffer  =  new  MutableStringBuffer(64,  chars);	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    1.   ");    }    	non-compiled	[CE]  	14	None	replace
40	[BUG]  [BUGGY]  MutableStringBuffer  sb  =  new  MutableStringBuffer(64,  chars);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  MutableStringBuffer  sb  =  new  MutableStringBuffer(64,  chars);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	MutableStringBuffer  sb  =  new  MutableStringBuffer(64,  chars);	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    1.   ");    }    	non-compiled	[CE]  	14	None	replace
41	[BUG]  [BUGGY]  }  else  if(count!=  1)  {  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  }  else  if(count!=  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	}  else  if(count!=  1)  {	  }    else    if(count    <    1)    {    	non-compiled	[CE]  	17	None	replace
42	[BUG]  [BUGGY]  bucket!=  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  bucket!=  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	bucket!=  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }	      if(count    ==    0)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    0.   ");    }    	non-compiled	[CE]  	11	None	replace
43	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  count  +  1);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  count  +  1);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(ch,  start,  count  +  1);	      char[]    buffer    =    random.getChars(ch,    start,    count);    	non-compiled	[CE]  	10	None	replace
44	[BUG]  [BUGGY]  char[]  buffer,  0,  random);  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer,  0,  random);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer,  0,  random);	      char[]    buffer,    chars);    	non-compiled	[CE]  	6	None	replace
45	[BUG]  [BUGGY]  char[]  buffer,  new  char[count  +  1]);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer,  new  char[count  +  1]);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer,  new  char[count  +  1]);	      char[]    buffer,    chars);    	non-compiled	[CE]  	6	None	replace
46	[BUG]  [BUGGY]  MutableStringBuffer  sb  =  new  MutableStringBuffer(64,  random.length);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  MutableStringBuffer  sb  =  new  MutableStringBuffer(64,  random.length);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	MutableStringBuffer  sb  =  new  MutableStringBuffer(64,  random.length);	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    0.5   ");    }    	non-compiled	[CE]  	16	None	replace
47	[BUG]  [BUGGY]  aughtException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  aughtException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	aughtException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    0.0   ");    }    	non-compiled	[CE]  	15	None	replace
48	[BUG]  [BUGGY]  aughtException( "Requested  random  string  length "  +  count  + "  is  less  than  0.0 ");  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  aughtException( "Requested  random  string  length "  +  count  + "  is  less  than  0.0 ");  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	aughtException( "Requested  random  string  length "  +  count  + "  is  less  than  0.0 ");	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    0.0   ");    }    	non-compiled	[CE]  	15	None	replace
49	[BUG]  [BUGGY]  aughtException( "Requested  random  string  length "  +  count  + "  is  less  than  0.0. ");  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  aughtException( "Requested  random  string  length "  +  count  + "  is  less  than  0.0. ");  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	aughtException( "Requested  random  string  length "  +  count  + "  is  less  than  0.0. ");	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    0.0   ");    }    	non-compiled	[CE]  	15	None	replace
50	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(start,  start);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(start,  start);	      char[]    buffer    =    random.chars();    	non-compiled	[CE]  	8	None	replace
51	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  count);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(0,  count);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(0,  count);	      char[]    buffer    =    random.chars();    	non-compiled	[CE]  	8	None	replace
52	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  0);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  0);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  0);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	9	None	replace
53	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(start,  end,  ch);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	9	None	replace
54	[BUG]  [BUGGY]  bucket!=  0)  {  throw  new  IllegalArgumentException( "Invalid  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  bucket!=  0)  {  throw  new  IllegalArgumentException( "Invalid  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	bucket!=  0)  {  throw  new  IllegalArgumentException( "Invalid  random  string  length "  +  count  + "  is  less  than  0.   ");  }	      if(count    ==    0)    {    throw    new    IllegalArgumentException(   "Invalid    random    string    length   "    +    count    +   "    is    less    than    0.   ");    }    	non-compiled	[CE]  	13	None	replace
55	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  count);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  count);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(start,  0,  count);	      char[]    buffer    =    random.getChars(ch,    0,    count);    	non-compiled	[CE]  	7	None	replace
56	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  count);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  count);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(0,  0,  count);	      char[]    buffer    =    random.getChars(ch,    0,    count);    	non-compiled	[CE]  	7	None	replace
57	[BUG]  [BUGGY]  }  else  if(count  ==  0  ||(numbers  &&  random.nextToken()  ==  0))  {  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  }  else  if(count  ==  0  ||(numbers  &&  random.nextToken()  ==  0))  {  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	}  else  if(count  ==  0  ||(numbers  &&  random.nextToken()  ==  0))  {	  }    else    if(count    ==    0)    {    	non-compiled	[CE]  	1	None	replace
58	[BUG]  [BUGGY]  }  else  if(count  ==  0  ||(numbers  &&  random.nextDouble()  ==  0))  {  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  }  else  if(count  ==  0  ||(numbers  &&  random.nextDouble()  ==  0))  {  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	}  else  if(count  ==  0  ||(numbers  &&  random.nextDouble()  ==  0))  {	  }    else    if(count    ==    0)    {    	non-compiled	[CE]  	1	None	replace
59	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(start,  end,  count);	      char[]    buffer    =    random.getChars(ch,    start,    count);    	non-compiled	[CE]  	10	None	replace
60	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  4);  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  4);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(ch,  start,  4);	      char[]    buffer    =    random.getChars(ch,    start,    count);    	non-compiled	[CE]  	10	None	replace
61	[BUG]  [BUGGY]  char[]  buffer  =  random.getBytes(ch);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getBytes(ch);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getBytes(ch);	      char[]    buffer    =    random.chars();    	non-compiled	[CE]  	8	None	replace
62	[BUG]  [BUGGY]  >>  [Delete]  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  >>  [Delete]  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	>>  [Delete]	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    0.   ");    }    	non-compiled	[CE]  	12	None	replace
63	[BUG]  [BUGGY]  ==  [Delete]  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  ==  [Delete]  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	==  [Delete]	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    0.   ");    }    	non-compiled	[CE]  	12	None	replace
64	[BUG]  [BUGGY]  }  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	}	      if(!numbers)    {    throw    new    IllegalArgumentException(   "Requested    random    string    length   "    +    count    +   "    is    less    than    0.   ");    }    	non-compiled	[CE]  	12	None	replace
65	[BUG]  [BUGGY]  char[]  buffer,  1,  chars);  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer,  1,  chars);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer,  1,  chars);	      char[]    buffer,    chars);    	non-compiled	[CE]  	6	None	replace
66	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  1);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  1);	      char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	9	None	replace
67	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  chars.length);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  chars.length);  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char[]  buffer  =  random.getChars(ch,  0,  chars.length);	      char[]    buffer    =    random.getChars(ch,    0,    count);    	non-compiled	[CE]  	7	None	replace
68	[BUG]  [BUGGY]  >>  [Delete]  else  if(count  ==  1)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  >>  [Delete]  else  if(count  ==  1)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	>>  [Delete]  else  if(count  ==  1)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }	      if(count    ==    0)    {    throw    new    IllegalArgumentException(   "Invalid    random    string    length   "    +    count    +   "    is    less    than    0.   ");    }    	non-compiled	[CE]  	13	None	replace
69	[BUG]  [BUGGY]  [Delete]  else  if(count  ==  1)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  [Delete]  else  if(count  ==  1)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	[Delete]  else  if(count  ==  1)  {  throw  new  IllegalArgumentException( "Requested  random  string  length "  +  count  + "  is  less  than  0.   ");  }	      if(count    ==    0)    {    throw    new    IllegalArgumentException(   "Invalid    random    string    length   "    +    count    +   "    is    less    than    0.   ");    }    	non-compiled	[CE]  	13	None	replace
70	[BUG]  [BUGGY]  >>  [Delete]  else  if(count  ==  1)  {  throw  new  IllegalArgumentException( "Invalid  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  >>  [Delete]  else  if(count  ==  1)  {  throw  new  IllegalArgumentException( "Invalid  random  string  length "  +  count  + "  is  less  than  0.   ");  }  [BUGGY]    }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	>>  [Delete]  else  if(count  ==  1)  {  throw  new  IllegalArgumentException( "Invalid  random  string  length "  +  count  + "  is  less  than  0.   ");  }	      if(count    ==    0)    {    throw    new    IllegalArgumentException(   "Invalid    random    string    length   "    +    count    +   "    is    less    than    0.   ");    }    	non-compiled	[CE]  	13	None	replace
71	[BUG]  [BUGGY]  }  else  if(count  >  0)  {  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  }  else  if(count  >  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	}  else  if(count  >  0)  {	  }    else    if(count    >=    0)    {    	non-compiled	[CE]  	3	None	replace
72	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  count);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char  ch  =  random.getChars(start,  count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char  ch  =  random.getChars(start,  count);	      	non-compiled	[CE]  	5	None	replace
73	[BUG]  [BUGGY]  char  ch  =  random.getChars(count);  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char  ch  =  random.getChars(count);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char  ch  =  random.getChars(count);	      	non-compiled	[CE]  	5	None	replace
74	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  end);  [CE]  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char  ch  =  random.getChars(start,  end);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char  ch  =  random.getChars(start,  end);	      	non-compiled	[CE]  	5	None	replace
75	[BUG]  [BUGGY]  char  ch  =  random.getChars(start,  start);  [CE]  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {  if  (count  ==  0)  {  return     "   ";    [BUGGY]  char  ch  =  random.getChars(start,  start);  [BUGGY]    throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	char  ch  =  random.getChars(start,  start);	      	non-compiled	[CE]  	5	None	replace
