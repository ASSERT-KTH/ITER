bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char[]  buffer  =  chars[random.nextInt(gap)+1];  [CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  chars[random.nextInt(gap)+1];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  chars[random.nextInt(gap)+1];	      chars[random.nextInt(gap)+1];    	non-compiled	[CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	16	None	replace
2	[BUG]  [BUGGY]  char[random.nextInt(gap)+  start];  [CE]  ']'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[random.nextInt(gap)+  start];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)+  start];	      chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  ']'  expected	3	None	replace
3	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  end];  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars[random.nextInt(gap)+  end];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  end];	      chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  not  a  statement	3	None	replace
4	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  start];  ch  =  chars[random.nextInt(gap)/  start];  [CE]  not  a  statement  [FE]    ArithmeticException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)/  start];  ch  =  chars[random.nextInt(gap)/  start];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)/    start];    ch  =  chars[random.nextInt(gap)/  start];	  	non-compiled	[CE]  not  a  statement	19	None	add
5	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  start];  ch  =  chars[random.nextInt(gap)/  end];  [CE]  not  a  statement  [FE]      ArithmeticException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)/  start];  ch  =  chars[random.nextInt(gap)/  end];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)/    start];    ch  =  chars[random.nextInt(gap)/  end];	  	non-compiled	[CE]  not  a  statement	19	None	add
6	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  start];  ch  =  CHARs[random.nextInt(gap)/  start];  [CE]  not  a  statement  [FE]        ArithmeticException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)/  start];  ch  =  CHARs[random.nextInt(gap)/  start];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)/    start];    ch  =  CHARs[random.nextInt(gap)/  start];	  	non-compiled	[CE]  not  a  statement	19	None	add
7	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  start];  ch  =  chars[random.nextInt(gap)/  begin];  [CE]  not  a  statement  [FE]          ArithmeticException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)/  start];  ch  =  chars[random.nextInt(gap)/  begin];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)/    start];    ch  =  chars[random.nextInt(gap)/  begin];	  	non-compiled	[CE]  not  a  statement	19	None	add
8	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  letters);  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  letters);  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  letters);	      char[]    buffer    =    random.getChars(start,    end);    	non-compiled	[CE]  ')'  expected	4	None	replace
9	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end);  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end);  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  start,  end);	      char[]    buffer    =    random.getChars(start,    end);    	non-compiled	[CE]  ')'  expected	4	None	replace
10	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  end);  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  end);  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(count,  start,  end);	      char[]    buffer    =    random.getChars(start,    end);    	non-compiled	[CE]  ')'  expected	4	None	replace
11	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end);  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end);  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end);	      char[]    buffer    =    random.getChars(start,    end);    	non-compiled	[CE]  ')'  expected	4	None	replace
12	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start  +  1];  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start  +  1];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start  +  1];	  ch    =    buffer[random.nextInt(gap)+    start];    	non-compiled	[CE]  ')'  expected	12	None	replace
13	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  1];  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  buffer[random.nextInt(gap)+  1];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  1];	  ch    =    buffer[random.nextInt(gap)+    start];    	non-compiled	[CE]  ')'  expected	12	None	replace
14	[BUG]  [BUGGY]  chars  =  buffer[random.nextInt(gap)+  1];  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars  =  buffer[random.nextInt(gap)+  1];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars  =  buffer[random.nextInt(gap)+  1];	      chars    =    chars[random.nextInt(gap)+    1];    	non-compiled	[CE]  ')'  expected	23	None	replace
15	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  2];  [CE]  ')'  expected  [FE]    ArithmeticException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)/  2];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  2];	  ch    =    chars[random.nextInt(gap)/    start];    	non-compiled	[CE]  ')'  expected	20	None	replace
16	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  1];  [CE]  ')'  expected  [FE]      ArithmeticException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)/  1];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  1];	  ch    =    chars[random.nextInt(gap)/    start];    	non-compiled	[CE]  ')'  expected	20	None	replace
17	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  4];  [CE]  ')'  expected  [FE]        ArithmeticException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)/  4];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  4];	  ch    =    chars[random.nextInt(gap)/    start];    	non-compiled	[CE]  ')'  expected	20	None	replace
18	[BUG]  [BUGGY]      ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]      ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	        ch    =    chars[random.nextInt(gap)+    start];    ch  =  chars[random.nextInt(gap)+  start];	  	non-compiled	[CE]  ')'  expected	1	None	add
19	[BUG]  [BUGGY]      ch  =  chars[random.nextInt(gap)+  start];  ch  =  CHARs[random.nextInt(gap)+  start];  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]      ch  =  chars[random.nextInt(gap)+  start];  ch  =  CHARs[random.nextInt(gap)+  start];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	        ch    =    chars[random.nextInt(gap)+    start];    ch  =  CHARs[random.nextInt(gap)+  start];	  	non-compiled	[CE]  ')'  expected	1	None	add
20	[BUG]  [BUGGY]  char[]  buffer  =  chars[random.nextInt(gap)];  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  chars[random.nextInt(gap)];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  chars[random.nextInt(gap)];	      chars[random.nextInt(gap)];    	non-compiled	[CE]  ')'  expected	5	None	replace
21	[BUG]  [BUGGY]  char[]  buffer  =  new  char[random.nextInt(gap)];  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  new  char[random.nextInt(gap)];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[random.nextInt(gap)];	      chars[random.nextInt(gap)];    	non-compiled	[CE]  ')'  expected	5	None	replace
22	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  '0';  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars[random.nextInt(gap)]  =  '0';  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  '0';	      chars[random.nextInt(gap)];    	non-compiled	[CE]  ')'  expected	5	None	replace
23	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  start-1];  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  start-1];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)+    start-1];    ch  =  chars[random.nextInt(gap)+  start-1];	  	non-compiled	[CE]  ')'  expected	13	None	add
24	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+1  start-1];  [CE]  ']'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+1  start-1];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)+    start-1];    ch  =  chars[random.nextInt(gap)+1  start-1];	  	non-compiled	[CE]  ']'  expected	13	None	add
25	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  start-1);  [CE]  ']'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  start-1);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)+    start-1];    ch  =  chars[random.nextInt(gap)+  start-1);	  	non-compiled	[CE]  ']'  expected	13	None	add
26	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  start];  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  start];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    buffer[random.nextInt(gap)+    start];    ch  =  buffer[random.nextInt(gap)+  start];	  	non-compiled	[CE]  ')'  expected	11	None	add
27	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+1  start];  [CE]  ']'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+1  start];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    buffer[random.nextInt(gap)+    start];    ch  =  buffer[random.nextInt(gap)+1  start];	  	non-compiled	[CE]  ']'  expected	11	None	add
28	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  begin];  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  begin];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    buffer[random.nextInt(gap)+    start];    ch  =  buffer[random.nextInt(gap)+  begin];	  	non-compiled	[CE]  ')'  expected	11	None	add
29	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  start;  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars[random.nextInt(gap)]  =  start;  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  start;	      chars[random.nextInt(gap)]    =    RANDOM;    	non-compiled	[CE]  ')'  expected	6	None	replace
30	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  RANDOM  +  1;  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars[random.nextInt(gap)]  =  RANDOM  +  1;  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  RANDOM  +  1;	      chars[random.nextInt(gap)]    =    RANDOM;    	non-compiled	[CE]  ')'  expected	6	None	replace
31	[BUG]  [BUGGY]  char[random.nextInt(gap)]  =  RANDOM;  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[random.nextInt(gap)]  =  RANDOM;  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)]  =  RANDOM;	      chars[random.nextInt(gap)]    =    RANDOM;    	non-compiled	[CE]  ']'  expected	6	None	replace
32	[BUG]  [BUGGY]  char[random.nextInt(gap)]  =  start;  [CE]  ']'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[random.nextInt(gap)]  =  start;  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)]  =  start;	      chars[random.nextInt(gap)]    =    RANDOM;    	non-compiled	[CE]  ']'  expected	6	None	replace
33	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+1  start];  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+1  start];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+1  start];	      ch    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  ']'  expected	2	None	replace
34	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+  start  +  1];  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+  start  +  1];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)+    start    +    1];    ch  =  chars[random.nextInt(gap)+  start  +  1];	  	non-compiled	[CE]  ']'  expected	7	None	add
35	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+  start  +  1)];  [CE]  ']'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+  start  +  1)];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)+    start    +    1];    ch  =  chars[random.nextInt(gap)+  start  +  1)];	  	non-compiled	[CE]  ']'  expected	7	None	add
36	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+  start  +  1];  }  [CE]  ']'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+  start  +  1];  }  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)+    start    +    1];    ch  =  chars[random.nextInt(gap)+  start  +  1];  }	  	non-compiled	[CE]  ']'  expected	7	None	add
37	[BUG]  [BUGGY]  char  ch  =  buffer[random.nextInt(gap)+  start];  [CE]  ']'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char  ch  =  buffer[random.nextInt(gap)+  start];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char  ch  =  buffer[random.nextInt(gap)+  start];	      char    ch    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  ']'  expected	21	None	replace
38	[BUG]  [BUGGY]  char  ch  =  chars[random.nextInt(gap)+  end];  [CE]  ']'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char  ch  =  chars[random.nextInt(gap)+  end];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char  ch  =  chars[random.nextInt(gap)+  end];	      char    ch    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  ']'  expected	21	None	replace
39	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+  1];  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+  1];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)+    1];    ch  =  chars[random.nextInt(gap)+  1];	  	non-compiled	[CE]  ']'  expected	9	None	add
40	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+  1)];  [CE]  ']'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+  1)];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)+    1];    ch  =  chars[random.nextInt(gap)+  1)];	  	non-compiled	[CE]  ']'  expected	9	None	add
41	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+  1];  }  [CE]  ']'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+  1];  }  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)+    1];    ch  =  chars[random.nextInt(gap)+  1];  }	  	non-compiled	[CE]  ']'  expected	9	None	add
42	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  1];  [CE]  ']'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  1];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  1];	      char[]    buffer    =    new    char[buffer.length    *    2    +    start];    	non-compiled	[CE]  ']'  expected	18	None	replace
43	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  1];  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  1];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  1];	      char[]    buffer    =    new    char[buffer.length    *    2    +    start];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
44	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  end];  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  end];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  end];	      char[]    buffer    =    new    char[buffer.length    *    2    +    start];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
45	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  2];  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  2];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start  +  2];	  ch    =    chars[random.nextInt(gap)+    start    +    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1);  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1);  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  start  +  1);	      char[]    buffer    =    random.getChars(start,    start);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
47	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  random.getChars(ch,  start);  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(ch,  start);	      char[]    buffer    =    random.getChars(start,    start);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
48	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(gap,  start);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  random.getChars(gap,  start);  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(gap,  start);	      char[]    buffer    =    random.getChars(start,    start);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
49	[BUG]  [BUGGY]  chars  =  buffer[random.nextInt(gap)+  start];  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars  =  buffer[random.nextInt(gap)+  start];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars  =  buffer[random.nextInt(gap)+  start];	      chars    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
50	[BUG]  [BUGGY]  chars  =  chars[random.nextInt(gap)+  end];  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars  =  chars[random.nextInt(gap)+  end];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars  =  chars[random.nextInt(gap)+  end];	      chars    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
51	[BUG]  [BUGGY]  char  ch  =  buffer[random.nextInt(gap)+  1];  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char  ch  =  buffer[random.nextInt(gap)+  1];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char  ch  =  buffer[random.nextInt(gap)+  1];	      char    ch    =    chars[random.nextInt(gap)+    1];    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
52	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  1];  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  1];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  +  1];	      char[]    buffer    =    new    char[buffer.length    +    start];    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
53	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  2];  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  2];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  +  2];	      char[]    buffer    =    new    char[buffer.length    +    start];    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
54	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  4];  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  4];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  +  4];	      char[]    buffer    =    new    char[buffer.length    +    start];    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
55	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  count];  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  count];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  count];	      char[]    buffer    =    new    char[buffer.length    *    2    +    start];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
56	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  start]  =  RANDOM;  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars[random.nextInt(gap)+  start]  =  RANDOM;  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  start]  =  RANDOM;	      chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
57	[BUG]  [BUGGY]  chars[random.nextInt(gap)+1  start];  [CE]  ']'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars[random.nextInt(gap)+1  start];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+1  start];	      chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  ']'  expected	3	None	replace
58	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  1]  +  start;  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  1]  +  start;  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  1]  +  start;	  ch    =    chars[random.nextInt(gap)+    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  count);  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  count);  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  count);	      char[]    buffer    =    random.getChars(start,    start);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
60	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0);  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  0);	      char[]    buffer    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars.length);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars.length);  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  chars.length);	      char[]    buffer    =    random.getChars(start,    end);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  start];  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  start];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  start];	      char[]    buffer    =    new    char[buffer.length    +    start];    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
63	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  3];  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  3];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start  +  3];	  ch    =    chars[random.nextInt(gap)+    start    +    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
64	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start]  +  chars.length;  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start]  +  chars.length;  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start]  +  chars.length;	  ch    =    buffer[random.nextInt(gap)+    start];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
65	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  +  RANDOM;  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  +  RANDOM;  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start]  +  RANDOM;	      ch    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
66	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  +  start];  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars[random.nextInt(gap)]  +  start];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  +  start];	      chars[random.nextInt(gap)];    	non-compiled	[CE]  not  a  statement	5	None	replace
67	[BUG]  [BUGGY]  chars  =  chars[random.nextInt(gap)+  start  +  1];  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars  =  chars[random.nextInt(gap)+  start  +  1];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars  =  chars[random.nextInt(gap)+  start  +  1];	      chars    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
68	[BUG]  [BUGGY]  chars  =  chars[random.nextInt(gap)+  start],  letters);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars  =  chars[random.nextInt(gap)+  start],  letters);  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars  =  chars[random.nextInt(gap)+  start],  letters);	      chars    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  ';'  expected	22	None	replace
69	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+1  start  +  1];  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+1  start  +  1];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)+    start    +    1];    ch  =  chars[random.nextInt(gap)+1  start  +  1];	  	non-compiled	[CE]  ']'  expected	7	None	add
70	[BUG]  [BUGGY]  char  ch  =  chars[random.nextInt(gap)+  start  +  1];  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char  ch  =  chars[random.nextInt(gap)+  start  +  1];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char  ch  =  chars[random.nextInt(gap)+  start  +  1];	      char    ch    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
71	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  start-1)];  [CE]  ']'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  start-1)];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)+    start-1];    ch  =  chars[random.nextInt(gap)+  start-1)];	  	non-compiled	[CE]  ']'  expected	13	None	add
72	[BUG]  [BUGGY]  chars[random.nextInt(gap)+1]  =  RANDOM;  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars[random.nextInt(gap)+1]  =  RANDOM;  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+1]  =  RANDOM;	      chars[random.nextInt(gap)]    =    RANDOM;    	non-compiled	[CE]  ')'  expected	6	None	replace
73	[BUG]  [BUGGY]  chars[random.nextInt(gap)+1]  +  start;  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars[random.nextInt(gap)+1]  +  start;  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+1]  +  start;	      chars[random.nextInt(gap)+1];    	non-compiled	[CE]  not  a  statement	16	None	replace
74	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  2];  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  2];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  2];	      ch    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  ')'  expected	2	None	replace
75	[BUG]  [BUGGY]  chars[random.nextInt(gap)-  start];  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars[random.nextInt(gap)-  start];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)-  start];	      chars[random.nextInt(gap)];    	non-compiled	[CE]  not  a  statement	5	None	replace
76	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  count];  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  count];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  count];	      char[]    buffer    =    new    char[buffer.length    *    2    +    start];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
77	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  4];  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  4];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  4];	      char[]    buffer    =    new    char[buffer.length    *    2    +    start];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
78	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  ch;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars[random.nextInt(gap)]  =  ch;  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  ch;	      chars[random.nextInt(gap)]    =    RANDOM;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
79	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  RANDOM  +  start;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars[random.nextInt(gap)]  =  RANDOM  +  start;  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  RANDOM  +  start;	      chars[random.nextInt(gap)]    =    RANDOM;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
80	[BUG]  [BUGGY]  chars  =  chars[random.nextInt(gap)+  2];  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars  =  chars[random.nextInt(gap)+  2];  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars  =  chars[random.nextInt(gap)+  2];	      chars    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
81	[BUG]  [BUGGY]  chars[random.nextInt(gap)+1],  start,  letters);  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  chars[random.nextInt(gap)+1],  start,  letters);  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+1],  start,  letters);	      chars[random.nextInt(gap)+1];    	non-compiled	[CE]  not  a  statement	16	None	replace
82	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  start-1];  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  start-1];  }  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)+    start-1];    ch  =  chars[random.nextInt(gap)+  start-1];  }	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
83	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  start];  ch  =(char)(random.nextInt(gap)/  start];  [CE]  ')'  expected  [FE]    ArithmeticException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)/  start];  ch  =(char)(random.nextInt(gap)/  start];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)/    start];    ch  =(char)(random.nextInt(gap)/  start];	  	non-compiled	[CE]  ')'  expected	19	None	add
84	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  start];  ch  =  chars[random.nextInt(gap)/  start];  }  [CE]  illegal  start  of  expression  [FE]      ArithmeticException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  chars[random.nextInt(gap)/  start];  ch  =  chars[random.nextInt(gap)/  start];  }  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    chars[random.nextInt(gap)/    start];    ch  =  chars[random.nextInt(gap)/  start];  }	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
85	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  start],  letters);  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  start],  letters);  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch    =    buffer[random.nextInt(gap)+    start];    ch  =  buffer[random.nextInt(gap)+  start],  letters);	  	non-compiled	[CE]  ';'  expected	11	None	add
86	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  start);  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  start);  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(count,  start,  start);	      char[]    buffer    =    random.getChars(start,    start);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
87	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  letters);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  letters);  [BUGGY]    ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  start,  letters);	      char[]    buffer    =    random.getChars(start,    start);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
88	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)/  start];  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {    [BUGGY]  ch  =  buffer[random.nextInt(gap)/  start];  [BUGGY]    }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)/  start];	  ch    =    buffer[random.nextInt(gap)+    start];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
