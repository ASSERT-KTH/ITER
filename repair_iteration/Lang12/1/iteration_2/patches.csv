bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  gap);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  gap);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  gap);	  char[]    buffer    =    random.getChars(gap,    start);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
2	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  3];  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  3];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  +  3];	  char[]    buffer    =    new    char[buffer.length    +    2];    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
3	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  1]  +  start  +  1;  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  1]  +  start  +  1;  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  1]  +  start  +  1;	  ch    =    chars[random.nextInt(gap)+    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
4	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)/  1];  [CE]  ')'  expected  [FE]          ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)/  1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)/  1];	  ch    =    chars[random.nextInt(gap)/    1];    	non-compiled	[CE]  ')'  expected	16	None	replace
5	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  count];  [CE]  ')'  expected  [FE]          ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)/  count];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  count];	  ch    =    chars[random.nextInt(gap)/    start];    ch    =    chars[random.nextInt(gap)/    end];    	non-compiled	[CE]  ')'  expected	5	None	replace
6	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)/  start];  ch  =  buffer[random.nextInt(gap)/  end];  [CE]  ')'  expected  [FE]            ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)/  start];  ch  =  buffer[random.nextInt(gap)/  end];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)/  start];  ch  =  buffer[random.nextInt(gap)/  end];	  ch    =    chars[random.nextInt(gap)/    start];    ch    =    chars[random.nextInt(gap)/    end];    	non-compiled	[CE]  ')'  expected	5	None	replace
7	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  end];  [CE]  ')'  expected  [FE]              ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)/  end];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  end];	  ch    =    chars[random.nextInt(gap)/    start];    ch    =    chars[random.nextInt(gap)/    end];    	non-compiled	[CE]  ')'  expected	5	None	replace
8	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  start);  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  start);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  start);	  char[]    buffer    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  ')'  expected	9	None	replace
9	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  end);  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  0,  end);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(0,  0,  end);	  char[]    buffer    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  ')'  expected	9	None	replace
10	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  start]  =  ch;  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  start]  =  ch;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  start]  =  ch;	  chars[random.nextInt(gap)]    =    ch;    	non-compiled	[CE]  ')'  expected	78	None	replace
11	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  ch  +  1;  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  ch  +  1;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  ch  +  1;	  chars[random.nextInt(gap)]    =    ch;    	non-compiled	[CE]  ')'  expected	78	None	replace
12	[BUG]  [BUGGY]  chars  =  buffer[random.nextInt(gap)+  start  +  1];  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars  =  buffer[random.nextInt(gap)+  start  +  1];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars  =  buffer[random.nextInt(gap)+  start  +  1];	  chars    =    chars[random.nextInt(gap)+    start    +    1];    	non-compiled	[CE]  ')'  expected	67	None	replace
13	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  '0'  +  1;  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  '0'  +  1;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  '0'  +  1;	  chars[random.nextInt(gap)]    =    '0';    	non-compiled	[CE]  ')'  expected	22	None	replace
14	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  '0'  +  start;  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  '0'  +  start;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  '0'  +  start;	  chars[random.nextInt(gap)]    =    '0';    	non-compiled	[CE]  ')'  expected	22	None	replace
15	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  '0'  &&!letters;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  '0'  &&!letters;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  '0'  &&!letters;	  chars[random.nextInt(gap)]    =    '0';    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
16	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)/  start  +  1];  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)/  start  +  1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)/  start  +  1];	  ch    =    buffer[random.nextInt(gap)/    start];    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
17	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)/  2];  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)/  2];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)/  2];	  ch    =    buffer[random.nextInt(gap)/    start];    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
18	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start  +  1];  ch  =  buffer[random.nextInt(gap)+  start  +  1)];  [CE]  ']'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start  +  1];  ch  =  buffer[random.nextInt(gap)+  start  +  1)];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start  +  1];  ch  =  buffer[random.nextInt(gap)+  start  +  1)];	  ch    =    chars[random.nextInt(gap)+    start    +    1];    ch    =    chars[random.nextInt(gap)+    start    +    1)];    	non-compiled	[CE]  ']'  expected	35	None	replace
19	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+  end  +  1)];  [CE]  ']'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+  end  +  1)];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+  end  +  1)];	  ch    =    chars[random.nextInt(gap)+    start    +    1];    ch    =    chars[random.nextInt(gap)+    start    +    1)];    	non-compiled	[CE]  ']'  expected	35	None	replace
20	[BUG]  [BUGGY]  char[]  buffer  =  chars[random.nextInt(gap)+  start];  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  chars[random.nextInt(gap)+  start];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  chars[random.nextInt(gap)+  start];	  char[]    buffer    =    chars[random.nextInt(gap)];    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
21	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  count  +  1];  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  count  +  1];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  count  +  1];	  char[]    buffer    =    new    char[buffer.length    *    2    +    count];    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
22	[BUG]  [BUGGY]  char[random.nextInt(gap)-  start];  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)-  start];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)-  start];	  chars[random.nextInt(gap)-    start];    	non-compiled	[CE]  ']'  expected	75	None	replace
23	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  count);	  char[]    buffer    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  end,  letters);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  end,  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(count,  start,  end,  letters);	  char[]    buffer    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
25	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count,  letters);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count,  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  count,  letters);	  char[]    buffer    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
26	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0,  letters);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0,  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  0,  letters);	  char[]    buffer    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
27	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  +  start],  letters;  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  +  start],  letters;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  +  start],  letters;	  chars[random.nextInt(gap)]    +    start];    	non-compiled	[CE]  not  a  statement	66	None	replace
28	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  +  start],  letters);  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  +  start],  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  +  start],  letters);	  chars[random.nextInt(gap)]    +    start];    	non-compiled	[CE]  not  a  statement	66	None	replace
29	[BUG]  [BUGGY]  char[random.nextInt(gap)]  +  start];  [CE]  ']'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)]  +  start];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)]  +  start];	  chars[random.nextInt(gap)]    +    start];    	non-compiled	[CE]  ']'  expected	66	None	replace
30	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  count);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  count);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  start,  count);	  char[]    buffer    =    random.getChars(start,    count);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
31	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  start);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(count,  start);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(count,  start);	  char[]    buffer    =    random.getChars(start,    count);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
32	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  count);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  0,  count);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  0,  count);	  char[]    buffer    =    random.getChars(start,    count);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
33	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+1  start];  [CE]  ']'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+1  start];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+1  start];	  ch    =    buffer[random.nextInt(gap)+    start];    ch    =    buffer[random.nextInt(gap)+1    start];    	non-compiled	[CE]  ']'  expected	27	None	replace
34	[BUG]  [BUGGY]  char  ch  =  buffer[random.nextInt(gap)+  start]  +  1;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char  ch  =  buffer[random.nextInt(gap)+  start]  +  1;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char  ch  =  buffer[random.nextInt(gap)+  start]  +  1;	  char    ch    =    buffer[random.nextInt(gap)+    start];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
35	[BUG]  [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  }  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	if(letters)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  }	          ch    =    chars[random.nextInt(gap)+    start];    ch    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
36	[BUG]  [BUGGY]  if(!letters)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  if(!letters)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  }  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	if(!letters)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  }	          ch    =    chars[random.nextInt(gap)+    start];    ch    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
37	[BUG]  [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  }  else  {  ch  =  '  [CE]  illegal  line  end  in  character  literal  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  }  else  {  ch  =  '  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	if(letters)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  }  else  {  ch  =  '	          ch    =    chars[random.nextInt(gap)+    start];    ch    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  illegal  line  end  in  character  literal	18	None	replace
38	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  letters);	  char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
39	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start,  end);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start,  end);	  char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  end);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  end);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(ch,  0,  end);	  char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
41	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  +  1);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end  +  1);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end  +  1);	  char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
42	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  4];  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  4];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start  +  4];	  ch    =    chars[random.nextInt(gap)+    start    +    2];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
43	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  3];  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  3];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  3];	  char[]    buffer    =    new    char[buffer.length    *    2    +    1];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
44	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  start],  numbers);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  start],  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  start],  numbers);	  ch    =    buffer[random.nextInt(gap)+    start];    ch    =    buffer[random.nextInt(gap)+    start],    letters);    	non-compiled	[CE]  ';'  expected	85	None	replace
45	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start],  numbers);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start],  numbers);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start],  numbers);	  ch    =    buffer[random.nextInt(gap)+    start];    ch    =    buffer[random.nextInt(gap)+    start],    letters);    	non-compiled	[CE]  ';'  expected	85	None	replace
46	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  end],  letters);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  end],  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  end],  letters);	  ch    =    buffer[random.nextInt(gap)+    start];    ch    =    buffer[random.nextInt(gap)+    start],    letters);    	non-compiled	[CE]  ';'  expected	85	None	replace
47	[BUG]  [BUGGY]  chars[random.nextInt(gap)+1],  start,  count);  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+1],  start,  count);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+1],  start,  count);	  chars[random.nextInt(gap)+1],    start,    letters);    	non-compiled	[CE]  not  a  statement	81	None	replace
48	[BUG]  [BUGGY]  chars[random.nextInt(gap)+1],  start,  count,  letters);  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+1],  start,  count,  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+1],  start,  count,  letters);	  chars[random.nextInt(gap)+1],    start,    letters);    	non-compiled	[CE]  not  a  statement	81	None	replace
49	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  1,  start,  count);  [CE]  ']'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  1,  start,  count);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  1,  start,  count);	  chars[random.nextInt(gap)+1],    start,    letters);    	non-compiled	[CE]  ']'  expected	81	None	replace
50	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  1,  start,  numbers);  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  1,  start,  numbers);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  1,  start,  numbers);	  chars[random.nextInt(gap)+1],    start,    letters);    	non-compiled	[CE]  ']'  expected	81	None	replace
51	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  2  +  end];  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  2  +  end];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  +  2  +  end];	  char[]    buffer    =    new    char[buffer.length    *    2    +    end];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
52	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  /  2  +  end];  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  /  2  +  end];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  /  2  +  end];	  char[]    buffer    =    new    char[buffer.length    *    2    +    end];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
53	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(gap,  start,  count);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(gap,  start,  count);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(gap,  start,  count);	  char[]    buffer    =    random.getChars(count,    start,    start);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
54	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  0,  start);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(count,  0,  start);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(count,  0,  start);	  char[]    buffer    =    random.getChars(count,    start,    start);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
55	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end  +  1);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end  +  1);	  char[]    buffer    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
56	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  letters);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  start  +  1,  letters);	  char[]    buffer    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
57	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(gap,  start  +  1);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(gap,  start  +  1);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(gap,  start  +  1);	  char[]    buffer    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
58	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  start  +  count];  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  start  +  count];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  +  start  +  count];	  char[]    buffer    =    new    char[buffer.length    *    2    +    start    +    count];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
59	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  end  +  count];  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  end  +  count];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  end  +  count];	  char[]    buffer    =    new    char[buffer.length    *    2    +    start    +    count];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
60	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  count  +  1];  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  count  +  1];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  count  +  1];	  char[]    buffer    =    new    char[buffer.length    *    2    +    start    +    count];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
61	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  +  1;  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  +  1;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start]  +  1;	  ch    =    chars[random.nextInt(gap)+    start]    +    RANDOM;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
62	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  1]  +  RANDOM;  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  1]  +  RANDOM;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  1]  +  RANDOM;	  ch    =    chars[random.nextInt(gap)+    start]    +    RANDOM;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
63	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  2  +  start];  [CE]  illegal  start  of  expression  [FE]        ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)/  2  +  start];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  2  +  start];	  ch    =    chars[random.nextInt(gap)/    2];    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
64	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  2  +  1];  [CE]  illegal  start  of  expression  [FE]          ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)/  2  +  1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  2  +  1];	  ch    =    chars[random.nextInt(gap)/    2];    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
65	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+1;  [CE]  ']'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+1;  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+1;	  ch    =    chars[random.nextInt(gap)+    start-1];    ch    =    chars[random.nextInt(gap)+1    start-1];    	non-compiled	[CE]  ']'  expected	24	None	replace
66	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2];  [CE]  ']'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2];	  char[]    buffer    =    new    char[buffer.length    *    2    +    4];    	non-compiled	[CE]  ']'  expected	77	None	replace
67	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1)];  [CE]  ']'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1)];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start-1)];	  ch    =    chars[random.nextInt(gap)+    start-1];    ch    =    chars[random.nextInt(gap)+    start-1)];    	non-compiled	[CE]  ']'  expected	71	None	replace
68	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+1  start  +  1];  [CE]  ']'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+1  start  +  1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+1  start  +  1];	  ch    =    chars[random.nextInt(gap)+    start    +    1];    ch    =    chars[random.nextInt(gap)+1    start    +    1];    	non-compiled	[CE]  ']'  expected	69	None	replace
69	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+1  1];  [CE]  ']'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+1  1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+1  1];	  ch    =    chars[random.nextInt(gap)+    start    +    1];    ch    =    chars[random.nextInt(gap)+1    start    +    1];    	non-compiled	[CE]  ']'  expected	69	None	replace
70	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  2];  ch  =  chars[random.nextInt(gap)+1  start  +  2];  [CE]  ']'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  2];  ch  =  chars[random.nextInt(gap)+1  start  +  2];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start  +  2];  ch  =  chars[random.nextInt(gap)+1  start  +  2];	  ch    =    chars[random.nextInt(gap)+    start    +    1];    ch    =    chars[random.nextInt(gap)+1    start    +    1];    	non-compiled	[CE]  ']'  expected	69	None	replace
71	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  letters);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(count,  start,  letters);	  char[]    buffer    =    random.getChars(start,    start,    letters);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
72	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  count,  letters);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  count,  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  start,  count,  letters);	  char[]    buffer    =    random.getChars(start,    start,    letters);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
73	[BUG]  [BUGGY]  chars  =  buffer[random.nextInt(gap)+  end];  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars  =  buffer[random.nextInt(gap)+  end];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars  =  buffer[random.nextInt(gap)+  end];	  chars    =    chars[random.nextInt(gap)+    end];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
74	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  3];  [CE]  illegal  start  of  expression  [FE]            ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)/  3];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  3];	  ch    =    chars[random.nextInt(gap)/    4];    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
75	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  +  buffer.length;  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  +  buffer.length;  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start]  +  buffer.length;	  ch    =    buffer[random.nextInt(gap)+    start]    +    chars.length;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
76	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start]  +  end;  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start]  +  end;  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start]  +  end;	  ch    =    buffer[random.nextInt(gap)+    start]    +    chars.length;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
77	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  +  end;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  +  end;  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start]  +  end;	  ch    =    buffer[random.nextInt(gap)+    start]    +    chars.length;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
78	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  start]  =  RANDOM  +  1;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  start]  =  RANDOM  +  1;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  start]  =  RANDOM  +  1;	  chars[random.nextInt(gap)+    start]    =    RANDOM;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
79	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  start]  =  0;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  start]  =  0;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  start]  =  0;	  chars[random.nextInt(gap)+    start]    =    RANDOM;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
80	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  end,  chars.length);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  end,  chars.length);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(count,  start,  end,  chars.length);	  char[]    buffer    =    random.getChars(start,    end,    chars.length);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
81	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count,  chars.length);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  count,  chars.length);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  count,  chars.length);	  char[]    buffer    =    random.getChars(start,    end,    chars.length);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
82	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  chars.length);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  end,  chars.length);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(ch,  start,  end,  chars.length);	  char[]    buffer    =    random.getChars(start,    end,    chars.length);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
83	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0,  chars.length);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0,  chars.length);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  0,  chars.length);	  char[]    buffer    =    random.getChars(start,    end,    chars.length);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
84	[BUG]  [BUGGY]  ch  =  CHARs[random.nextInt(gap)/  start];  [CE]  illegal  start  of  expression  [FE]            ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  CHARs[random.nextInt(gap)/  start];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  CHARs[random.nextInt(gap)/  start];	  ch    =    chars[random.nextInt(gap)/    start];    ch    =    CHARs[random.nextInt(gap)/    start];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
85	[BUG]  [BUGGY]  ch  =  CHARs[random.nextInt(gap)/  2];  [CE]  illegal  start  of  expression  [FE]              ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  CHARs[random.nextInt(gap)/  2];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  CHARs[random.nextInt(gap)/  2];	  ch    =    chars[random.nextInt(gap)/    start];    ch    =    CHARs[random.nextInt(gap)/    start];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
86	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  start  +  1];  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  +  start  +  1];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  +  start  +  1];	  char[]    buffer    =    new    char[buffer.length    *    2    +    start    +    1];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
87	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  end  +  1];  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  end  +  1];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  end  +  1];	  char[]    buffer    =    new    char[buffer.length    *    2    +    start    +    1];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
88	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  4];  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  4];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  4];	  char[]    buffer    =    new    char[buffer.length    *    2    +    start    +    1];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
89	[BUG]  [BUGGY]  char  ch  =  buffer[random.nextInt(gap)+  start  +  1];  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char  ch  =  buffer[random.nextInt(gap)+  start  +  1];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char  ch  =  buffer[random.nextInt(gap)+  start  +  1];	  char    ch    =    chars[random.nextInt(gap)+    start    +    1];    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
90	[BUG]  [BUGGY]  chars  =  chars[random.nextInt(gap)+  start],  numbers);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars  =  chars[random.nextInt(gap)+  start],  numbers);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars  =  chars[random.nextInt(gap)+  start],  numbers);	  chars    =    chars[random.nextInt(gap)+    start],    letters);    	non-compiled	[CE]  ';'  expected	68	None	replace
91	[BUG]  [BUGGY]  chars  =  chars[random.nextInt(gap)+  start],  letters,  numbers);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars  =  chars[random.nextInt(gap)+  start],  letters,  numbers);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars  =  chars[random.nextInt(gap)+  start],  letters,  numbers);	  chars    =    chars[random.nextInt(gap)+    start],    letters);    	non-compiled	[CE]  ';'  expected	68	None	replace
92	[BUG]  [BUGGY]  chars  =  chars[random.nextInt(gap)+  1],  letters);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars  =  chars[random.nextInt(gap)+  1],  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars  =  chars[random.nextInt(gap)+  1],  letters);	  chars    =    chars[random.nextInt(gap)+    start],    letters);    	non-compiled	[CE]  ';'  expected	68	None	replace
93	[BUG]  [BUGGY]  char[]  buffer  =  new  char[random.nextInt(gap)+  start];  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[random.nextInt(gap)+  start];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[random.nextInt(gap)+  start];	  char[]    buffer    =    new    char[random.nextInt(gap)];    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
94	[BUG]  [BUGGY]  char[]  buffer  =  new  char[random.nextInt(gap)+1];  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[random.nextInt(gap)+1];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[random.nextInt(gap)+1];	  char[]    buffer    =    new    char[random.nextInt(gap)];    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
95	[BUG]  [BUGGY]  char[]  buffer  =  new  char[random.nextInt(gap  +  1)];  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[random.nextInt(gap  +  1)];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[random.nextInt(gap  +  1)];	  char[]    buffer    =    new    char[random.nextInt(gap)];    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
96	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  start  +  1;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  start  +  1;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  start  +  1;	  chars[random.nextInt(gap)]    =    RANDOM    +    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
97	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  ','  +  1;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  ','  +  1;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  ','  +  1;	  chars[random.nextInt(gap)]    =    RANDOM    +    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
98	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  '+'  +  1;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  '+'  +  1;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  '+'  +  1;	  chars[random.nextInt(gap)]    =    RANDOM    +    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
99	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  '+';  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  '+';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  '+';	  chars[random.nextInt(gap)]    =    RANDOM    +    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
100	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start-1];  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start-1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start-1];	  ch    =    chars[random.nextInt(gap)+    start-1];    ch    =    chars[random.nextInt(gap)+    start-1];    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
101	[BUG]  [BUGGY]  char  ch  =  buffer[random.nextInt(gap)+  end];  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char  ch  =  buffer[random.nextInt(gap)+  end];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char  ch  =  buffer[random.nextInt(gap)+  end];	  char    ch    =    chars[random.nextInt(gap)+    end];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
102	[BUG]  [BUGGY]  char  ch  =  chars[random.nextInt(gap)+1  start];  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char  ch  =  chars[random.nextInt(gap)+1  start];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char  ch  =  chars[random.nextInt(gap)+1  start];	  char    ch    =    chars[random.nextInt(gap)+    end];    	non-compiled	[CE]  ']'  expected	38	None	replace
103	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0,  count);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  0,  count);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  0,  count);	  char[]    buffer    =    random.getChars(start,    end,    0);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
104	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  1);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  1);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  1);	  char[]    buffer    =    random.getChars(start,    end,    0);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
105	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  end,  0);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(count,  start,  end,  0);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(count,  start,  end,  0);	  char[]    buffer    =    random.getChars(start,    end,    0);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
106	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  4);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  4);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  4);	  char[]    buffer    =    random.getChars(start,    end,    0);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
107	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  1);  [CE]  ']'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  1);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  1);	  chars[random.nextInt(gap)+1    start];    	non-compiled	[CE]  ']'  expected	57	None	replace
108	[BUG]  [BUGGY]  char[]  buffer  =  new  char[random.nextInt(gap)+  start  +  1];  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[random.nextInt(gap)+  start  +  1];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[random.nextInt(gap)+  start  +  1];	  char[]    buffer    =    new    char[buffer.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
109	[BUG]  [BUGGY]  chars[random.nextInt(gap)+1]  =  start;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+1]  =  start;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+1]  =  start;	  chars[random.nextInt(gap)+1]    =    RANDOM;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
110	[BUG]  [BUGGY]  chars[random.nextInt(gap)+1]  =  ch;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+1]  =  ch;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+1]  =  ch;	  chars[random.nextInt(gap)+1]    =    RANDOM;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
111	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  1]  =  ',';  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  1]  =  ',';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  1]  =  ',';	  chars[random.nextInt(gap)+1]    =    RANDOM;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
112	[BUG]  [BUGGY]  char[random.nextInt(gap)]  =  ',';  [CE]  ']'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)]  =  ',';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)]  =  ',';	  char[random.nextInt(gap)]    =    RANDOM;    	non-compiled	[CE]  ']'  expected	31	None	replace
113	[BUG]  [BUGGY]  char[random.nextInt(gap)]  ='}  ';  [CE]  ']'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)]  ='}  ';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)]  ='}  ';	  char[random.nextInt(gap)]    =    RANDOM;    	non-compiled	[CE]  ']'  expected	31	None	replace
114	[BUG]  [BUGGY]  char[random.nextInt(gap)]  =  ' "';  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)]  =  ' "';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)]  =  ' "';	  char[random.nextInt(gap)]    =    RANDOM;    	non-compiled	[CE]  	31	None	replace
115	[BUG]  [BUGGY]  char[random.nextInt(gap)]  =  '/';  [CE]  ']'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)]  =  '/';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)]  =  '/';	  char[random.nextInt(gap)]    =    RANDOM;    	non-compiled	[CE]  ']'  expected	31	None	replace
116	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  end-1);  [CE]  ']'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  end-1);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  end-1);	  ch    =    chars[random.nextInt(gap)+    start-1];    ch    =    chars[random.nextInt(gap)+    start-1);    	non-compiled	[CE]  ']'  expected	25	None	replace
117	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  ch);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  ch);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  ch);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
118	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  letters);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(ch,  start,  letters);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
119	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  0,  start);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(ch,  0,  start);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
120	[BUG]  [BUGGY]  char[]  buffer  =  chars[random.nextInt(gap)+  2];  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  chars[random.nextInt(gap)+  2];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  chars[random.nextInt(gap)+  2];	  char[]    buffer    =    chars[random.nextInt(gap)+1];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
121	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  end;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  end;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  end;	  chars[random.nextInt(gap)]    =    start;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
122	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  ',';  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  ',';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  ',';	  chars[random.nextInt(gap)]    =    start;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
123	[BUG]  [BUGGY]  chars  =  buffer[random.nextInt(gap)+  2];  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars  =  buffer[random.nextInt(gap)+  2];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars  =  buffer[random.nextInt(gap)+  2];	  chars    =    chars[random.nextInt(gap)+    2];    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
124	[BUG]  [BUGGY]  char[random.nextInt(gap)]  =  start  +  1;  [CE]  ']'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)]  =  start  +  1;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)]  =  start  +  1;	  char[random.nextInt(gap)]    =    start;    	non-compiled	[CE]  ']'  expected	32	None	replace
125	[BUG]  [BUGGY]  char[random.nextInt(gap)]  =  end;  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)]  =  end;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)]  =  end;	  char[random.nextInt(gap)]    =    start;    	non-compiled	[CE]  	32	None	replace
126	[BUG]  [BUGGY]  char[random.nextInt(gap)]  =  '+';  [CE]  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)]  =  '+';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)]  =  '+';	  char[random.nextInt(gap)]    =    start;    	non-compiled	[CE]  	32	None	replace
127	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  RANDOM  +  start  +  1;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  RANDOM  +  start  +  1;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  RANDOM  +  start  +  1;	  chars[random.nextInt(gap)]    =    RANDOM    +    start;    	non-compiled	[CE]  	79	None	replace
128	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  start  +  RANDOM;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  start  +  RANDOM;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  start  +  RANDOM;	  chars[random.nextInt(gap)]    =    RANDOM    +    start;    	non-compiled	[CE]  	79	None	replace
129	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  start  +  count;  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  start  +  count;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  start  +  count;	  chars[random.nextInt(gap)]    =    RANDOM    +    start;    	non-compiled	[CE]  	79	None	replace
130	[BUG]  [BUGGY]  ch  =(char)(random.nextInt(gap)/  start];  [CE]  [FE]        ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =(char)(random.nextInt(gap)/  start];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =(char)(random.nextInt(gap)/  start];	  ch    =    chars[random.nextInt(gap)/    start];    ch    =(char)(random.nextInt(gap)/    start];    	non-compiled	[CE]  	83	None	replace
131	[BUG]  [BUGGY]  ch  =(char)(random.nextInt(gap)/  2];  [CE]  [FE]          ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =(char)(random.nextInt(gap)/  2];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =(char)(random.nextInt(gap)/  2];	  ch    =    chars[random.nextInt(gap)/    start];    ch    =(char)(random.nextInt(gap)/    start];    	non-compiled	[CE]  	83	None	replace
132	[BUG]  [BUGGY]  ch  =(char)(random.nextInt(gap)/  1];  [CE]  [FE]            ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =(char)(random.nextInt(gap)/  1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =(char)(random.nextInt(gap)/  1];	  ch    =    chars[random.nextInt(gap)/    start];    ch    =(char)(random.nextInt(gap)/    start];    	non-compiled	[CE]  	83	None	replace
133	[BUG]  [BUGGY]  ch  =(char)(random.nextInt(gap)/  2);  [CE]  [FE]              ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =(char)(random.nextInt(gap)/  2);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =(char)(random.nextInt(gap)/  2);	  ch    =    chars[random.nextInt(gap)/    start];    ch    =(char)(random.nextInt(gap)/    start];    	non-compiled	[CE]  	83	None	replace
134	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  4];  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  4];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  4];	  char[]    buffer    =    new    char[buffer.length    *    start];    	non-compiled	[CE]  	62	None	replace
135	[BUG]  [BUGGY]  char[]  buffer  =  new  char[random.nextInt(gap)*  start];  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[random.nextInt(gap)*  start];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[random.nextInt(gap)*  start];	  char[]    buffer    =    new    char[buffer.length    *    start];    	non-compiled	[CE]  	62	None	replace
136	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+  start  +  1];  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+  start  +  1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+  start  +  1];	  ch    =    chars[random.nextInt(gap)+    start    +    1];    ch    =    chars[random.nextInt(gap)+    start    +    1];    }    	non-compiled	[CE]  	36	None	replace
137	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start  +  1];  ch  =  buffer[random.nextInt(gap)+  start  +  1];  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start  +  1];  ch  =  buffer[random.nextInt(gap)+  start  +  1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start  +  1];  ch  =  buffer[random.nextInt(gap)+  start  +  1];	  ch    =    chars[random.nextInt(gap)+    start    +    1];    ch    =    chars[random.nextInt(gap)+    start    +    1];    }    	non-compiled	[CE]  	36	None	replace
138	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+  start  +  1];  }  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+  start  +  1];  }  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+  start  +  1];  }	  ch    =    chars[random.nextInt(gap)+    start    +    1];    ch    =    chars[random.nextInt(gap)+    start    +    1];    }    	non-compiled	[CE]  	36	None	replace
139	[BUG]  [BUGGY]  char[random.nextInt(gap)+  1];  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)+  1];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)+  1];	  char[random.nextInt(gap)+    start];    	non-compiled	[CE]  	2	None	replace
140	[BUG]  [BUGGY]  char[random.nextInt(gap)+  start]  +  1;  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)+  start]  +  1;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)+  start]  +  1;	  char[random.nextInt(gap)+    start];    	non-compiled	[CE]  	2	None	replace
141	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start  +  2];  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start  +  2];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start  +  2];	  ch    =    buffer[random.nextInt(gap)+    start    +    1];    	non-compiled	[CE]  	12	None	replace
142	[BUG]  [BUGGY]  ch  =  CHARs[random.nextInt(gap)+  start];  [CE]  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  CHARs[random.nextInt(gap)+  start];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  CHARs[random.nextInt(gap)+  start];	          ch    =    chars[random.nextInt(gap)+    start];    ch    =    CHARs[random.nextInt(gap)+    start];    	non-compiled	[CE]  	19	None	replace
143	[BUG]  [BUGGY]  if(letters)  {  ch  =  CHARs[random.nextInt(gap)+  start];  ch  =  CHARs[random.nextInt(gap)+  start];  }  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  if(letters)  {  ch  =  CHARs[random.nextInt(gap)+  start];  ch  =  CHARs[random.nextInt(gap)+  start];  }  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	if(letters)  {  ch  =  CHARs[random.nextInt(gap)+  start];  ch  =  CHARs[random.nextInt(gap)+  start];  }	          ch    =    chars[random.nextInt(gap)+    start];    ch    =    CHARs[random.nextInt(gap)+    start];    	non-compiled	[CE]  	19	None	replace
144	[BUG]  [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  CHARs[random.nextInt(gap)+  start];  }  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  CHARs[random.nextInt(gap)+  start];  }  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	if(letters)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  CHARs[random.nextInt(gap)+  start];  }	          ch    =    chars[random.nextInt(gap)+    start];    ch    =    CHARs[random.nextInt(gap)+    start];    	non-compiled	[CE]  	19	None	replace
145	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  begin];  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  begin];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  begin];	  ch    =    buffer[random.nextInt(gap)+    start];    ch    =    buffer[random.nextInt(gap)+    begin];    	non-compiled	[CE]  	28	None	replace
146	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  begin];  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)+  begin];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  begin];	  ch    =    buffer[random.nextInt(gap)+    start];    ch    =    buffer[random.nextInt(gap)+    begin];    	non-compiled	[CE]  	28	None	replace
147	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  start]  +  ch;  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  start]  +  ch;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  start]  +  ch;	  chars[random.nextInt(gap)+1]    +    start;    	non-compiled	[CE]  not  a  statement	73	None	replace
148	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  start]  +  offset;  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  start]  +  offset;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  start]  +  offset;	  chars[random.nextInt(gap)+1]    +    start;    	non-compiled	[CE]  not  a  statement	73	None	replace
149	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  start]  =  '0';  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  start]  =  '0';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  start]  =  '0';	  chars[random.nextInt(gap)]    =    '0';    	non-compiled	[CE]  	22	None	replace
150	[BUG]  [BUGGY]  chars[random.nextInt(gap)+1]  =  '0';  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+1]  =  '0';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+1]  =  '0';	  chars[random.nextInt(gap)]    =    '0';    	non-compiled	[CE]  	22	None	replace
151	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  count);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  count);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(0,  start,  count);	  char[]    buffer    =    random.getChars(count,    start,    start);    	non-compiled	[CE]  	86	None	replace
152	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+1  start];  [CE]  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+1  start];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+1  start];	  ch    =    chars[random.nextInt(gap)+    start-1];    ch    =    chars[random.nextInt(gap)+1    start-1];    	non-compiled	[CE]  	24	None	replace
153	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+1  end-1];  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+1  end-1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+1  end-1];	  ch    =    chars[random.nextInt(gap)+    start-1];    ch    =    chars[random.nextInt(gap)+1    start-1];    	non-compiled	[CE]  	24	None	replace
154	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+1];  [CE]  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+1];	  ch    =    chars[random.nextInt(gap)+    start    +    1];    ch    =    chars[random.nextInt(gap)+    start    +    1)];    	non-compiled	[CE]  	35	None	replace
155	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  0);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  0);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(ch,  start,  0);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  	47	None	replace
156	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  count);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(ch,  start,  count);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(ch,  start,  count);	  char[]    buffer    =    random.getChars(ch,    start);    	non-compiled	[CE]  	47	None	replace
157	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  1  +  start];  [CE]  [FE]          ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)/  1  +  start];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  1  +  start];	  ch    =    chars[random.nextInt(gap)/    1];    	non-compiled	[CE]  	16	None	replace
158	[BUG]  [BUGGY]  char[random.nextInt(gap)+1]  =  start;  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)+1]  =  start;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)+1]  =  start;	  char[random.nextInt(gap)]    =    start;    	non-compiled	[CE]  	32	None	replace
159	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  start],  letters);  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  start],  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  start],  letters);	  ch    =    buffer[random.nextInt(gap)+    start];    ch    =    buffer[random.nextInt(gap)+    start],    letters);    	non-compiled	[CE]  	85	None	replace
160	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  start];  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  start];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  start];	  ch    =    buffer[random.nextInt(gap)+    start];    ch    =    buffer[random.nextInt(gap)+    start];    	non-compiled	[CE]  	26	None	replace
161	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+1  start-1);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+1  start-1);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+1  start-1);	  ch    =    chars[random.nextInt(gap)+    start-1];    ch    =    chars[random.nextInt(gap)+    start-1);    	non-compiled	[CE]  	25	None	replace
162	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  numbers);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start  +  1,  numbers);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  start  +  1,  numbers);	  char[]    buffer    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  	46	None	replace
163	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  1];  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  1];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  1];	  char[]    buffer    =    new    char[buffer.length    +    1];    	non-compiled	[CE]  	52	None	replace
164	[BUG]  [BUGGY]  chars  =  chars[random.nextInt(gap)+1  start];  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars  =  chars[random.nextInt(gap)+1  start];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars  =  chars[random.nextInt(gap)+1  start];	  chars    =    chars[random.nextInt(gap)+    end];    	non-compiled	[CE]  	50	None	replace
165	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  *  RANDOM;  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  *  RANDOM;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start]  *  RANDOM;	  ch    =    chars[random.nextInt(gap)+    start]    +    RANDOM;    	non-compiled	[CE]  	65	None	replace
166	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  +  RANDOM  +  1;  [CE]  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  +  RANDOM  +  1;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start]  +  RANDOM  +  1;	  ch    =    chars[random.nextInt(gap)+    start]    +    RANDOM;    	non-compiled	[CE]  	65	None	replace
167	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  start  +  2;  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  start  +  2;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  start  +  2;	  chars[random.nextInt(gap)]    =    start;    	non-compiled	[CE]  	29	None	replace
168	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+1  end  +  1];  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+1  end  +  1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+1  end  +  1];	  ch    =    chars[random.nextInt(gap)+    start    +    1];    ch    =    chars[random.nextInt(gap)+1    start    +    1];    	non-compiled	[CE]  	69	None	replace
169	[BUG]  [BUGGY]  char[]  buffer  =  chars[random.nextInt(gap  +  1)];  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  chars[random.nextInt(gap  +  1)];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  chars[random.nextInt(gap  +  1)];	  char[]    buffer    =    chars[random.nextInt(gap)];    	non-compiled	[CE]  	20	None	replace
170	[BUG]  [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+  start  +  1];  }  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+  start  +  1];  }  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	if(letters)  {  ch  =  chars[random.nextInt(gap)+  start  +  1];  ch  =  chars[random.nextInt(gap)+  start  +  1];  }	  ch    =    chars[random.nextInt(gap)+    start    +    1];    ch    =    chars[random.nextInt(gap)+    start    +    1];    }    	non-compiled	[CE]  	36	None	replace
171	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start  +  1];  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start  +  1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start  +  1];	  ch    =    chars[random.nextInt(gap)+    start    +    1];    ch    =    chars[random.nextInt(gap)+    start    +    1];    }    	non-compiled	[CE]  	36	None	replace
172	[BUG]  [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  start-1];  }  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  start-1];  }  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	if(letters)  {  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  start-1];  }	  ch    =    chars[random.nextInt(gap)+    start-1];    ch    =    chars[random.nextInt(gap)+    start-1];    }    	non-compiled	[CE]  	82	None	replace
173	[BUG]  [BUGGY]  chars[random.nextInt(gap)+1]  =  RANDOM  +  1;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+1]  =  RANDOM  +  1;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+1]  =  RANDOM  +  1;	  chars[random.nextInt(gap)]    =    RANDOM    +    1;    	non-compiled	[CE]  	30	None	replace
174	[BUG]  [BUGGY]  chars[random.nextInt(gap)-  start]  =  ch;  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)-  start]  =  ch;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)-  start]  =  ch;	  chars[random.nextInt(gap)]    =    ch;    	non-compiled	[CE]  	78	None	replace
175	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  letters);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  start,  end,  letters);	  char[]    buffer    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  	9	None	replace
176	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end  +  1);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end  +  1);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  start,  end  +  1);	  char[]    buffer    =    random.getChars(start,    start,    end);    	non-compiled	[CE]  	9	None	replace
177	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  length];  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  length];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  length];	  char[]    buffer    =    new    char[buffer.length    *    2    +    start    +    count];    	non-compiled	[CE]  	55	None	replace
178	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  end];  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  end];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  start  +  end];	  char[]    buffer    =    new    char[buffer.length    *    2    +    start    +    count];    	non-compiled	[CE]  	55	None	replace
179	[BUG]  [BUGGY]  char[random.nextInt(gap)+  start]  =  '#';  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)+  start]  =  '#';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)+  start]  =  '#';	  char[random.nextInt(gap)+    start];    	non-compiled	[CE]  	2	None	replace
180	[BUG]  [BUGGY]  char[random.nextInt(gap)+  start]  =  '/';  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)+  start]  =  '/';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)+  start]  =  '/';	  char[random.nextInt(gap)+    start];    	non-compiled	[CE]  	2	None	replace
181	[BUG]  [BUGGY]  char[random.nextInt(gap)+  start]  =  ' "';  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)+  start]  =  ' "';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)+  start]  =  ' "';	  char[random.nextInt(gap)+    start];    	non-compiled	[CE]  	2	None	replace
182	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  0);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  0);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  start,  0);	  char[]    buffer    =    random.getChars(start,    start,    letters);    	non-compiled	[CE]  	87	None	replace
183	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  0,  letters);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  0,  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  start,  0,  letters);	  char[]    buffer    =    random.getChars(start,    start,    letters);    	non-compiled	[CE]  	87	None	replace
184	[BUG]  [BUGGY]  chars[random.nextInt(gap)+1],  start  +  1];  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+1],  start  +  1];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+1],  start  +  1];	  chars[random.nextInt(gap)+1    start];    	non-compiled	[CE]  not  a  statement	57	None	replace
185	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  ch);	  char[]    buffer    =    random.getChars(ch,    start,    end);    	non-compiled	[CE]  	11	None	replace
186	[BUG]  [BUGGY]  ch  =(char)(random.nextInt(gap)+  start);  [CE]  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =(char)(random.nextInt(gap)+  start);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =(char)(random.nextInt(gap)+  start);	  ch    =    buffer[random.nextInt(gap)+    1];    	non-compiled	[CE]  	13	None	replace
187	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  start  *  2];  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  start  *  2];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  start  *  2];	  char[]    buffer    =    new    char[buffer.length    *    2    +    start    +    1];    	non-compiled	[CE]  	42	None	replace
188	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  /  2  +  start  +  1];  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  /  2  +  start  +  1];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  /  2  +  start  +  1];	  char[]    buffer    =    new    char[buffer.length    *    2    +    start    +    1];    	non-compiled	[CE]  	42	None	replace
189	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  *  2];  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  *  2];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start  *  2];	  ch    =    chars[random.nextInt(gap)+    start    +    2];    	non-compiled	[CE]  	45	None	replace
190	[BUG]  [BUGGY]  chars[random.nextInt(gap)+1],  start,  letters,  numbers);  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+1],  start,  letters,  numbers);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+1],  start,  letters,  numbers);	  chars[random.nextInt(gap)+1],    start,    letters);    	non-compiled	[CE]  not  a  statement	81	None	replace
191	[BUG]  [BUGGY]  chars[random.nextInt(gap)+1],  start,  numbers);  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+1],  start,  numbers);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+1],  start,  numbers);	  chars[random.nextInt(gap)+1],    start,    letters);    	non-compiled	[CE]  not  a  statement	81	None	replace
192	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  start],  letters,  numbers);  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  start],  letters,  numbers);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  start],  letters,  numbers);	  chars[random.nextInt(gap)+1],    start,    letters);    	non-compiled	[CE]  not  a  statement	81	None	replace
193	[BUG]  [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+1  start];  ch  =  chars[random.nextInt(gap)+1  start];  }  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+1  start];  ch  =  chars[random.nextInt(gap)+1  start];  }  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	if(letters)  {  ch  =  chars[random.nextInt(gap)+1  start];  ch  =  chars[random.nextInt(gap)+1  start];  }	          ch    =    chars[random.nextInt(gap)+    start];    ch    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  	18	None	replace
194	[BUG]  [BUGGY]  ch  =  CHARS[random.nextInt(gap)/  start];  [CE]  [FE]            ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  CHARS[random.nextInt(gap)/  start];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  CHARS[random.nextInt(gap)/  start];	  ch    =    chars[random.nextInt(gap)/    start];    ch    =    CHARs[random.nextInt(gap)/    start];    	non-compiled	[CE]  	6	None	replace
195	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+1];  [CE]  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+1];	  ch    =    buffer[random.nextInt(gap)+    start];    ch    =    buffer[random.nextInt(gap)+1    start];    	non-compiled	[CE]  	27	None	replace
196	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  chars.length);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  start,  end,  chars.length);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  start,  end,  chars.length);	  char[]    buffer    =    random.getChars(start,    end,    chars.length);    	non-compiled	[CE]  	61	None	replace
197	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars.length,  letters);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars.length,  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  chars.length,  letters);	  char[]    buffer    =    random.getChars(start,    end,    chars.length);    	non-compiled	[CE]  	61	None	replace
198	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch,  chars.length);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch,  chars.length);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  ch,  chars.length);	  char[]    buffer    =    random.getChars(start,    end,    chars.length);    	non-compiled	[CE]  	61	None	replace
199	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  length];  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  length];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  length];	  char[]    buffer    =    new    char[buffer.length    *    2    +    count];    	non-compiled	[CE]  	76	None	replace
200	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  1)];  [CE]  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  1)];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  1)];	  ch    =    chars[random.nextInt(gap)+    1];    ch    =    chars[random.nextInt(gap)+    1)];    	non-compiled	[CE]  	40	None	replace
201	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  1];  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  1];	  ch    =    chars[random.nextInt(gap)+    1];    ch    =    chars[random.nextInt(gap)+    1)];    	non-compiled	[CE]  	40	None	replace
202	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1]  +  RANDOM;  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1]  +  RANDOM;  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start  +  1]  +  RANDOM;	  ch    =    chars[random.nextInt(gap)+    1]    +    start;    	non-compiled	[CE]  	58	None	replace
203	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  letters,  numbers);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  letters,  numbers);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  letters,  numbers);	  char[]    buffer    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  	8	None	replace
204	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch,  letters);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  ch,  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  ch,  letters);	  char[]    buffer    =    random.getChars(start,    end,    letters);    	non-compiled	[CE]  	8	None	replace
205	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+1  +  start];  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+1  +  start];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+1  +  start];	  ch    =    chars[random.nextInt(gap)+1    start];    	non-compiled	[CE]  	33	None	replace
206	[BUG]  [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+  1];  }  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+  1];  }  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	if(letters)  {  ch  =  chars[random.nextInt(gap)+  1];  ch  =  chars[random.nextInt(gap)+  1];  }	  ch    =    chars[random.nextInt(gap)+    1];    ch    =    chars[random.nextInt(gap)+    1];    }    	non-compiled	[CE]  	41	None	replace
207	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  3];  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  3];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  3];	  char[]    buffer    =    new    char[buffer.length    *    start];    	non-compiled	[CE]  	62	None	replace
208	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  1],  letters);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  1],  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  1],  letters);	  char[]    buffer    =    new    char[buffer.length    *    2    +    1];    	non-compiled	[CE]  	43	None	replace
209	[BUG]  [BUGGY]  char[random.nextInt(gap)+  start]  =  RANDOM;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)+  start]  =  RANDOM;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)+  start]  =  RANDOM;	  char[random.nextInt(gap)]    =    RANDOM;    	non-compiled	[CE]  	31	None	replace
210	[BUG]  [BUGGY]  char[random.nextInt(gap)+1]  =  RANDOM;  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)+1]  =  RANDOM;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)+1]  =  RANDOM;	  char[random.nextInt(gap)]    =    RANDOM;    	non-compiled	[CE]  	31	None	replace
211	[BUG]  [BUGGY]  char  ch  =  chars[random.nextInt(gap)];  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char  ch  =  chars[random.nextInt(gap)];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char  ch  =  chars[random.nextInt(gap)];	  char[random.nextInt(gap)]    =    RANDOM;    	non-compiled	[CE]  	31	None	replace
212	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  +  start  +  1];  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  +  start  +  1];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  +  start  +  1];	  chars[random.nextInt(gap)]    +    start];    	non-compiled	[CE]  not  a  statement	66	None	replace
213	[BUG]  [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  start-1];  }  else  {  ch  =  '  [CE]  illegal  line  end  in  character  literal  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  start-1];  }  else  {  ch  =  '  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	if(letters)  {  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  start-1];  }  else  {  ch  =  '	  ch    =    chars[random.nextInt(gap)+    start-1];    ch    =    chars[random.nextInt(gap)+    start-1];    	non-compiled	[CE]  illegal  line  end  in  character  literal	23	None	replace
214	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  2];  ch  =  chars[random.nextInt(gap)/  2];  [CE]  [FE]          ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)/  2];  ch  =  chars[random.nextInt(gap)/  2];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  2];  ch  =  chars[random.nextInt(gap)/  2];	  ch    =    chars[random.nextInt(gap)/    start];    ch    =    chars[random.nextInt(gap)/    start];    }    	non-compiled	[CE]  	84	None	replace
215	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  1];  ch  =  chars[random.nextInt(gap)/  1];  [CE]  [FE]            ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)/  1];  ch  =  chars[random.nextInt(gap)/  1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  1];  ch  =  chars[random.nextInt(gap)/  1];	  ch    =    chars[random.nextInt(gap)/    start];    ch    =    chars[random.nextInt(gap)/    start];    }    	non-compiled	[CE]  	84	None	replace
216	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  4  +  start];  [CE]  [FE]            ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)/  4  +  start];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  4  +  start];	  ch    =    chars[random.nextInt(gap)/    4];    	non-compiled	[CE]  	17	None	replace
217	[BUG]  [BUGGY]  char[]  buffer  =  chars[random.nextInt(gap)+1  +  start];  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  chars[random.nextInt(gap)+1  +  start];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  chars[random.nextInt(gap)+1  +  start];	  char[]    buffer    =    chars[random.nextInt(gap)+1];    	non-compiled	[CE]  	1	None	replace
218	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  start  +  end;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  start  +  end;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  start  +  end;	  chars[random.nextInt(gap)]    =    RANDOM    +    start;    	non-compiled	[CE]  	79	None	replace
219	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  start]  +  buffer;  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  start]  +  buffer;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  start]  +  buffer;	  chars[random.nextInt(gap)+1]    +    start;    	non-compiled	[CE]  not  a  statement	73	None	replace
220	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  begin];  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  begin];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  begin];	  ch    =    buffer[random.nextInt(gap)+    start];    ch    =    buffer[random.nextInt(gap)+    begin];    	non-compiled	[CE]  	28	None	replace
221	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start]  *  chars.length;  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start]  *  chars.length;  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start]  *  chars.length;	  ch    =    buffer[random.nextInt(gap)+    start]    +    chars.length;    	non-compiled	[CE]  	64	None	replace
222	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start  +  1]  +  chars.length;  [CE]  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start  +  1]  +  chars.length;  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start  +  1]  +  chars.length;	  ch    =    buffer[random.nextInt(gap)+    start]    +    chars.length;    	non-compiled	[CE]  	64	None	replace
223	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  getChronology());  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  getChronology());  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  getChronology());	  char[]    buffer    =    random.getChars(gap,    start);    	non-compiled	[CE]  	48	None	replace
224	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  line);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  line);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  line);	  char[]    buffer    =    random.getChars(gap,    start);    	non-compiled	[CE]  	48	None	replace
225	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  start]  +  '0';  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  start]  +  '0';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  start]  +  '0';	  chars[random.nextInt(gap)+1]    +    start;    	non-compiled	[CE]  not  a  statement	73	None	replace
226	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  4  +  1];  [CE]  [FE]            ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)/  4  +  1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  4  +  1];	  ch    =    chars[random.nextInt(gap)/    4];    	non-compiled	[CE]  	17	None	replace
227	[BUG]  [BUGGY]  ch  =(char)(random.nextInt(gap)/  count];  [CE]  [FE]        ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =(char)(random.nextInt(gap)/  count];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =(char)(random.nextInt(gap)/  count];	  ch    =    chars[random.nextInt(gap)/    start];    ch    =(char)(random.nextInt(gap)/    start];    	non-compiled	[CE]  	83	None	replace
228	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  1,  start,  letters,  numbers);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  1,  start,  letters,  numbers);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  1,  start,  letters,  numbers);	  chars[random.nextInt(gap)+1],    start,    letters);    	non-compiled	[CE]  	81	None	replace
229	[BUG]  [BUGGY]  char[random.nextInt(gap)]  =  '#';  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)]  =  '#';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)]  =  '#';	  char[random.nextInt(gap)]    =    RANDOM;    	non-compiled	[CE]  	31	None	replace
230	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  4  +  start  +  1];  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  4  +  start  +  1];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  4  +  start  +  1];	  char[]    buffer    =    new    char[buffer.length    *    2    +    start    +    1];    	non-compiled	[CE]  	42	None	replace
231	[BUG]  [BUGGY]  char[random.nextInt(gap)+  start]  =  ',';  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[random.nextInt(gap)+  start]  =  ',';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[random.nextInt(gap)+  start]  =  ',';	  char[random.nextInt(gap)+    start];    	non-compiled	[CE]  	2	None	replace
232	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap  +  1)/  1];  [CE]  [FE]          ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap  +  1)/  1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap  +  1)/  1];	  ch    =    chars[random.nextInt(gap)/    1];    	non-compiled	[CE]  	16	None	replace
233	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  +  '0';  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  +  '0';  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start]  +  '0';	  ch    =    chars[random.nextInt(gap)+    1]    +    start;    	non-compiled	[CE]  	58	None	replace
234	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1]  +  '0';  [CE]  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1]  +  '0';  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start  +  1]  +  '0';	  ch    =    chars[random.nextInt(gap)+    1]    +    start;    	non-compiled	[CE]  	58	None	replace
235	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  1]  +  offset;  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  1]  +  offset;  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  1]  +  offset;	  ch    =    chars[random.nextInt(gap)+    1]    +    start;    	non-compiled	[CE]  	58	None	replace
236	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  ','  +  start;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  ','  +  start;  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  ','  +  start;	  chars[random.nextInt(gap)]    =    RANDOM    +    1;    	non-compiled	[CE]  	30	None	replace
237	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(0,  start,  end);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(0,  start,  end);	  char[]    buffer    =    random.getChars(count,    start,    start);    	non-compiled	[CE]  	86	None	replace
238	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  10  +  start];  [CE]  [FE]        ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)/  10  +  start];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  10  +  start];	  ch    =    chars[random.nextInt(gap)/    start];    ch    =    chars[random.nextInt(gap)/    start];    	non-compiled	[CE]  	4	None	replace
239	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  +  end];  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  +  end];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  +  end];	  chars[random.nextInt(gap)]    +    start];    	non-compiled	[CE]  not  a  statement	66	None	replace
240	[BUG]  [BUGGY]  chars[random.nextInt(gap)+1]  +  start];  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+1]  +  start];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+1]  +  start];	  chars[random.nextInt(gap)]    +    start];    	non-compiled	[CE]  not  a  statement	66	None	replace
241	[BUG]  [BUGGY]  char[]  buffer  =  chars[random.nextInt(gap)-  1];  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  chars[random.nextInt(gap)-  1];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  chars[random.nextInt(gap)-  1];	  char[]    buffer    =    chars[random.nextInt(gap)+1];    	non-compiled	[CE]  	1	None	replace
242	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  end  +  1];  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  end  +  1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  end  +  1];	  ch    =    buffer[random.nextInt(gap)+    start    +    1];    	non-compiled	[CE]  	12	None	replace
243	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  start  +  1);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(count,  start  +  1);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(count,  start  +  1);	  char[]    buffer    =    random.getChars(start,    start    +    1);    	non-compiled	[CE]  	46	None	replace
244	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1],  letters;  ch  =  chars[random.nextInt(gap)+  start-1);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1],  letters;  ch  =  chars[random.nextInt(gap)+  start-1);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start-1],  letters;  ch  =  chars[random.nextInt(gap)+  start-1);	  ch    =    chars[random.nextInt(gap)+    start-1];    ch    =    chars[random.nextInt(gap)+    start-1);    	non-compiled	[CE]  	25	None	replace
245	[BUG]  [BUGGY]  chars[random.nextInt(gap)]  =  ':';  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)]  =  ':';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)]  =  ':';	  chars[random.nextInt(gap)]    =    start;    	non-compiled	[CE]  	29	None	replace
246	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+1];  [CE]  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+1];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+1];	  ch    =    chars[random.nextInt(gap)+    start-1];    ch    =    chars[random.nextInt(gap)+1    start-1];    	non-compiled	[CE]  	24	None	replace
247	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  start]  =  ':';  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  start]  =  ':';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  start]  =  ':';	  chars[random.nextInt(gap)+1]    =    RANDOM;    	non-compiled	[CE]  	72	None	replace
248	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  1  +  count];  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  1  +  count];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  1  +  count];	  char[]    buffer    =    new    char[buffer.length    *    2    +    start    +    count];    	non-compiled	[CE]  	55	None	replace
249	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(count,  0,  end);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(count,  0,  end);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(count,  0,  end);	  char[]    buffer    =    random.getChars(count,    start,    end);    	non-compiled	[CE]  	10	None	replace
250	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  +  length;  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start]  +  length;  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start]  +  length;	  ch    =    buffer[random.nextInt(gap)+    start]    +    chars.length;    	non-compiled	[CE]  	64	None	replace
251	[BUG]  [BUGGY]  if(count  >  0)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  }  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  if(count  >  0)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  }  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	if(count  >  0)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  }	          ch    =    chars[random.nextInt(gap)+    start];    ch    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  	18	None	replace
252	[BUG]  [BUGGY]  if(start  >=  0)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  }  [CE]  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  if(start  >=  0)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  }  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	if(start  >=  0)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  start];  }	          ch    =    chars[random.nextInt(gap)+    start];    ch    =    chars[random.nextInt(gap)+    start];    	non-compiled	[CE]  	18	None	replace
253	[BUG]  [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars,  letters);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  random.getChars(start,  end,  chars,  letters);  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  random.getChars(start,  end,  chars,  letters);	  char[]    buffer    =    random.getChars(start,    end,    chars.length);    	non-compiled	[CE]  	61	None	replace
254	[BUG]  [BUGGY]  chars  =  buffer[random.nextInt(gap)+  start]  +  '0';  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars  =  buffer[random.nextInt(gap)+  start]  +  '0';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars  =  buffer[random.nextInt(gap)+  start]  +  '0';	  chars    =    buffer[random.nextInt(gap)+    start];    	non-compiled	[CE]  	49	None	replace
255	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  end-1)];  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  end-1)];  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start-1];  ch  =  chars[random.nextInt(gap)+  end-1)];	  ch    =    chars[random.nextInt(gap)+    start-1];    ch    =    chars[random.nextInt(gap)+    start-1)];    	non-compiled	[CE]  	71	None	replace
256	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  offset];  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  2  +  offset];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	char[]  buffer  =  new  char[buffer.length  *  2  +  offset];	  char[]    buffer    =    new    char[buffer.length    *    2    +    count];    	non-compiled	[CE]  	76	None	replace
257	[BUG]  [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  1];  }  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  if(letters)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  1];  }  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	if(letters)  {  ch  =  chars[random.nextInt(gap)+  start];  ch  =  chars[random.nextInt(gap)+  1];  }	  ch    =    chars[random.nextInt(gap)+    1];    ch    =    chars[random.nextInt(gap)+    1];    }    	non-compiled	[CE]  	41	None	replace
258	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  1024;  [CE]  [FE]          ArithmeticException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  chars[random.nextInt(gap)/  1024;  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  1024;	  ch    =    chars[random.nextInt(gap)/    start];    ch    =    chars[random.nextInt(gap)/    end];    	non-compiled	[CE]  	5	None	replace
259	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  start]  =  ',';  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  start]  =  ',';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  start]  =  ',';	  chars[random.nextInt(gap)+    start]    =    RANDOM;    	non-compiled	[CE]  	56	None	replace
260	[BUG]  [BUGGY]  chars[random.nextInt(gap)+  start]  =  '#';  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)+  start]  =  '#';  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)+  start]  =  '#';	  chars[random.nextInt(gap)+    start]    =    RANDOM;    	non-compiled	[CE]  	56	None	replace
261	[BUG]  [BUGGY]  chars[random.nextInt(gap)/  start];  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  chars[random.nextInt(gap)/  start];  [BUGGY]      ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	chars[random.nextInt(gap)/  start];	  chars[random.nextInt(gap)-    start];    	non-compiled	[CE]  not  a  statement	75	None	replace
262	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  1],  letters);  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  1],  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap)+  1],  letters);	  ch    =    buffer[random.nextInt(gap)+    start];    ch    =    buffer[random.nextInt(gap)+    start],    letters);    	non-compiled	[CE]  	85	None	replace
263	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap  +  1)+  start],  letters);  [CE]  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {      [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap  +  1)+  start],  letters);  [BUGGY]      }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start];  ch  =  buffer[random.nextInt(gap  +  1)+  start],  letters);	  ch    =    buffer[random.nextInt(gap)+    start];    ch    =    buffer[random.nextInt(gap)+    start],    letters);    	non-compiled	[CE]  	85	None	replace
