bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]    ch  =  chars[random.nextInt(gap)+  start];  [BUGGY]  ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	add	    ch  =  chars[random.nextInt(gap)+  start];		compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	add
2	[BUG]  [BUGGY]    ch  =  chars[random.nextInt(gap)+  start];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]    ch  =  chars[random.nextInt(gap)+  start];  [BUGGY]  ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	    ch  =  chars[random.nextInt(gap)+  start];		compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	add
3	[BUG]  [BUGGY]    chars[random.nextInt(gap)+  start];  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]    chars[random.nextInt(gap)+  start];  [BUGGY]  ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	    chars[random.nextInt(gap)+  start];		non-compiled	[CE]  not  a  statement	2	None	add
4	[BUG]  [BUGGY]    char[]  buffer  =  random.getChars(start,  end);  [CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]    char[]  buffer  =  random.getChars(start,  end);  [BUGGY]  ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	    char[]  buffer  =  random.getChars(start,  end);		non-compiled	[CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	2	None	add
5	[BUG]  [BUGGY]    chars[random.nextInt(gap)];  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]    chars[random.nextInt(gap)];  [BUGGY]  ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	    chars[random.nextInt(gap)];		non-compiled	[CE]  not  a  statement	2	None	add
6	[BUG]  [BUGGY]    chars[random.nextInt(gap)]  =  RANDOM;  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]    chars[random.nextInt(gap)]  =  RANDOM;  [BUGGY]  ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	    chars[random.nextInt(gap)]  =  RANDOM;		non-compiled	[CE]  incompatible  types	2	None	add
7	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  [BUGGY]  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	add	ch  =  chars[random.nextInt(gap)+  start  +  1];	ch  =  chars[random.nextInt(gap)  +  start];  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	3	replace
8	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start  +  1];  [BUGGY]  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start  +  1];	ch  =  chars[random.nextInt(gap)  +  start];  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	3	replace
9	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]  ch  =  chars[random.nextInt(gap)+  1];  [BUGGY]  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	add	ch  =  chars[random.nextInt(gap)+  1];	ch  =  chars[random.nextInt(gap)  +  start];  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	3	replace
10	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]  ch  =  chars[random.nextInt(gap)+  1];  [BUGGY]  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  1];	ch  =  chars[random.nextInt(gap)  +  start];  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	3	replace
11	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  [BUGGY]  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	add	ch  =  buffer[random.nextInt(gap)+  start];	ch  =  chars[random.nextInt(gap)  +  start];  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	3	replace
12	[BUG]  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]  ch  =  buffer[random.nextInt(gap)+  start];  [BUGGY]  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  buffer[random.nextInt(gap)+  start];	ch  =  chars[random.nextInt(gap)  +  start];  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	3	replace
13	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  [BUGGY]  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	add	ch  =  chars[random.nextInt(gap)+  start-1];	ch  =  chars[random.nextInt(gap)  +  start];  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	3	replace
14	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]  ch  =  chars[random.nextInt(gap)+  start-1];  [BUGGY]  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)+  start-1];	ch  =  chars[random.nextInt(gap)  +  start];  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	3	replace
15	[BUG]  [BUGGY]    char[]  buffer  =  random.getChars(start,  start);  [CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]    char[]  buffer  =  random.getChars(start,  start);  [BUGGY]  ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	    char[]  buffer  =  random.getChars(start,  start);		non-compiled	[CE]  variable  buffer  is  already  defined  in  method  random(int,int,int,boolean,boolean,char[],Random)	2	None	add
16	[BUG]  [BUGGY]    chars[random.nextInt(gap)+1];  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]    chars[random.nextInt(gap)+1];  [BUGGY]  ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	    chars[random.nextInt(gap)+1];		non-compiled	[CE]  not  a  statement	2	None	add
17	[BUG]  [BUGGY]    char[]  buffer  =  new  char[buffer.length  +  start];  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]    char[]  buffer  =  new  char[buffer.length  +  start];  [BUGGY]  ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	    char[]  buffer  =  new  char[buffer.length  +  start];		non-compiled	[CE]  not  a  statement	2	None	add
18	[BUG]  [BUGGY]    char[]  buffer  =  new  char[buffer.length  *  2  +  start];  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]    char[]  buffer  =  new  char[buffer.length  *  2  +  start];  [BUGGY]  ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	    char[]  buffer  =  new  char[buffer.length  *  2  +  start];		non-compiled	[CE]  not  a  statement	2	None	add
19	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]  ch  =  chars[random.nextInt(gap)/  start];  [BUGGY]  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	add	ch  =  chars[random.nextInt(gap)/  start];	ch  =  chars[random.nextInt(gap)  +  start];  	compilable	  [FE]  ArithmeticException  	1	3	replace
20	[BUG]  [BUGGY]  ch  =  chars[random.nextInt(gap)/  start];  [FE]  ArithmeticException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]  ch  =  chars[random.nextInt(gap)/  start];  [BUGGY]  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	ch  =  chars[random.nextInt(gap)/  start];	ch  =  chars[random.nextInt(gap)  +  start];  	compilable	  [FE]  ArithmeticException  	1	3	replace
21	[BUG]  [BUGGY]    char  ch  =  chars[random.nextInt(gap)+  start];  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]    char  ch  =  chars[random.nextInt(gap)+  start];  [BUGGY]  ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	    char  ch  =  chars[random.nextInt(gap)+  start];		non-compiled	[CE]  not  a  statement	2	None	add
22	[BUG]  [BUGGY]    chars  =  chars[random.nextInt(gap)+  start];  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]    chars  =  chars[random.nextInt(gap)+  start];  [BUGGY]  ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	    chars  =  chars[random.nextInt(gap)+  start];		non-compiled	[CE]  not  a  statement	2	None	add
23	[BUG]  [BUGGY]    chars  =  chars[random.nextInt(gap)+  1];  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]    chars  =  chars[random.nextInt(gap)+  1];  [BUGGY]  ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	    chars  =  chars[random.nextInt(gap)+  1];		non-compiled	[CE]  not  a  statement	2	None	add
24	[BUG]  [BUGGY]    char  ch  =  chars[random.nextInt(gap)+  1];  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  [BUGGY]    char  ch  =  chars[random.nextInt(gap)+  1];  [BUGGY]  ch  =  chars[random.nextInt(gap)  +  start];  }  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	    char  ch  =  chars[random.nextInt(gap)+  1];		non-compiled	[CE]  not  a  statement	2	None	add
