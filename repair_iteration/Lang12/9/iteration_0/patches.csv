bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    char[]  buffer  =  new  char[count];  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]    char[]  buffer  =  new  char[count];  [BUGGY]  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	    char[]  buffer  =  new  char[count];		non-compiled	[CE]  illegal  start  of  type	18	None	add
2	[BUG]  [BUGGY]    Character  ch  =  random.random.nextInt(start);  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]    Character  ch  =  random.random.nextInt(start);  [BUGGY]  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	    Character  ch  =  random.random.nextInt(start);		non-compiled	[CE]  illegal  start  of  type	18	None	add
3	[BUG]  [BUGGY]    char[]  buffer  =  new  char[count  +  1];  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]    char[]  buffer  =  new  char[count  +  1];  [BUGGY]  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	    char[]  buffer  =  new  char[count  +  1];		non-compiled	[CE]  illegal  start  of  type	18	None	add
4	[BUG]  [BUGGY]    int  count  =  chars.length;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]    int  count  =  chars.length;  [BUGGY]  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	    int  count  =  chars.length;		non-compiled	[CE]  illegal  start  of  type	18	None	add
5	[BUG]  [BUGGY]    Character  ch  =  random.random.nextInt(gap);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]    Character  ch  =  random.random.nextInt(gap);  [BUGGY]  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	    Character  ch  =  random.random.nextInt(gap);		non-compiled	[CE]  illegal  start  of  type	18	None	add
6	[BUG]  [BUGGY]  int  gap  =  end  -  1;  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]  int  gap  =  end  -  1;  [BUGGY]    while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	int  gap  =  end  -  1;	int  gap  =  end  -  start;  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
7	[BUG]  [BUGGY]  int  gap  =  end  -  start  +  1;  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]  int  gap  =  end  -  start  +  1;  [BUGGY]    while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	int  gap  =  end  -  start  +  1;	int  gap  =  end  -  start;  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
8	[BUG]  [BUGGY]  int  gap  =  start  -  end;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]  int  gap  =  start  -  end;  [BUGGY]    while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	int  gap  =  start  -  end;	int  gap  =  end  -  start;  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
9	[BUG]  [BUGGY]  int  gap  =  end  -  buffer.length;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]  int  gap  =  end  -  buffer.length;  [BUGGY]    while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	int  gap  =  end  -  buffer.length;	int  gap  =  end  -  start;  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
10	[BUG]  [BUGGY]    Random  random  =  RandomStringUtils.getValue(buffer,  start,  end);  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]    Random  random  =  RandomStringUtils.getValue(buffer,  start,  end);  [BUGGY]  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	    Random  random  =  RandomStringUtils.getValue(buffer,  start,  end);		non-compiled	[CE]  illegal  start  of  type	18	None	add
11	[BUG]  [BUGGY]    char[]  buffer  =  new  char[count  -  start];  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]    char[]  buffer  =  new  char[count  -  start];  [BUGGY]  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	    char[]  buffer  =  new  char[count  -  start];		non-compiled	[CE]  illegal  start  of  type	18	None	add
12	[BUG]  [BUGGY]    int  count  =  buffer.length();  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]    int  count  =  buffer.length();  [BUGGY]  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	    int  count  =  buffer.length();		non-compiled	[CE]  illegal  start  of  type	18	None	add
13	[BUG]  [BUGGY]    Random  random  =  RandomStringUtils.getRandom(random);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]    Random  random  =  RandomStringUtils.getRandom(random);  [BUGGY]  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	    Random  random  =  RandomStringUtils.getRandom(random);		non-compiled	[CE]  illegal  start  of  type	18	None	add
14	[BUG]  [BUGGY]    int  count  =  random.nextInt(buffer,  0,  start);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]    int  count  =  random.nextInt(buffer,  0,  start);  [BUGGY]  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	    int  count  =  random.nextInt(buffer,  0,  start);		non-compiled	[CE]  illegal  start  of  type	18	None	add
15	[BUG]  [BUGGY]    int  count  =  random.nextInt(gap);  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]    int  count  =  random.nextInt(gap);  [BUGGY]  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	    int  count  =  random.nextInt(gap);		non-compiled	[CE]  illegal  start  of  type	18	None	add
16	[BUG]  [BUGGY]    int  count  =  random.nextInt(start);  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]    int  count  =  random.nextInt(start);  [BUGGY]  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	    int  count  =  random.nextInt(start);		non-compiled	[CE]  illegal  start  of  type	18	None	add
17	[BUG]  [BUGGY]    char[]  buffer  =  new  char[count  -  1];  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]    char[]  buffer  =  new  char[count  -  1];  [BUGGY]  int  gap  =  end  -  start;  while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	    char[]  buffer  =  new  char[count  -  1];		non-compiled	[CE]  illegal  start  of  type	18	None	add
18	[BUG]  [BUGGY]  int  gap  =  end  -  4;  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  start  =  '  ';  }  }  char[]  buffer  =  new  char[count];  [BUGGY]  int  gap  =  end  -  4;  [BUGGY]    while  (count--  !=  0)  {  char  ch;  if  (chars  ==  null)  {  ch  =  (char)  (random.nextInt(gap)  +  start);  }  else  {  ch  =  chars[random.nextInt(gap)  +  start];  }  if  (letters  &&  Character.isLetter(ch)  ||  numbers  &&  Character.isDigit(ch)  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	int  gap  =  end  -  4;	int  gap  =  end  -  start;  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
