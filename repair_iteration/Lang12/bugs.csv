bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] ch = chars[random.nextInt(gap) + start]; [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (chars == null) { ch = (char) (random.nextInt(gap) + start); } else { [BUGGY] ch = chars[random.nextInt(gap) + start]; [BUGGY] } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	replace	
2	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (chars == null) { ch = (char) (random.nextInt(gap) + start); } else { [BUGGY] [BUGGY] ch = chars[random.nextInt(gap) + start]; } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.8164965809277261	248	248	2	add	
3	[BUG] [BUGGY] if (count == 0) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] char[] chars, Random random) { [BUGGY] if (count == 0) { [BUGGY] return ""; } else if (count < 0) { throw new IllegalArgumentException("Requested random string length " + count + " is less than 0."); } if (start == 0 && end == 0) { if (!letters && !numbers) { end = Integer.MAX_VALUE; } else { end = 'z' + 1; [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	
4	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] char[] chars, Random random) { [BUGGY] [BUGGY] if (count == 0) { return ""; } else if (count < 0) { throw new IllegalArgumentException("Requested random string length " + count + " is less than 0."); } if (start == 0 && end == 0) { if (!letters && !numbers) { end = Integer.MAX_VALUE; } else { end = 'z' + 1; [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	add	
5	[BUG] [BUGGY] } else if (count < 0) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] char[] chars, Random random) { if (count == 0) { return ""; [BUGGY] } else if (count < 0) { [BUGGY] throw new IllegalArgumentException("Requested random string length " + count + " is less than 0."); } if (start == 0 && end == 0) { if (!letters && !numbers) { end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	replace	
6	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] char[] chars, Random random) { if (count == 0) { return ""; [BUGGY] [BUGGY] } else if (count < 0) { throw new IllegalArgumentException("Requested random string length " + count + " is less than 0."); } if (start == 0 && end == 0) { if (!letters && !numbers) { end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	227	227	2	add	
7	[BUG] [BUGGY] throw new IllegalArgumentException("Requested random string length " + count + " is less than 0."); [FE] ArrayIndexOutOfBoundsException [CONTEXT] char[] chars, Random random) { if (count == 0) { return ""; } else if (count < 0) { [BUGGY] throw new IllegalArgumentException("Requested random string length " + count + " is less than 0."); [BUGGY] } if (start == 0 && end == 0) { if (!letters && !numbers) { end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	replace	
8	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] char[] chars, Random random) { if (count == 0) { return ""; } else if (count < 0) { [BUGGY] [BUGGY] throw new IllegalArgumentException("Requested random string length " + count + " is less than 0."); } if (start == 0 && end == 0) { if (!letters && !numbers) { end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	228	228	2	add	
9	[BUG] [BUGGY] if (start == 0 && end == 0) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] char[] chars, Random random) { if (count == 0) { return ""; } else if (count < 0) { throw new IllegalArgumentException("Requested random string length " + count + " is less than 0."); } [BUGGY] if (start == 0 && end == 0) { [BUGGY] if (!letters && !numbers) { end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } } char[] buffer = new char[count]; int gap = end - start; [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	231	231	2	replace	
10	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] char[] chars, Random random) { if (count == 0) { return ""; } else if (count < 0) { throw new IllegalArgumentException("Requested random string length " + count + " is less than 0."); } [BUGGY] [BUGGY] if (start == 0 && end == 0) { if (!letters && !numbers) { end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } } char[] buffer = new char[count]; int gap = end - start; [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	231	231	2	add	
11	[BUG] [BUGGY] if (!letters && !numbers) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] char[] chars, Random random) { if (count == 0) { return ""; } else if (count < 0) { throw new IllegalArgumentException("Requested random string length " + count + " is less than 0."); } if (start == 0 && end == 0) { [BUGGY] if (!letters && !numbers) { [BUGGY] end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } } char[] buffer = new char[count]; int gap = end - start;  [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	replace	
12	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] char[] chars, Random random) { if (count == 0) { return ""; } else if (count < 0) { throw new IllegalArgumentException("Requested random string length " + count + " is less than 0."); } if (start == 0 && end == 0) { [BUGGY] [BUGGY] if (!letters && !numbers) { end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } } char[] buffer = new char[count]; int gap = end - start;  [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	232	232	2	add	
13	[BUG] [BUGGY] end = Integer.MAX_VALUE; [FE] ArrayIndexOutOfBoundsException [CONTEXT] char[] chars, Random random) { if (count == 0) { return ""; } else if (count < 0) { throw new IllegalArgumentException("Requested random string length " + count + " is less than 0."); } if (start == 0 && end == 0) { if (!letters && !numbers) { [BUGGY] end = Integer.MAX_VALUE; [BUGGY] } else { end = 'z' + 1; start = ' '; } } char[] buffer = new char[count]; int gap = end - start; while (count-- != 0) { [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	replace	
14	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] char[] chars, Random random) { if (count == 0) { return ""; } else if (count < 0) { throw new IllegalArgumentException("Requested random string length " + count + " is less than 0."); } if (start == 0 && end == 0) { if (!letters && !numbers) { [BUGGY] [BUGGY] end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } } char[] buffer = new char[count]; int gap = end - start; while (count-- != 0) { [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	233	233	2	add	
15	[BUG] [BUGGY] char[] buffer = new char[count]; [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (start == 0 && end == 0) { if (!letters && !numbers) { end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } } [BUGGY] char[] buffer = new char[count]; [BUGGY] int gap = end - start; while (count-- != 0) { char ch; if (chars == null) { ch = (char) (random.nextInt(gap) + start); } else { ch = chars[random.nextInt(gap) + start]; } if (letters && Character.isLetter(ch) [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	replace	
16	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (start == 0 && end == 0) { if (!letters && !numbers) { end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } } [BUGGY] [BUGGY] char[] buffer = new char[count]; int gap = end - start; while (count-- != 0) { char ch; if (chars == null) { ch = (char) (random.nextInt(gap) + start); } else { ch = chars[random.nextInt(gap) + start]; } if (letters && Character.isLetter(ch) [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	240	240	2	add	
17	[BUG] [BUGGY] int gap = end - start; [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (start == 0 && end == 0) { if (!letters && !numbers) { end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } } char[] buffer = new char[count]; [BUGGY] int gap = end - start; [BUGGY]  while (count-- != 0) { char ch; if (chars == null) { ch = (char) (random.nextInt(gap) + start); } else { ch = chars[random.nextInt(gap) + start]; } if (letters && Character.isLetter(ch) || numbers && Character.isDigit(ch) [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	replace	
18	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (start == 0 && end == 0) { if (!letters && !numbers) { end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } } char[] buffer = new char[count]; [BUGGY] [BUGGY] int gap = end - start; while (count-- != 0) { char ch; if (chars == null) { ch = (char) (random.nextInt(gap) + start); } else { ch = chars[random.nextInt(gap) + start]; } if (letters && Character.isLetter(ch) || numbers && Character.isDigit(ch) [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	241	241	2	add	
19	[BUG] [BUGGY] while (count-- != 0) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } } char[] buffer = new char[count]; int gap = end - start; [BUGGY] while (count-- != 0) { [BUGGY] char ch; if (chars == null) { ch = (char) (random.nextInt(gap) + start); } else { ch = chars[random.nextInt(gap) + start]; } if (letters && Character.isLetter(ch) || numbers && Character.isDigit(ch) || !letters && !numbers) { if(ch >= 56320 && ch <= 57343) { [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	243	243	2	replace	
20	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] end = Integer.MAX_VALUE; } else { end = 'z' + 1; start = ' '; } } char[] buffer = new char[count]; int gap = end - start; [BUGGY] [BUGGY] while (count-- != 0) { char ch; if (chars == null) { ch = (char) (random.nextInt(gap) + start); } else { ch = chars[random.nextInt(gap) + start]; } if (letters && Character.isLetter(ch) || numbers && Character.isDigit(ch) || !letters && !numbers) { if(ch >= 56320 && ch <= 57343) { [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	243	243	2	add	
21	[BUG] [BUGGY] if (chars == null) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] end = 'z' + 1; start = ' '; } } char[] buffer = new char[count]; int gap = end - start; while (count-- != 0) { char ch; [BUGGY] if (chars == null) { [BUGGY] ch = (char) (random.nextInt(gap) + start); } else { ch = chars[random.nextInt(gap) + start]; } if (letters && Character.isLetter(ch) || numbers && Character.isDigit(ch) || !letters && !numbers) { if(ch >= 56320 && ch <= 57343) { if(count == 0) { count++; [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	245	245	2	replace	
22	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] end = 'z' + 1; start = ' '; } } char[] buffer = new char[count]; int gap = end - start; while (count-- != 0) { char ch; [BUGGY] [BUGGY] if (chars == null) { ch = (char) (random.nextInt(gap) + start); } else { ch = chars[random.nextInt(gap) + start]; } if (letters && Character.isLetter(ch) || numbers && Character.isDigit(ch) || !letters && !numbers) { if(ch >= 56320 && ch <= 57343) { if(count == 0) { count++; [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers char[] chars Random random [VARIABLES] char ch boolean letters numbers Random RANDOM random int count end gap start char[] buffer chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	245	245	2	add	
23	[BUG] [BUGGY] private static final Random RANDOM = new Random(); [FE] ArrayIndexOutOfBoundsException [CONTEXT] [BUGGY] private static final Random RANDOM = new Random(); [BUGGY]  [CLASS] RandomStringUtils  [VARIABLES] 	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.6324555320336759	43	43	2	replace	
24	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] [BUGGY] [BUGGY] private static final Random RANDOM = new Random(); [CLASS] RandomStringUtils  [VARIABLES] 	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.6324555320336759	43	43	2	add	
25	[BUG] [BUGGY] if (chars == null) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] public static String random(int count, char... chars) { [BUGGY] if (chars == null) { [BUGGY] return random(count, 0, 0, false, false, null, RANDOM); } return random(count, 0, chars.length, false, false, chars, RANDOM); } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count chars [VARIABLES] boolean Random RANDOM random int count char[] chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	replace	
26	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public static String random(int count, char... chars) { [BUGGY] [BUGGY] if (chars == null) { return random(count, 0, 0, false, false, null, RANDOM); } return random(count, 0, chars.length, false, false, chars, RANDOM); } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count chars [VARIABLES] boolean Random RANDOM random int count char[] chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	318	318	2	add	
27	[BUG] [BUGGY] return random(count, 0, chars.length, false, false, chars, RANDOM); [FE] ArrayIndexOutOfBoundsException [CONTEXT] public static String random(int count, char... chars) { if (chars == null) { return random(count, 0, 0, false, false, null, RANDOM); } [BUGGY] return random(count, 0, chars.length, false, false, chars, RANDOM); [BUGGY] } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count chars [VARIABLES] boolean Random RANDOM random int count char[] chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	replace	
28	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public static String random(int count, char... chars) { if (chars == null) { return random(count, 0, 0, false, false, null, RANDOM); } [BUGGY] [BUGGY] return random(count, 0, chars.length, false, false, chars, RANDOM); } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count chars [VARIABLES] boolean Random RANDOM random int count char[] chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.5	321	321	2	add	
29	[BUG] [BUGGY] return random(count, false, false); [FE] ArrayIndexOutOfBoundsException [CONTEXT] public static String random(int count) { [BUGGY] return random(count, false, false); [BUGGY] } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count [VARIABLES] Random RANDOM int count boolean  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4082482904638631	69	69	2	replace	
30	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public static String random(int count) { [BUGGY] [BUGGY] return random(count, false, false); } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count [VARIABLES] Random RANDOM int count boolean  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4082482904638631	69	69	2	add	
31	[BUG] [BUGGY] return random(count, 0, 0, letters, numbers); [FE] ArrayIndexOutOfBoundsException [CONTEXT] public static String random(int count, boolean letters, boolean numbers) { [BUGGY] return random(count, 0, 0, letters, numbers); [BUGGY] } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count boolean letters boolean numbers [VARIABLES] Random RANDOM int count boolean letters numbers  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4082482904638631	143	143	2	replace	
32	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public static String random(int count, boolean letters, boolean numbers) { [BUGGY] [BUGGY] return random(count, 0, 0, letters, numbers); } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count boolean letters boolean numbers [VARIABLES] Random RANDOM int count boolean letters numbers  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4082482904638631	143	143	2	add	
33	[BUG] [BUGGY] return random(count, start, end, letters, numbers, null, RANDOM); [FE] ArrayIndexOutOfBoundsException [CONTEXT] public static String random(int count, int start, int end, boolean letters, boolean numbers) { [BUGGY] return random(count, start, end, letters, numbers, null, RANDOM); [BUGGY] } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers [VARIABLES] Random RANDOM int count end start boolean letters numbers  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4082482904638631	163	163	2	replace	
34	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public static String random(int count, int start, int end, boolean letters, boolean numbers) { [BUGGY] [BUGGY] return random(count, start, end, letters, numbers, null, RANDOM); } [CLASS] RandomStringUtils [METHOD] random [RETURN_TYPE] String  int count int start int end boolean letters boolean numbers [VARIABLES] Random RANDOM int count end start boolean letters numbers  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.4082482904638631	163	163	2	add	
