bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    char[]  buffer,  Random  random)  {  [CE]  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    char[]  buffer,  Random  random)  {  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	    char[]  buffer,  Random  random)  {		non-compiled	[CE]  	4	None	add
2	[BUG]  [BUGGY]    int  count  =  random.length();  [CE]  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    int  count  =  random.length();  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	    int  count  =  random.length();		non-compiled	[CE]  	4	None	add
3	[BUG]  [BUGGY]    char[]  buffer,  chars,  random)  {  [CE]  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    char[]  buffer,  chars,  random)  {  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	    char[]  buffer,  chars,  random)  {		non-compiled	[CE]  	4	None	add
4	[BUG]  [BUGGY]    char[]  buffer,  int  count)  {  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    char[]  buffer,  int  count)  {  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	    char[]  buffer,  int  count)  {		non-compiled	[CE]  <identifier>  expected	4	None	add
5	[BUG]  [BUGGY]    int  count  =  random.length;  [CE]  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    int  count  =  random.length;  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	    int  count  =  random.length;		non-compiled	[CE]  	4	None	add
6	[BUG]  [BUGGY]  if(count  ==  0  ||  random.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if(count  ==  0  ||  random.length  ==  0)  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.length  ==  0)  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  if(count  ==  0  ||  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if(count  ==  0  ||  chars.length  ==  0)  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  chars.length  ==  0)  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  if(count  ==  0  ||  random.getValue()  ==  0)  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if(count  ==  0  ||  random.getValue()  ==  0)  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.getValue()  ==  0)  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  if(count  ==  1)  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if(count  ==  1)  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  1)  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]    int  count  =  random.count();  [CE]  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    int  count  =  random.count();  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	    int  count  =  random.count();		non-compiled	[CE]  	4	None	add
11	[BUG]  [BUGGY]    char[]  buffer,  chars);  [CE]  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    char[]  buffer,  chars);  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	    char[]  buffer,  chars);		non-compiled	[CE]  	4	None	add
12	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if(chars  ==  null  ||  chars.length  ==  0)  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  chars.length  ==  0)  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextToken()  ==  0))  {  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextToken()  ==  0))  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextToken()  ==  0))  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch)!=  0))  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch)!=  0))  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.getChars(ch)!=  0))  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextDouble()  ==  0))  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextDouble()  ==  0))  {  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextDouble()  ==  0))  {	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]    char[]  buffer,  Random  random)  {  return  new  String(buffer,  0,  buffer.length);  [CE]  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    char[]  buffer,  Random  random)  {  return  new  String(buffer,  0,  buffer.length);  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	    char[]  buffer,  Random  random)  {  return  new  String(buffer,  0,  buffer.length);		non-compiled	[CE]  	4	None	add
17	[BUG]  [BUGGY]    char[]  buffer,  chars,  random);  [CE]  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    char[]  buffer,  chars,  random);  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	    char[]  buffer,  chars,  random);		non-compiled	[CE]  	4	None	add
18	[BUG]  [BUGGY]    char[]  buffer,  Random  random);  [CE]  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    char[]  buffer,  Random  random);  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	    char[]  buffer,  Random  random);		non-compiled	[CE]  	4	None	add
19	[BUG]  [BUGGY]    char[]  buffer,  Random  random)  {  return  new  char[0];  [CE]  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]    char[]  buffer,  Random  random)  {  return  new  char[0];  [BUGGY]  if  (count  ==  0)  {  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	    char[]  buffer,  Random  random)  {  return  new  char[0];		non-compiled	[CE]  	4	None	add
20	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
22	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  char[]  chars,  Random  random)  {  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken  [BUGGY]  return   " ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException( "Requested  random  string  length   "  +  count  +   "  is  less  than  0. ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken	if  (count  ==  0)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
