bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VAL)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VAL)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VAL)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VAL    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
3	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  {  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  {  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  {  'z'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VAL    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
4	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VAL    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
5	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  count,  boolean  numbers)  {  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  int  count,  boolean  numbers)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  count,  boolean  numbers)  {	  char[]    buffer,    int    count,    boolean    numbers)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
6	[BUG]  [BUGGY]  char[]  buffer,  int  count,  int  letters,  boolean  numbers)  {  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count,  int  letters,  boolean  numbers)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count,  int  letters,  boolean  numbers)  {	  char[]    buffer,    int    count,    boolean    numbers)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
7	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  number)  {  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  int  number)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  number)  {	  char[]    buffer,    int    count,    boolean    numbers)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
8	[BUG]  [BUGGY]  if(count  ==  0  ||  random.getBooleanValue()  ==  true)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.getBooleanValue()  ==  true)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.getBooleanValue()  ==  true)  {	  if(count    ==    0    ||    random.getBooleanValue()    ==    false)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
9	[BUG]  [BUGGY]  if(count  ==  0  ||  random.getBooleanValue()!=  false)  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.getBooleanValue()!=  false)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.getBooleanValue()!=  false)  {	  if(count    ==    0    ||    random.getBooleanValue()    ==    false)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
10	[BUG]  [BUGGY]  if(ch  ==  0  ||  random.getBooleanValue()  ==  false)  {  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||  random.getBooleanValue()  ==  false)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||  random.getBooleanValue()  ==  false)  {	  if(count    ==    0    ||    random.getBooleanValue()    ==    false)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
11	[BUG]  [BUGGY]  int  count  =  chars.length  -  1;  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  chars.length  -  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  chars.length  -  1;	  int    count    =    chars.length();    	non-compiled	[CE]  	65	None	replace
12	[BUG]  [BUGGY]  int  count  =  chars.length()  +  1;  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  chars.length()  +  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  chars.length()  +  1;	  int    count    =    chars.length();    	non-compiled	[CE]  	65	None	replace
13	[BUG]  [BUGGY]  int  count  =(chars  ==  null)?  0  :  chars.length  +  1;  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(chars  ==  null)?  0  :  chars.length  +  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(chars  ==  null)?  0  :  chars.length  +  1;	  int    count    =(chars    ==    null)?    0    :    chars.length;    	non-compiled	[CE]  	8	None	replace
14	[BUG]  [BUGGY]  int  count  =(chars!=  null)?  0  :  chars.length;  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(chars!=  null)?  0  :  chars.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(chars!=  null)?  0  :  chars.length;	  int    count    =(chars    ==    null)?    0    :    chars.length;    	non-compiled	[CE]  	8	None	replace
15	[BUG]  [BUGGY]  int  count  =(chars  ==  null)?  1  :  chars.length;  [CE]  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(chars  ==  null)?  1  :  chars.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(chars  ==  null)?  1  :  chars.length;	  int    count    =(chars    ==    null)?    0    :    chars.length;    	non-compiled	[CE]  	8	None	replace
16	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_	  if((    random!=    null)&&((    random.nextToken()    ==    'a'    ||    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
17	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'A'  ||  random.nextToken()  ==  'Z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'A'  ||  random.nextToken()  ==  'Z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'A'  ||  random.nextToken()  ==  'Z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N	  if((    random!=    null)&&((    random.nextToken()    ==    'a'    ||    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
18	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    'a'    ||    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
19	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z')&&((  random.nextToken()  ==  'z  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z')&&((  random.nextToken()  ==  'z  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z')&&((  random.nextToken()  ==  'z	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  int  count  =(numbers  &  Random.MIN_VALUE)  ==  0?  random.length  :  0;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  &  Random.MIN_VALUE)  ==  0?  random.length  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &  Random.MIN_VALUE)  ==  0?  random.length  :  0;	  int    count    =(numbers    &    Random.MIN_VALUE)!=    0?    random.length    :    0;    	non-compiled	[CE]  	136	None	replace
22	[BUG]  [BUGGY]  int  count  =(numbers  &  Random.MIN_VALUE)  ==  0?  random.length  :  1;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  &  Random.MIN_VALUE)  ==  0?  random.length  :  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &  Random.MIN_VALUE)  ==  0?  random.length  :  1;	  int    count    =(numbers    &    Random.MIN_VALUE)!=    0?    random.length    :    0;    	non-compiled	[CE]  	136	None	replace
23	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()!=  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()!=  JsonToken.VALUE_N  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()!=  JsonToken.VALUE_N	  if((    random    ==    null)&&((    random.nextToken()    ==    'Z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
24	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_	  if((    random    ==    null)&&((    random.nextToken()    ==    'Z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
25	[BUG]  [BUGGY]  if(ch  ==  0  ||(chars  &&  random.nextToken()  ==  0))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||(chars  &&  random.nextToken()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||(chars  &&  random.nextToken()  ==  0))  {	  if(count    ==    0    ||(chars    &&    random.nextToken()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
26	[BUG]  [BUGGY]  if(count  ==  0  ||(buffered  &&  random.nextToken()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(buffered  &&  random.nextToken()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(buffered  &&  random.nextToken()  ==  0))  {	  if(count    ==    0    ||(chars    &&    random.nextToken()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
27	[BUG]  [BUGGY]  if(chars  ==  0  ||(count  &&  random.nextToken()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||(count  &&  random.nextToken()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||(count  &&  random.nextToken()  ==  0))  {	  if(chars    ==    0    ||(numbers    &&    random.nextToken()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
28	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N	  if((    random    ==    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
29	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_	  if((    random    ==    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
30	[BUG]  [BUGGY]  if((  letters  &&  random.nextDouble()  ==  0)||(count  &&  random.nextDouble()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  letters  &&  random.nextDouble()  ==  0)||(count  &&  random.nextDouble()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.nextDouble()  ==  0)||(count  &&  random.nextDouble()  ==  0))  {	  if((    letters    &&    random.nextDouble()    ==    0)||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
31	[BUG]  [BUGGY]  if((  letters  &&  random.nextChar()  ==  0)||(numbers  &&  random.nextDouble()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  letters  &&  random.nextChar()  ==  0)||(numbers  &&  random.nextDouble()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.nextChar()  ==  0)||(numbers  &&  random.nextDouble()  ==  0))  {	  if((    letters    &&    random.nextDouble()    ==    0)||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
32	[BUG]  [BUGGY]  if((  letters  &&  random.nextInt()  ==  0)||(numbers  &&  random.nextInt()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  letters  &&  random.nextInt()  ==  0)||(numbers  &&  random.nextInt()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.nextInt()  ==  0)||(numbers  &&  random.nextInt()  ==  0))  {	  if((    letters    &&    random.nextDouble()    ==    0)||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
33	[BUG]  [BUGGY]  int  count  =(numbers  &  Random.MAX_VALUE)  ==  0?  random.length  :  0;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  &  Random.MAX_VALUE)  ==  0?  random.length  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &  Random.MAX_VALUE)  ==  0?  random.length  :  0;	  int    count    =(numbers    &    Random.MAX_VALUE)    >=    0?    random.length    :    0;    	non-compiled	[CE]  	137	None	replace
34	[BUG]  [BUGGY]  int  count  =(numbers  &  Random.MAX_VALUE)!=  0?  random.length  :  0;  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  &  Random.MAX_VALUE)!=  0?  random.length  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &  Random.MAX_VALUE)!=  0?  random.length  :  0;	  int    count    =(numbers    &    Random.MAX_VALUE)    >=    0?    random.length    :    0;    	non-compiled	[CE]  	137	None	replace
35	[BUG]  [BUGGY]  int  count  =(numbers  &  Random.MAX_VALUE)  ==  0?  random.length  :  1;  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  &  Random.MAX_VALUE)  ==  0?  random.length  :  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &  Random.MAX_VALUE)  ==  0?  random.length  :  1;	  int    count    =(numbers    &    Random.MAX_VALUE)    >=    0?    random.length    :    0;    	non-compiled	[CE]  	137	None	replace
36	[BUG]  [BUGGY]  char[]  buffer,  Random  random)  {  return  new  char[1]  +  1;  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random)  {  return  new  char[1]  +  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random)  {  return  new  char[1]  +  1;	  char[]    buffer,    Random    random)    {    return    new    char[0]    +    1;    	non-compiled	[CE]  	107	None	replace
37	[BUG]  [BUGGY]  char[]  buffer,  int  count)  {  return  new  char[0]  +  1;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count)  {  return  new  char[0]  +  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count)  {  return  new  char[0]  +  1;	  char[]    buffer,    Random    random)    {    return    new    char[0]    +    1;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
38	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
39	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
40	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  {  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  {  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  {  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
41	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  0,  letters);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  0,  letters);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  0,  letters);	  char[]    buffer,    Random    random,    letters);    	non-compiled	[CE]  	119	None	replace
42	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  int  letters);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  int  letters);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  int  letters);	  char[]    buffer,    Random    random,    letters);    	non-compiled	[CE]  	119	None	replace
43	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  number);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  number);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  number);	  char[]    buffer,    Random    random,    letters);    	non-compiled	[CE]  	119	None	replace
44	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  ch)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  int  ch)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  ch)  {	  char[]    buffer,    int    ch)    {    	non-compiled	[CE]  <identifier>  expected	117	None	replace
45	[BUG]  [BUGGY]  char[]  buffer,  short  ch)  {  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  short  ch)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  short  ch)  {	  char[]    buffer,    int    ch)    {    	non-compiled	[CE]  <identifier>  expected	117	None	replace
46	[BUG]  [BUGGY]  int  count  =  random.count(chars,  ch);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  random.count(chars,  ch);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count(chars,  ch);	  int    count    =    random.count(ch);    	non-compiled	[CE]  	87	None	replace
47	[BUG]  [BUGGY]  char  count  =  random.count(ch);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char  count  =  random.count(ch);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char  count  =  random.count(ch);	  int    count    =    random.count(ch);    	non-compiled	[CE]  	87	None	replace
48	[BUG]  [BUGGY]  int  count  =  random.count(chars,  0,  ch);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  random.count(chars,  0,  ch);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count(chars,  0,  ch);	  int    count    =    random.count(ch);    	non-compiled	[CE]  	87	None	replace
49	[BUG]  [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextToken()!=  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextToken()!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||(numbers  &&  random.nextToken()!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextToken()!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
50	[BUG]  [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextToken()!=  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextToken()!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||(numbers  &&  random.nextToken()!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextToken()!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
51	[BUG]  [BUGGY]  char[]  buffer,  0,  random,  numbers)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random,  numbers)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random,  numbers)  {	  char[]    buffer,    chars,    0,    random)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
52	[BUG]  [BUGGY]  char[]  buffer,  0,  random.length)  {  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random.length)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random.length)  {	  char[]    buffer,    chars,    0,    random)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
53	[BUG]  [BUGGY]  char[]  buffer,  0,  random,  null)  {  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random,  null)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random,  null)  {	  char[]    buffer,    chars,    0,    random)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
54	[BUG]  [BUGGY]  char[]  buffer,  0,  random,  letters)  {  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random,  letters)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random,  letters)  {	  char[]    buffer,    chars,    0,    random)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
55	[BUG]  [BUGGY]  if(ch  ==  0  ||(letters  &&  random.getChars(ch)!=  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||(letters  &&  random.getChars(ch)!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||(letters  &&  random.getChars(ch)!=  0))  {	  if(count    ==    0    ||(letters    &&    random.getChars(ch)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
56	[BUG]  [BUGGY]  if(ch  ==  0  ||(letters  &&  random.getChars(count)!=  0))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||(letters  &&  random.getChars(count)!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||(letters  &&  random.getChars(count)!=  0))  {	  if(count    ==    0    ||(letters    &&    random.getChars(ch)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
57	[BUG]  [BUGGY]  if(numbers  ||(letters  &&  random.getChars(ch)!=  0))  {  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(numbers  ||(letters  &&  random.getChars(ch)!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(numbers  ||(letters  &&  random.getChars(ch)!=  0))  {	  if(count    ==    0    ||(letters    &&    random.getChars(ch)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
58	[BUG]  [BUGGY]  if(ch  ==  random  ||  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  random  ||  chars.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  random  ||  chars.length  ==  0)  {	  if(chars    ==    random    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
59	[BUG]  [BUGGY]  if(chars  ==  random  ||  ch  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  random  ||  ch  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  random  ||  ch  ==  0)  {	  if(chars    ==    random    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
60	[BUG]  [BUGGY]  if(count  ==  random  ||  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  random  ||  chars.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  random  ||  chars.length  ==  0)  {	  if(chars    ==    random    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
61	[BUG]  [BUGGY]  if(count  ==  0  ||  random.length  ==  0  ||  letters)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.length  ==  0  ||  letters)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.length  ==  0  ||  letters)  {	  if(count    ==    0    ||    random.length    ==    0    ||    numbers)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
62	[BUG]  [BUGGY]  if(count  ==  0  ||  random.length  ==  0  ||  chars.length  >  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.length  ==  0  ||  chars.length  >  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.length  ==  0  ||  chars.length  >  0)  {	  if(count    ==    0    ||    random.length    ==    0    ||    numbers)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
63	[BUG]  [BUGGY]  if(count  ==  0  ||  random.length  ==  0  ||  chars.length!=  0)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.length  ==  0  ||  chars.length!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.length  ==  0  ||  chars.length!=  0)  {	  if(count    ==    0    ||    random.length    ==    0    ||    numbers)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
64	[BUG]  [BUGGY]  if(numbers  ==  0  ||  random.length  ==  0  ||  count)  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(numbers  ==  0  ||  random.length  ==  0  ||  count)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(numbers  ==  0  ||  random.length  ==  0  ||  count)  {	  if(count    ==    0    ||    random.length    ==    0    ||    numbers)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
65	[BUG]  [BUGGY]  if(chars  ==  null  ||  ch.length  <  =  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  null  ||  ch.length  <  =  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  ch.length  <  =  0)  {	  if(chars    ==    null    ||    chars.length    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
66	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length  <  =  1)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  null  ||  chars.length  <  =  1)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  chars.length  <  =  1)  {	  if(chars    ==    null    ||    chars.length    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
67	[BUG]  [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length  +  1,  random.length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length  +  1,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length  +  1,  random.length);	  char[]    buffer,    int    count)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
68	[BUG]  [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length  +  1);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length  +  1);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length  +  1);	  char[]    buffer,    int    count)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
69	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  count)  {  return  new  String(buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  int  count)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  count)  {  return  new  String(buffer,  0,  random.length);	  char[]    buffer,    int    count)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
70	[BUG]  [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length,  start);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length,  start);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length,  start);	  char[]    buffer,    int    count)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
71	[BUG]  [BUGGY]  int  count  =  random.count()  /  1;  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  random.count()  /  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count()  /  1;	  int    count    =    random.count()    +    1;    	non-compiled	[CE]  	48	None	replace
72	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
73	[BUG]  [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextCharacter()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextCharacter()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||(numbers  &&  random.nextCharacter()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextCharacter()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
74	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextCharacter()!=  0))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextCharacter()!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextCharacter()!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextCharacter()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
75	[BUG]  [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextCharacter()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextCharacter()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||(numbers  &&  random.nextCharacter()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextCharacter()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
76	[BUG]  [BUGGY]  if(count  ==  0  ||  letters  &&  random.nextDouble()!=  0)  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  letters  &&  random.nextDouble()!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  letters  &&  random.nextDouble()!=  0)  {	  if(count    ==    0    ||    numbers    &&    random.nextDouble()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
77	[BUG]  [BUGGY]  if(count  ==  0  ||  numbers  &&  random.nextInt()!=  0)  {  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  numbers  &&  random.nextInt()!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  numbers  &&  random.nextInt()!=  0)  {	  if(count    ==    0    ||    numbers    &&    random.nextDouble()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
78	[BUG]  [BUGGY]  if(count  ==  0  ||  numbers  &&  random.nextCharacter()!=  0)  {  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  numbers  &&  random.nextCharacter()!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  numbers  &&  random.nextCharacter()!=  0)  {	  if(count    ==    0    ||    numbers    &&    random.nextDouble()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
79	[BUG]  [BUGGY]  if(count  ==  0  ||  ch!=  random.nextDouble())  {  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  ch!=  random.nextDouble())  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  ch!=  random.nextDouble())  {	  if(count    ==    0    ||    numbers    &&    random.nextDouble()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
80	[BUG]  [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextChar()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextChar()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||(numbers  &&  random.nextChar()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextChar()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
81	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextChar()!=  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextChar()!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextChar()!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextChar()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
82	[BUG]  [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextChar()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextChar()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||(numbers  &&  random.nextChar()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextChar()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
83	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z')&&((  random.nextToken()  ==  'z  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z')&&((  random.nextToken()  ==  'z  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z')&&((  random.nextToken()  ==  'z	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
84	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >>  'z')&&((  random.nextToken()  ==  'z  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >>  'z')&&((  random.nextToken()  ==  'z  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >>  'z')&&((  random.nextToken()  ==  'z	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
85	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
86	[BUG]  [BUGGY]  char[]  buffer,  0,  ch);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  ch);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  ch);	  char[]    buffer,    chars,    ch);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
87	[BUG]  [BUGGY]  char[]  buffer,  ch,  numbers);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  ch,  numbers);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  ch,  numbers);	  char[]    buffer,    chars,    ch);    	non-compiled	[CE]  	25	None	replace
88	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_	  if((    random    ==    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
89	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)	  if((    random    ==    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
90	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextInt()!=  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextInt()!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextInt()!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextDouble()!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
91	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextCharacters()!=  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextCharacters()!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextCharacters()!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextDouble()!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
92	[BUG]  [BUGGY]  char  count  =  random.count();  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char  count  =  random.count();  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char  count  =  random.count();	  int    count    =    chars.count();    	non-compiled	[CE]  	49	None	replace
93	[BUG]  [BUGGY]  char[]  buffer,  ch,  0,  random);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  ch,  0,  random);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  ch,  0,  random);	  char[]    buffer,    ch,    random);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
94	[BUG]  [BUGGY]  char[]  buffer,  ch,  random,  numbers);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  ch,  random,  numbers);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  ch,  random,  numbers);	  char[]    buffer,    ch,    random);    	non-compiled	[CE]  	23	None	replace
95	[BUG]  [BUGGY]  char[]  buffer,  ch,  0,  random.length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  ch,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  ch,  0,  random.length);	  char[]    buffer,    ch,    random);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
96	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch,  0,  chars.length)!=  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch,  0,  chars.length)!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.getChars(ch,  0,  chars.length)!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.getChars(ch,    chars.length)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
97	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch,  chars,  0,  chars.length)!=  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch,  chars,  0,  chars.length)!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.getChars(ch,  chars,  0,  chars.length)!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.getChars(ch,    chars.length)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
98	[BUG]  [BUGGY]  if(count  ==  0  ||(letters  &&  random.getChars(ch,  chars.length)!=  0))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(letters  &&  random.getChars(ch,  chars.length)!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(letters  &&  random.getChars(ch,  chars.length)!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.getChars(ch,    chars.length)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
99	[BUG]  [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.getChars(ch,  chars.length)!=  0))  {  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.getChars(ch,  chars.length)!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||(numbers  &&  random.getChars(ch,  chars.length)!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.getChars(ch,    chars.length)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
100	[BUG]  [BUGGY]  char[]  buffer,  int  count,  Random  random)  {  return  new  String(buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count,  Random  random)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count,  Random  random)  {  return  new  String(buffer,  0,  random.length);	  char[]    buffer,    int    offset,    Random    random)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
101	[BUG]  [BUGGY]  char[]  buffer,  int  offset,  Random  random,  boolean  numbers)  {  return  new  String(buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  offset,  Random  random,  boolean  numbers)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  offset,  Random  random,  boolean  numbers)  {  return  new  String(buffer,  0,  random.length);	  char[]    buffer,    int    offset,    Random    random)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
102	[BUG]  [BUGGY]  char[]  buffer,  Random.parseChar(ch));  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random.parseChar(ch));  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random.parseChar(ch));	  char[]    buffer,    Random.valueOf(ch));    	non-compiled	[CE]  	40	None	replace
103	[BUG]  [BUGGY]  char[]  buffer,  Random.valueOf(ch),  random);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random.valueOf(ch),  random);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random.valueOf(ch),  random);	  char[]    buffer,    Random.valueOf(ch));    	non-compiled	[CE]  	40	None	replace
104	[BUG]  [BUGGY]  char[]  buffer,  Random.valueOf(random));  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random.valueOf(random));  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random.valueOf(random));	  char[]    buffer,    Random.valueOf(ch));    	non-compiled	[CE]  	40	None	replace
105	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  count,  boolean  letters)  {  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  int  count,  boolean  letters)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  count,  boolean  letters)  {	  char[]    buffer,    int    count,    boolean    letters)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
106	[BUG]  [BUGGY]  char[]  buffer,  int  count,  boolean  letters,  boolean  numbers)  {  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count,  boolean  letters,  boolean  numbers)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count,  boolean  letters,  boolean  numbers)  {	  char[]    buffer,    int    count,    boolean    letters)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
107	[BUG]  [BUGGY]  char[]  buffer,  int  count,  boolean  letters,  boolean  starts)  {  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count,  boolean  letters,  boolean  starts)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count,  boolean  letters,  boolean  starts)  {	  char[]    buffer,    int    count,    boolean    letters)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
108	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextChar()))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextChar()))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextChar()))  {	  if(count    ==    0    ||(numbers    &&    random.nextBoolean()))    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
109	[BUG]  [BUGGY]  if(count  ==  0  ||(letters  &&  random.nextBoolean()))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(letters  &&  random.nextBoolean()))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(letters  &&  random.nextBoolean()))  {	  if(count    ==    0    ||(numbers    &&    random.nextBoolean()))    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
110	[BUG]  [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextBoolean()))  {  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextBoolean()))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||(numbers  &&  random.nextBoolean()))  {	  if(count    ==    0    ||(numbers    &&    random.nextBoolean()))    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
111	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextBoolean())||(!letters  &&!numbers))  {  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextBoolean())||(!letters  &&!numbers))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextBoolean())||(!letters  &&!numbers))  {	  if(count    ==    0    ||(numbers    &&    random.nextBoolean()))    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
112	[BUG]  [BUGGY]  if(count  ==  0  ||  random.numbers  &&  numbers)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.numbers  &&  numbers)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.numbers  &&  numbers)  {	  if(count    ==    0    ||    numbers    &&    random.numbers)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
113	[BUG]  [BUGGY]  if(count  ==  0  ||  letters  &&  random.numbers)  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  letters  &&  random.numbers)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  letters  &&  random.numbers)  {	  if(count    ==    0    ||    numbers    &&    random.numbers)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
114	[BUG]  [BUGGY]  if(count  ==  0  ||  ch  ||  random.numbers)  {  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  ch  ||  random.numbers)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  ch  ||  random.numbers)  {	  if(count    ==    0    ||    numbers    &&    random.numbers)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
115	[BUG]  [BUGGY]  if(count  ==  0  ||  chars.length  ||  random.numbers)  {  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  chars.length  ||  random.numbers)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  chars.length  ||  random.numbers)  {	  if(count    ==    0    ||    numbers    &&    random.numbers)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
116	[BUG]  [BUGGY]  char[]  buffer,  int  count)  {  return  new  char[1];  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count)  {  return  new  char[1];  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count)  {  return  new  char[1];	  char[]    buffer,    int    count)    {    return    new    char[0];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
117	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  count)  {  return  new  char[0];  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  int  count)  {  return  new  char[0];  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  count)  {  return  new  char[0];	  char[]    buffer,    int    count)    {    return    new    char[0];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
118	[BUG]  [BUGGY]  char[]  buffer,  int  offset)  {  return  new  char[0];  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  offset)  {  return  new  char[0];  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  offset)  {  return  new  char[0];	  char[]    buffer,    int    count)    {    return    new    char[0];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
119	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
120	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
121	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  J  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  J  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  J	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
122	[BUG]  [BUGGY]  if(count  ==  0  ||  random.numbers  ||  numbers)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.numbers  ||  numbers)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.numbers  ||  numbers)  {	  if(count    ==    0    ||    random.numbers)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
123	[BUG]  [BUGGY]  if(count  ==  0  ||  random.numbers  ||  letters)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.numbers  ||  letters)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.numbers  ||  letters)  {	  if(count    ==    0    ||    random.numbers)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
124	[BUG]  [BUGGY]  if(numbers  ||  random.numbers)  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(numbers  ||  random.numbers)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(numbers  ||  random.numbers)  {	  if(count    ==    0    ||    random.numbers)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
125	[BUG]  [BUGGY]  char[]  buffer,  Random  RANDOM  random,  ch);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  RANDOM  random,  ch);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  RANDOM  random,  ch);	  char[]    buffer,    Random    RANDOM    random);    	non-compiled	[CE]  	39	None	replace
126	[BUG]  [BUGGY]  char[]  buffer,  0,  ch)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  ch)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  ch)  {	  char[]    buffer,    chars,    ch)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
127	[BUG]  [BUGGY]  CharSequence[]  buffer,  chars,  random)  {  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  CharSequence[]  buffer,  chars,  random)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	CharSequence[]  buffer,  chars,  random)  {	  char[]    buffer,    chars,    ch)    {    	non-compiled	[CE]  	26	None	replace
128	[BUG]  [BUGGY]  if(ch  ==  0  ||  random.getString().length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||  random.getString().length()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||  random.getString().length()  ==  0)  {	  if(count    ==    0    ||    random.getString().length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
129	[BUG]  [BUGGY]  if(chars  ==  0  ||  random.getString().length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||  random.getString().length()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||  random.getString().length()  ==  0)  {	  if(count    ==    0    ||    random.getString().length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
130	[BUG]  [BUGGY]  if(count  ==  0  ||  random.getBytes().length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.getBytes().length()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.getBytes().length()  ==  0)  {	  if(count    ==    0    ||    random.getString().length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
131	[BUG]  [BUGGY]  char[]  buffer,  ch);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  ch);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  ch);	  char[]    buffer,    random);    	non-compiled	[CE]  	2	None	replace
132	[BUG]  [BUGGY]  char[]  buffer,  new  char[0]);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  new  char[0]);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  new  char[0]);	  char[]    buffer,    random);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
133	[BUG]  [BUGGY]  char[]  buffer,  0,  buffer.length;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  buffer.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  buffer.length;	  char[]    buffer,    0,    random);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
134	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
135	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
136	[BUG]  [BUGGY]  char[]  buffer,  Random  random)  {  return  new  char[10];  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random)  {  return  new  char[10];  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random)  {  return  new  char[10];	  char[]    buffer,    Random    random)    {    return    new    char[16];    	non-compiled	[CE]  	115	None	replace
137	[BUG]  [BUGGY]  if(ch  ==  0  ||  random.getKey()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||  random.getKey()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||  random.getKey()  ==  0)  {	  if(count    ==    0    ||    random.getKey()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
138	[BUG]  [BUGGY]  if(count  ==  0  ||  random.getLength()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.getLength()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.getLength()  ==  0)  {	  if(count    ==    0    ||    random.getKey()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
139	[BUG]  [BUGGY]  int  count  =(ch  ==  null)?  random.length  :  ch.length;  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(ch  ==  null)?  random.length  :  ch.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(ch  ==  null)?  random.length  :  ch.length;	  int    count    =(chars    ==    null)?    random.length    :    chars.length;    	non-compiled	[CE]  	84	None	replace
140	[BUG]  [BUGGY]  int  count  =(characters  ==  null)?  random.length  :  chars.length;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(characters  ==  null)?  random.length  :  chars.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(characters  ==  null)?  random.length  :  chars.length;	  int    count    =(chars    ==    null)?    random.length    :    chars.length;    	non-compiled	[CE]  	84	None	replace
141	[BUG]  [BUGGY]  char[]  buffer,  start,  0,  random.length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  start,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  start,  0,  random.length);	  char[]    buffer,    start,    random);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
142	[BUG]  [BUGGY]  char[]  buffer,  start,  end);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  start,  end);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  start,  end);	  char[]    buffer,    start,    random);    	non-compiled	[CE]  	97	None	replace
143	[BUG]  [BUGGY]  char[]  buffer,  start,  0,  random);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  start,  0,  random);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  start,  0,  random);	  char[]    buffer,    start,    random);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
144	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  end)  {  return  new  String(buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  int  end)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  end)  {  return  new  String(buffer,  0,  random.length);	  char[]    buffer,    int    start,    Random    random)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
145	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  len)  {  return  new  String(buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  int  len)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  len)  {  return  new  String(buffer,  0,  random.length);	  char[]    buffer,    int    start,    Random    random)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
146	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  number)  {  return  new  String(buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  int  number)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  number)  {  return  new  String(buffer,  0,  random.length);	  char[]    buffer,    int    start,    Random    random)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
147	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  0,  numbers);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  0,  numbers);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  0,  numbers);	  char[]    buffer,    Random    random,    numbers);    	non-compiled	[CE]  	103	None	replace
148	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  new  int[]  {  ch  }  );  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  new  int[]  {  ch  }  );  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  new  int[]  {  ch  }  );	  char[]    buffer,    Random    random,    numbers);    	non-compiled	[CE]  	103	None	replace
149	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  0,  numberCount);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  0,  numberCount);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  0,  numberCount);	  char[]    buffer,    Random    random,    numbers);    	non-compiled	[CE]  	103	None	replace
150	[BUG]  [BUGGY]  char[]  buffer,  0,  random.length,  ch);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random.length,  ch);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random.length,  ch);	  char[]    buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
151	[BUG]  [BUGGY]  char[]  buffer,  0,  random.length  +  1);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random.length  +  1);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random.length  +  1);	  char[]    buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
152	[BUG]  [BUGGY]  char[]  buffer,  0,  random.length  +  1,  random.length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random.length  +  1,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random.length  +  1,  random.length);	  char[]    buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
153	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  {  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  {  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  {  'z'  ||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
154	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z'  ||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
155	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
156	[BUG]  [BUGGY]  if(ch  ==  0  ||  random.getValue()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||  random.getValue()!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||  random.getValue()!=  0)  {	  if(count    ==    0    ||    random.getValue()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
157	[BUG]  [BUGGY]  if(count  ==  0  &&  random.getValue()!=  0)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  &&  random.getValue()!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  &&  random.getValue()!=  0)  {	  if(count    ==    0    ||    random.getValue()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
158	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VAL    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
159	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VAL    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
160	[BUG]  [BUGGY]  char[]  buffer,  0,  buffer.length,  0,  random);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  buffer.length,  0,  random);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  buffer.length,  0,  random);	  char[]    buffer,    chars,    0,    random);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
161	[BUG]  [BUGGY]  char[]  buffer,  0,  buffer.length,  random);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  buffer.length,  random);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  buffer.length,  random);	  char[]    buffer,    chars,    0,    random);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
162	[BUG]  [BUGGY]  CharSequence[]  buffer,  chars,  0,  random);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  CharSequence[]  buffer,  chars,  0,  random);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	CharSequence[]  buffer,  chars,  0,  random);	  char[]    buffer,    chars,    0,    random);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
163	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  int  numbers)  {  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  int  numbers)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  int  numbers)  {	  char[]    buffer,    Random    random,    boolean    numbers)    {    	non-compiled	[CE]  	18	None	replace
164	[BUG]  [BUGGY]  int  count  =  random.length  -  1  +  1;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  random.length  -  1  +  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.length  -  1  +  1;	  int    count    =    random.length    -    1;    	non-compiled	[CE]  	7	None	replace
165	[BUG]  [BUGGY]  int  count  =  random.length  -  2;  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  random.length  -  2;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.length  -  2;	  int    count    =    random.length    -    1;    	non-compiled	[CE]  	7	None	replace
166	[BUG]  [BUGGY]  if(ch  ==  0  &&  random.getValue()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  &&  random.getValue()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  &&  random.getValue()  ==  0)  {	  if(count    ==    0    &&    random.getValue()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
167	[BUG]  [BUGGY]  if(numbers  &&  random.getValue()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(numbers  &&  random.getValue()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(numbers  &&  random.getValue()  ==  0)  {	  if(count    ==    0    &&    random.getValue()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
168	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  int  offset)  {  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  int  offset)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  int  offset)  {	  char[]    buffer,    Random    random,    int    count)    {    	non-compiled	[CE]  	16	None	replace
169	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  int  number)  {  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  int  number)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  int  number)  {	  char[]    buffer,    Random    random,    int    count)    {    	non-compiled	[CE]  	16	None	replace
170	[BUG]  [BUGGY]  String  count  =  random.length;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  String  count  =  random.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	String  count  =  random.length;	  char    count    =    random.length;    	non-compiled	[CE]  	6	None	replace
171	[BUG]  [BUGGY]  char  count  =  chars.length;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char  count  =  chars.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char  count  =  chars.length;	  char    count    =    random.length;    	non-compiled	[CE]  	6	None	replace
172	[BUG]  [BUGGY]  char  count  =  random.length  -  1;  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char  count  =  random.length  -  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char  count  =  random.length  -  1;	  char    count    =    random.length;    	non-compiled	[CE]  	6	None	replace
173	[BUG]  [BUGGY]  char  count  =  random.length  +  1;  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char  count  =  random.length  +  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char  count  =  random.length  +  1;	  char    count    =    random.length;    	non-compiled	[CE]  	6	None	replace
174	[BUG]  [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextCharacters()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextCharacters()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||(numbers  &&  random.nextCharacters()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextCharacters()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
175	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextCharacters().length  >  0))  {  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextCharacters().length  >  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextCharacters().length  >  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextCharacters()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
176	[BUG]  [BUGGY]  if(numbers  ||(numbers  &&  random.nextCharacters()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(numbers  ||(numbers  &&  random.nextCharacters()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(numbers  ||(numbers  &&  random.nextCharacters()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextCharacters()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
177	[BUG]  [BUGGY]  CharSequence[]  buffer,  0,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  CharSequence[]  buffer,  0,  chars.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	CharSequence[]  buffer,  0,  chars.length);	  char[]    buffer,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
178	[BUG]  [BUGGY]  if((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.n  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.n  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.n	  if((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&((    random.nextToken    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
179	[BUG]  [BUGGY]  if((  random.nextToken()  ==  'z'  ||  random.nextToken()!=  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random.nextToken()  ==  'z'  ||  random.nextToken()!=  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random.nextToken()  ==  'z'  ||  random.nextToken()!=  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken	  if((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&((    random.nextToken    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
180	[BUG]  [BUGGY]  if((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken	  if((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&((    random.nextToken    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
181	[BUG]  [BUGGY]  char[]  buffer,  chars,  random,  false)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  random,  false)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  random,  false)  {	  char[]    buffer,    chars,    random,    RANDOM)    {    	non-compiled	[CE]  <identifier>  expected	133	None	replace
182	[BUG]  [BUGGY]  char[]  buffer,  chars,  random,  null)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  random,  null)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  random,  null)  {	  char[]    buffer,    chars,    random,    RANDOM)    {    	non-compiled	[CE]  <identifier>  expected	133	None	replace
183	[BUG]  [BUGGY]  char[]  buffer,  chars,  start,  RANDOM)  {  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  start,  RANDOM)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  start,  RANDOM)  {	  char[]    buffer,    chars,    random,    RANDOM)    {    	non-compiled	[CE]  	133	None	replace
184	[BUG]  [BUGGY]  char[]  buffer,  chars,  random,  0)  {  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  random,  0)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  random,  0)  {	  char[]    buffer,    chars,    random,    RANDOM)    {    	non-compiled	[CE]  <identifier>  expected	133	None	replace
185	[BUG]  [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.getChars(ch)  ==  0))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.getChars(ch)  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||(numbers  &&  random.getChars(ch)  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.getChars(ch)    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
186	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch,  chars.length)  ==  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch,  chars.length)  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.getChars(ch,  chars.length)  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.getChars(ch)    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
187	[BUG]  [BUGGY]  char[]  buffer,  chars,  start,  letters);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  start,  letters);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  start,  letters);	  char[]    buffer,    chars,    random,    letters);    	non-compiled	[CE]  	123	None	replace
188	[BUG]  [BUGGY]  char[]  buffer,  chars,  0,  letters);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  0,  letters);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  0,  letters);	  char[]    buffer,    chars,    random,    letters);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
189	[BUG]  [BUGGY]  char[]  buffer,  ch,  random,  letters);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  ch,  random,  letters);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  ch,  random,  letters);	  char[]    buffer,    chars,    random,    letters);    	non-compiled	[CE]  	123	None	replace
190	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  int  start);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  int  start);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  int  start);	  char[]    buffer,    Random    random,    int    count);    	non-compiled	[CE]  	104	None	replace
191	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  int  count,  letters);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  int  count,  letters);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  int  count,  letters);	  char[]    buffer,    Random    random,    int    count);    	non-compiled	[CE]  	104	None	replace
192	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  0,  count);  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  0,  count);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  0,  count);	  char[]    buffer,    Random    random,    int    count);    	non-compiled	[CE]  	104	None	replace
193	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  short  start);  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  short  start);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  short  start);	  char[]    buffer,    Random    random,    int    count);    	non-compiled	[CE]  	104	None	replace
194	[BUG]  [BUGGY]  int  count  =(numbers  ||  random.length  >  0)?  random.length  :  0;  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  ||  random.length  >  0)?  random.length  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  ||  random.length  >  0)?  random.length  :  0;	  int    count    =(numbers    &&    random.length    >    0)?    random.length    :    0;    	non-compiled	[CE]  	135	None	replace
195	[BUG]  [BUGGY]  int  count  =(numbers  &&  random.length  >  0)?  chars.length  :  0;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  &&  random.length  >  0)?  chars.length  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &&  random.length  >  0)?  chars.length  :  0;	  int    count    =(numbers    &&    random.length    >    0)?    random.length    :    0;    	non-compiled	[CE]  	135	None	replace
196	[BUG]  [BUGGY]  int  count  =(numbers  &&  random.length  >  0)?  chars[0]  :  0;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  &&  random.length  >  0)?  chars[0]  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &&  random.length  >  0)?  chars[0]  :  0;	  int    count    =(numbers    &&    random.length    >    0)?    random.length    :    0;    	non-compiled	[CE]  	135	None	replace
197	[BUG]  [BUGGY]  int  count  =(count  &&  random.length  >  0)?  random.length  :  0;  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(count  &&  random.length  >  0)?  random.length  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(count  &&  random.length  >  0)?  random.length  :  0;	  int    count    =(numbers    &&    random.length    >    0)?    random.length    :    0;    	non-compiled	[CE]  	135	None	replace
198	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
199	[BUG]  [BUGGY]  int  count  =  this.random.length()  +  1;  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  this.random.length()  +  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  this.random.length()  +  1;	  int    count    =    this.random.length();    	non-compiled	[CE]  	138	None	replace
200	[BUG]  [BUGGY]  int  count  =  this.random.length()  -  1;  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  this.random.length()  -  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  this.random.length()  -  1;	  int    count    =    this.random.length();    	non-compiled	[CE]  	138	None	replace
201	[BUG]  [BUGGY]  if(ch  ==  0  ||  count  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||  count  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||  count  ==  0)  {	  if(count    ==    0    ||    ch    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
202	[BUG]  [BUGGY]  if(count  ==  0  ||  ch  ==  0  ||  random.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  ch  ==  0  ||  random.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  ch  ==  0  ||  random.length  ==  0)  {	  if(count    ==    0    ||    ch    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
203	[BUG]  [BUGGY]  if(count  ==  0  ||  random.numbers  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.numbers  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.numbers  ==  0)  {	  if(count    ==    0    ||    ch    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
204	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  randomCount)  {  return  new  String(buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  int  randomCount)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  randomCount)  {  return  new  String(buffer,  0,  random.length);	  char[]    buffer,    int    randomCount)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
205	[BUG]  [BUGGY]  char[]  buffer,  int  offset)  {  return  new  String(buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  offset)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  offset)  {  return  new  String(buffer,  0,  random.length);	  char[]    buffer,    int    randomCount)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
206	[BUG]  [BUGGY]  CharSequence[]  buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  CharSequence[]  buffer,  0,  buffer.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	CharSequence[]  buffer,  0,  buffer.length);	  char[]    buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
207	[BUG]  [BUGGY]  char[]  buffer,  1,  buffer.length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  1,  buffer.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  1,  buffer.length);	  char[]    buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
208	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  0,  random.length);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  0,  random.length);	  char[]    buffer,    Random    random,    ch);    	non-compiled	[CE]  	41	None	replace
209	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  0);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  0);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  0);	  char[]    buffer,    Random    random,    ch);    	non-compiled	[CE]  	41	None	replace
210	[BUG]  [BUGGY]  if((  letters  &&  random.nextToken()  ==  0)||(count  &&  random.nextToken()  ==  0))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  letters  &&  random.nextToken()  ==  0)||(count  &&  random.nextToken()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.nextToken()  ==  0)||(count  &&  random.nextToken()  ==  0))  {	  if((    letters    &&    random.nextToken()    ==    0)||(numbers    &&    random.nextToken()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
211	[BUG]  [BUGGY]  if((  letters  &&  random.nextToken()  ==  0)||(numbers  &&  random.nextToken()!=  0))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  letters  &&  random.nextToken()  ==  0)||(numbers  &&  random.nextToken()!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.nextToken()  ==  0)||(numbers  &&  random.nextToken()!=  0))  {	  if((    letters    &&    random.nextToken()    ==    0)||(numbers    &&    random.nextToken()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
212	[BUG]  [BUGGY]  if((  letters  &&  random.nextToken()!=  0)||(count  &&  random.nextToken()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  letters  &&  random.nextToken()!=  0)||(count  &&  random.nextToken()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.nextToken()!=  0)||(count  &&  random.nextToken()  ==  0))  {	  if((    letters    &&    random.nextToken()    ==    0)||(numbers    &&    random.nextToken()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
213	[BUG]  [BUGGY]  if(ch  ==  null  ||  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  null  ||  chars.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  null  ||  chars.length  ==  0)  {	  if(chars    ==    null    ||    ch.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
214	[BUG]  [BUGGY]  if(chars  ==  null  ||  random.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  null  ||  random.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  random.length  ==  0)  {	  if(chars    ==    null    ||    ch.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
215	[BUG]  [BUGGY]  if(chars  ==  null  ||  ch.length!=  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  null  ||  ch.length!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  ch.length!=  0)  {	  if(chars    ==    null    ||    ch.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
216	[BUG]  [BUGGY]  CharSequence[]  buffer,  0,  chars);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  CharSequence[]  buffer,  0,  chars);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	CharSequence[]  buffer,  0,  chars);	  char[]    buffer,    0,    chars);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
217	[BUG]  [BUGGY]  char[]  buffer,  0,  random.length;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random.length;	  char[]    buffer,    0,    chars);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
218	[BUG]  [BUGGY]  int  count  =(random  ==  null)?  0  :  random.length;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(random  ==  null)?  0  :  random.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(random  ==  null)?  0  :  random.length;	  int    count    =(chars    ==    null)?    0    :    random.length;    	non-compiled	[CE]  	85	None	replace
219	[BUG]  [BUGGY]  int  count  =(numbers  ==  null)?  0  :  random.length;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  ==  null)?  0  :  random.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  ==  null)?  0  :  random.length;	  int    count    =(chars    ==    null)?    0    :    random.length;    	non-compiled	[CE]  	85	None	replace
220	[BUG]  [BUGGY]  int  count  =(ch  ==  null)?  0  :  ch;  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(ch  ==  null)?  0  :  ch;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(ch  ==  null)?  0  :  ch;	  int    count    =(chars    ==    null)?    0    :    random.length;    	non-compiled	[CE]  	85	None	replace
221	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  int  end)  {  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  int  end)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  int  end)  {	  char[]    buffer,    Random    random,    int    start)    {    	non-compiled	[CE]  	17	None	replace
222	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  short  start)  {  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  short  start)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  short  start)  {	  char[]    buffer,    Random    random,    int    start)    {    	non-compiled	[CE]  	17	None	replace
223	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  int  start,  int  letters)  {  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  int  start,  int  letters)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  int  start,  int  letters)  {	  char[]    buffer,    Random    random,    int    start)    {    	non-compiled	[CE]  	17	None	replace
224	[BUG]  [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextDouble()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextDouble()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||(numbers  &&  random.nextDouble()  ==  0))  {	  if(chars    ==    0    ||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
225	[BUG]  [BUGGY]  if(chars  ==  0  ||(count  &&  random.nextDouble()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||(count  &&  random.nextDouble()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||(count  &&  random.nextDouble()  ==  0))  {	  if(chars    ==    0    ||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
226	[BUG]  [BUGGY]  if(numbers  ==  0  ||(count  &&  random.nextDouble()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(numbers  ==  0  ||(count  &&  random.nextDouble()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(numbers  ==  0  ||(count  &&  random.nextDouble()  ==  0))  {	  if(chars    ==    0    ||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
227	[BUG]  [BUGGY]  int  count  =  random.count(ch,  chars);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  random.count(ch,  chars);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count(ch,  chars);	  int    count    =    random.count(chars);    	non-compiled	[CE]  	50	None	replace
228	[BUG]  [BUGGY]  if(numbers  ||  random.numbers  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(numbers  ||  random.numbers  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(numbers  ||  random.numbers  ==  0)  {	  if(count    ==    0    ||    random.numbers!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
229	[BUG]  [BUGGY]  char[]  buffer,  chars)  {  return  new  String(buffer,  0,  random.length);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars)  {  return  new  String(buffer,  0,  random.length);	  char[]    buffer,    chars)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  	127	None	replace
230	[BUG]  [BUGGY]  char[]  buffer)  {  return  new  String(buffer,  0,  random.length);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer)  {  return  new  String(buffer,  0,  random.length);	  char[]    buffer,    chars)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  	127	None	replace
231	[BUG]  [BUGGY]  char[]  buffer,  boolean  numbers)  {  return  new  String(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  boolean  numbers)  {  return  new  String(buffer,  0,  buffer.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  boolean  numbers)  {  return  new  String(buffer,  0,  buffer.length);	  char[]    buffer,    chars)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
232	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  int  letters)  {  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  int  letters)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  int  letters)  {	  char[]    buffer,    Random    random,    boolean    letters)    {    	non-compiled	[CE]  	19	None	replace
233	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  Character.toCharArray(ch))  {  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  Character.toCharArray(ch))  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  Character.toCharArray(ch))  {	  char[]    buffer,    Random    random,    charCount)    {    	non-compiled	[CE]  	120	None	replace
234	[BUG]  [BUGGY]  char[]  buffer,  0,  buffer.length)  {  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  buffer.length)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  buffer.length)  {	  char[]    buffer,    0,    random)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
235	[BUG]  [BUGGY]  char[]  buffer,  0,  chars.length)  {  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  chars.length)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  chars.length)  {	  char[]    buffer,    0,    random)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
236	[BUG]  [BUGGY]  char[]  buffer,  0,  count)  {  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  count)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  count)  {	  char[]    buffer,    0,    random)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
237	[BUG]  [BUGGY]  if(chars  ==  0  ||(count  &&  random.getChars(ch)!=  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||(count  &&  random.getChars(ch)!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||(count  &&  random.getChars(ch)!=  0))  {	  if(chars    ==    0    ||(numbers    &&    random.getChars(ch)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
238	[BUG]  [BUGGY]  int  count  =  random.count(chars,  0,  chars.length)-  1;  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  random.count(chars,  0,  chars.length)-  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count(chars,  0,  chars.length)-  1;	  int    count    =    random.count()    -    1;    	non-compiled	[CE]  	86	None	replace
239	[BUG]  [BUGGY]  int  count  =  random.count(chars)-  1;  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  random.count(chars)-  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count(chars)-  1;	  int    count    =    random.count()    -    1;    	non-compiled	[CE]  	86	None	replace
240	[BUG]  [BUGGY]  int  count  =  random.count(chars,  0,  chars.length);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  random.count(chars,  0,  chars.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count(chars,  0,  chars.length);	  int    count    =    random.count()    -    1;    	non-compiled	[CE]  	86	None	replace
241	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
242	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  J  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  J  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  J	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
243	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
244	[BUG]  [BUGGY]  if(numbers  ||(count  &&  random.nextToken()  ==  0))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(numbers  ||(count  &&  random.nextToken()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(numbers  ||(count  &&  random.nextToken()  ==  0))  {	  if(ch    ==    0    ||(numbers    &&    random.nextToken()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
245	[BUG]  [BUGGY]  CharSequence[]  buffer,  Random  random)  {  return  new  char[1];  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  CharSequence[]  buffer,  Random  random)  {  return  new  char[1];  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	CharSequence[]  buffer,  Random  random)  {  return  new  char[1];	  char[]    buffer,    Random    random)    {    return    new    char[1];    	non-compiled	[CE]  	45	None	replace
246	[BUG]  [BUGGY]  char[]  buffer,  ch,  RANDOM)  {  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  ch,  RANDOM)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  ch,  RANDOM)  {	  char[]    buffer,    chars,    RANDOM)    {    	non-compiled	[CE]  	75	None	replace
247	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  4);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  4);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  4);	  char[]    buffer,    Random    random,    RANDOM);    	non-compiled	[CE]  	102	None	replace
248	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  0,  0);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  0,  0);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  0,  0);	  char[]    buffer,    Random    random,    RANDOM);    	non-compiled	[CE]  	102	None	replace
249	[BUG]  [BUGGY]  String  count  =  random.length();  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  String  count  =  random.length();  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	String  count  =  random.length();	  char    count    =    random.length();    	non-compiled	[CE]  	68	None	replace
250	[BUG]  [BUGGY]  char  count  =  random.length()  +  1;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char  count  =  random.length()  +  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char  count  =  random.length()  +  1;	  char    count    =    random.length();    	non-compiled	[CE]  	68	None	replace
251	[BUG]  [BUGGY]  char  count  =  random.length()  *  2;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char  count  =  random.length()  *  2;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char  count  =  random.length()  *  2;	  char    count    =    random.length();    	non-compiled	[CE]  	68	None	replace
252	[BUG]  [BUGGY]  char[]  buffer,  new  char[count  +  1]);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  new  char[count  +  1]);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  new  char[count  +  1]);	  char[]    buffer,    new    char[count]);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
253	[BUG]  [BUGGY]  char[]  buffer,  new  char[count],  random);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  new  char[count],  random);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  new  char[count],  random);	  char[]    buffer,    new    char[count]);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
254	[BUG]  [BUGGY]  char[]  buffer,  new  char[count  *  2]);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  new  char[count  *  2]);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  new  char[count  *  2]);	  char[]    buffer,    new    char[count]);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
255	[BUG]  [BUGGY]  char[]  buffer,  Random  random)  {  return  this;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random)  {  return  this;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random)  {  return  this;	  char[]    buffer,    Random    random)    {    return    null;    	non-compiled	[CE]  	47	None	replace
256	[BUG]  [BUGGY]  char[]  buffer,  String  ch)  {  return  null;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  String  ch)  {  return  null;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  String  ch)  {  return  null;	  char[]    buffer,    Random    random)    {    return    null;    	non-compiled	[CE]  	47	None	replace
257	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  {  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  {  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  {  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
258	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
259	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_	  if((    random    ==    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
260	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_	  if((    random    ==    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
261	[BUG]  [BUGGY]  if(ch  ==  0  ||  random.length  ==  0  ||  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||  random.length  ==  0  ||  chars.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||  random.length  ==  0  ||  chars.length  ==  0)  {	  if(ch    ==    0    ||    random.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
262	[BUG]  [BUGGY]  if(ch  ==  0  ||  random.length  ==  0  ||  count  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||  random.length  ==  0  ||  count  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||  random.length  ==  0  ||  count  ==  0)  {	  if(ch    ==    0    ||    random.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
263	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z')&&((  random.nextToken()  ==  'z')&&  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z')&&((  random.nextToken()  ==  'z')&&  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z')&&((  random.nextToken()  ==  'z')&&	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
264	[BUG]  [BUGGY]  char[]  buffer,  int  end)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  end)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  end)  {	  char[]    buffer,    int    start)    {    	non-compiled	[CE]  <identifier>  expected	108	None	replace
265	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  letters)  {  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  int  letters)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  letters)  {	  char[]    buffer,    int    start)    {    	non-compiled	[CE]  <identifier>  expected	108	None	replace
266	[BUG]  [BUGGY]  char[]  buffer,  int  start,  boolean  numbers)  {  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  boolean  numbers)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  boolean  numbers)  {	  char[]    buffer,    int    start)    {    	non-compiled	[CE]  <identifier>  expected	108	None	replace
267	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    'Z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
268	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  >=  'z'  ||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    'Z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
269	[BUG]  [BUGGY]  if(chars  ==  null  ||  ch!=  '0')  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  null  ||  ch!=  '0')  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  ch!=  '0')  {	  if(chars    ==    null    ||    chars.length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
270	[BUG]  [BUGGY]  int  count  =  this.random.count(chars);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  this.random.count(chars);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  this.random.count(chars);	  int    count    =    this.random.count();    	non-compiled	[CE]  	122	None	replace
271	[BUG]  [BUGGY]  int  count  =  this.random.count(chars,  0,  random.length);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  this.random.count(chars,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  this.random.count(chars,  0,  random.length);	  int    count    =    this.random.count();    	non-compiled	[CE]  	122	None	replace
272	[BUG]  [BUGGY]  char[]  buffer,  new  char[256]);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  new  char[256]);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  new  char[256]);	  char[]    buffer,    new    char[64]);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
273	[BUG]  [BUGGY]  char[]  buffer,  new  char[16]);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  new  char[16]);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  new  char[16]);	  char[]    buffer,    new    char[64]);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
274	[BUG]  [BUGGY]  if(count  ==  0  ||  random.length  ==  0  ||  ch.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.length  ==  0  ||  ch.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.length  ==  0  ||  ch.length  ==  0)  {	  if(count    ==    0    ||    random.length    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
275	[BUG]  [BUGGY]  if(count  ==  0  ||  random.length  ==  0  ||  buffer.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.length  ==  0  ||  buffer.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.length  ==  0  ||  buffer.length  ==  0)  {	  if(count    ==    0    ||    random.length    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
276	[BUG]  [BUGGY]  char[]  buffer,  chars,  start,  number);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  start,  number);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  start,  number);	  char[]    buffer,    chars,    random,    numbers);    	non-compiled	[CE]  	98	None	replace
277	[BUG]  [BUGGY]  char[]  buffer,  chars,  start,  numbers);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  start,  numbers);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  start,  numbers);	  char[]    buffer,    chars,    random,    numbers);    	non-compiled	[CE]  	98	None	replace
278	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  count)  {  return  new  String(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  int  count)  {  return  new  String(buffer,  0,  buffer.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  count)  {  return  new  String(buffer,  0,  buffer.length);	  char[]    buffer,    int    count)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
279	[BUG]  [BUGGY]  char[]  buffer,  int  offset)  {  return  new  String(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  offset)  {  return  new  String(buffer,  0,  buffer.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  offset)  {  return  new  String(buffer,  0,  buffer.length);	  char[]    buffer,    int    count)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
280	[BUG]  [BUGGY]  if(chars  ==  null  ||  random.numbers  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  null  ||  random.numbers  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  random.numbers  ==  0)  {	  if(chars    ==    null    ||    ch    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
281	[BUG]  [BUGGY]  if(chars  ==  null  ||  random.getValue()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  null  ||  random.getValue()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  random.getValue()  ==  0)  {	  if(chars    ==    0    ||    random.getValue()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
282	[BUG]  [BUGGY]  if(buffer  ==  0  ||  count  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(buffer  ==  0  ||  count  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(buffer  ==  0  ||  count  ==  0)  {	  if(count    ==    0    ||    buffer.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
283	[BUG]  [BUGGY]  if(ch  ==  0  ||  buffer.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||  buffer.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||  buffer.length  ==  0)  {	  if(count    ==    0    ||    buffer.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
284	[BUG]  [BUGGY]  char[]  buffer,  chars,  start,  number)  {  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  start,  number)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  start,  number)  {	  char[]    buffer,    chars,    random,    numbers)    {    	non-compiled	[CE]  	29	None	replace
285	[BUG]  [BUGGY]  char[]  buffer,  chars,  start,  numbers)  {  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  start,  numbers)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  start,  numbers)  {	  char[]    buffer,    chars,    random,    numbers)    {    	non-compiled	[CE]  	29	None	replace
286	[BUG]  [BUGGY]  char[]  buffer,  chars,  random,  letters)  {  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  random,  letters)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  random,  letters)  {	  char[]    buffer,    chars,    random,    numbers)    {    	non-compiled	[CE]  	29	None	replace
287	[BUG]  [BUGGY]  char[]  buffer,  chars,  0,  numbers)  {  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  0,  numbers)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  0,  numbers)  {	  char[]    buffer,    chars,    random,    numbers)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
288	[BUG]  [BUGGY]  if(ch  ==  0  &&  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  &&  chars.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  &&  chars.length  ==  0)  {	  if(count    ==    0    &&    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
289	[BUG]  [BUGGY]  if(chars.length  ==  0  &&  count  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars.length  ==  0  &&  count  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars.length  ==  0  &&  count  ==  0)  {	  if(count    ==    0    &&    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
290	[BUG]  [BUGGY]  if(count  ==  0  &&  random.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  &&  random.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  &&  random.length  ==  0)  {	  if(count    ==    0    &&    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
291	[BUG]  [BUGGY]  if(count  ==  0  ||  letters  &&  random.nextDouble()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  letters  &&  random.nextDouble()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  letters  &&  random.nextDouble()  ==  0)  {	  if(count    ==    0    ||    numbers    &&    random.nextDouble()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
292	[BUG]  [BUGGY]  if(count  ==  0  ||  numbers  &&  random.nextCharacter()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  numbers  &&  random.nextCharacter()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  numbers  &&  random.nextCharacter()  ==  0)  {	  if(count    ==    0    ||    numbers    &&    random.nextDouble()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
293	[BUG]  [BUGGY]  if(count  ==  0  ||  random.nextDouble()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.nextDouble()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.nextDouble()  ==  0)  {	  if(count    ==    0    ||    numbers    &&    random.nextDouble()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
294	[BUG]  [BUGGY]  if(count  ==  0  ||  numbers  &&  random.nextInt()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  numbers  &&  random.nextInt()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  numbers  &&  random.nextInt()  ==  0)  {	  if(count    ==    0    ||    numbers    &&    random.nextDouble()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
295	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  end)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  int  end)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  end)  {	  char[]    buffer,    int    start,    int    count)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
296	[BUG]  [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextInt()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextInt()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||(numbers  &&  random.nextInt()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextInt()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
297	[BUG]  [BUGGY]  int  count  =(numbers  &  Random.MAX_VALUE)!=  0?  chars.length  :  0;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  &  Random.MAX_VALUE)!=  0?  chars.length  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &  Random.MAX_VALUE)!=  0?  chars.length  :  0;	  int    count    =(numbers    &    Random.MAX_VALUE)    >=    0?    random.length    :    0;    	non-compiled	[CE]  	137	None	replace
298	[BUG]  [BUGGY]  int  count  =(numbers  &  Random.MAX_VALUE)  ==  0?  chars.length  :  0;  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  &  Random.MAX_VALUE)  ==  0?  chars.length  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &  Random.MAX_VALUE)  ==  0?  chars.length  :  0;	  int    count    =(numbers    &    Random.MAX_VALUE)    >=    0?    random.length    :    0;    	non-compiled	[CE]  	137	None	replace
299	[BUG]  [BUGGY]  char[]  buffer,  ch,  random,  RANDOM);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  ch,  random,  RANDOM);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  ch,  random,  RANDOM);	  char[]    buffer,    ch,    random);    	non-compiled	[CE]  	23	None	replace
300	[BUG]  [BUGGY]  if(count  ==  0  &&(letters  &&  random.getChars(ch)!=  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  &&(letters  &&  random.getChars(ch)!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  &&(letters  &&  random.getChars(ch)!=  0))  {	  if(count    ==    0    ||(letters    &&    random.getChars(ch)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
301	[BUG]  [BUGGY]  if(chars  ==  null  ||  ch  ==  'n'  ||  ch  ==  'r')  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  null  ||  ch  ==  'n'  ||  ch  ==  'r')  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  ch  ==  'n'  ||  ch  ==  'r')  {	  if(chars    ==    null    ||    ch    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
302	[BUG]  [BUGGY]  char[]  buffer,  0,  random,  ch)  {  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random,  ch)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random,  ch)  {	  char[]    buffer,    0,    random)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
303	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VAL    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
304	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VAL    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
305	[BUG]  [BUGGY]  if(count  ==  0  &&  random.getBooleanValue()  ==  false)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  &&  random.getBooleanValue()  ==  false)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  &&  random.getBooleanValue()  ==  false)  {	  if(count    ==    0    ||    random.getBooleanValue()    ==    false)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
306	[BUG]  [BUGGY]  if((  letters  &&  random.nextDouble()  ==  0)||(numbers  &&  random.nextDouble()!=  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  letters  &&  random.nextDouble()  ==  0)||(numbers  &&  random.nextDouble()!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.nextDouble()  ==  0)||(numbers  &&  random.nextDouble()!=  0))  {	  if((    letters    &&    random.nextDouble()    ==    0)||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
307	[BUG]  [BUGGY]  if((  letters  &&  random.nextDouble()!=  0)||(numbers  &&  random.nextDouble()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  letters  &&  random.nextDouble()!=  0)||(numbers  &&  random.nextDouble()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.nextDouble()!=  0)||(numbers  &&  random.nextDouble()  ==  0))  {	  if((    letters    &&    random.nextDouble()    ==    0)||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
308	[BUG]  [BUGGY]  if(chars.length  ==  0  &&  random.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars.length  ==  0  &&  random.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars.length  ==  0  &&  random.length  ==  0)  {	  if(count    ==    0    &&    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
309	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
310	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
311	[BUG]  [BUGGY]  char[]  buffer,  new  char[count  -  1]);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  new  char[count  -  1]);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  new  char[count  -  1]);	  char[]    buffer,    new    char[count]);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
312	[BUG]  [BUGGY]  char[]  buffer,  new  char[1]);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  new  char[1]);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  new  char[1]);	  char[]    buffer,    new    char[count]);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
313	[BUG]  [BUGGY]  if(count  ==  0  ||(chars  &&  random.nextToken()!=  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(chars  &&  random.nextToken()!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(chars  &&  random.nextToken()!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextToken()!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
314	[BUG]  [BUGGY]  int  count  =(count  ==  null)?  0  :  random.length;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(count  ==  null)?  0  :  random.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(count  ==  null)?  0  :  random.length;	  int    count    =(chars    ==    null)?    0    :    random.length;    	non-compiled	[CE]  	85	None	replace
315	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
316	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  '  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  '  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  '	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
317	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  chars.length);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  chars.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  chars.length);	  char[]    buffer,    Random    random,    int    count);    	non-compiled	[CE]  	104	None	replace
318	[BUG]  [BUGGY]  char[]  buffer,  int  offset,  Random  random)  {  return  new  String(buffer,  0,  random.length  +  1);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  offset,  Random  random)  {  return  new  String(buffer,  0,  random.length  +  1);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  offset,  Random  random)  {  return  new  String(buffer,  0,  random.length  +  1);	  char[]    buffer,    int    offset,    Random    random)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
319	[BUG]  [BUGGY]  char[]  buffer,  chars,  Random  random)  {  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  Random  random)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  Random  random)  {	  char[]    buffer,    chars,    RANDOM)    {    	non-compiled	[CE]  	75	None	replace
320	[BUG]  [BUGGY]  if(chars  ==  random.length  ||  ch  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  random.length  ||  ch  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  random.length  ||  ch  ==  0)  {	  if(ch    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
321	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  int  starts)  {  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  int  starts)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  int  starts)  {	  char[]    buffer,    Random    random,    int    count)    {    	non-compiled	[CE]  	16	None	replace
322	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  chars.length)  {  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  chars.length)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  chars.length)  {	  char[]    buffer,    Random    random,    int    count)    {    	non-compiled	[CE]  	16	None	replace
323	[BUG]  [BUGGY]  int  count  =  random.count(chars,  0,  0);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  random.count(chars,  0,  0);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count(chars,  0,  0);	  int    count    =    random.count(ch);    	non-compiled	[CE]  	87	None	replace
324	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
325	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')||((  random.nextToken()  ==  'z'  &&  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')||((  random.nextToken()  ==  'z'  &&  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')||((  random.nextToken()  ==  'z'  &&  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
326	[BUG]  [BUGGY]  int  count  =(chars  ==  null?  0  :  chars.length);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(chars  ==  null?  0  :  chars.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(chars  ==  null?  0  :  chars.length);	  int    count    =    chars.length;    	non-compiled	[CE]  	5	None	replace
327	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N	  if((    random!=    null)&&((    random.nextToken()    ==    'a'    ||    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
328	[BUG]  [BUGGY]  int  count  =  this.random.count(chars,  random);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  this.random.count(chars,  random);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  this.random.count(chars,  random);	  int    count    =    this.random.count();    	non-compiled	[CE]  	122	None	replace
329	[BUG]  [BUGGY]  if(chars  ==  0  ||  random.getValue()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||  random.getValue()!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||  random.getValue()!=  0)  {	  if(count    ==    0    ||    random.getValue()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
330	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  len)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  int  len)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  len)  {	  char[]    buffer,    int    start,    int    count)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
331	[BUG]  [BUGGY]  if(count  ==  0  ||  chars.length  ==  0  &&  random.numbers)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  chars.length  ==  0  &&  random.numbers)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  chars.length  ==  0  &&  random.numbers)  {	  if(count    ==    0    ||    numbers    &&    random.numbers)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
332	[BUG]  [BUGGY]  if(count  ==  0  ||  chars.length!=  0  &&  random.nextDouble()!=  0)  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  chars.length!=  0  &&  random.nextDouble()!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  chars.length!=  0  &&  random.nextDouble()!=  0)  {	  if(count    ==    0    ||    numbers    &&    random.nextDouble()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
333	[BUG]  [BUGGY]  if(count  ==  0  &&  numbers  &&  random.nextDouble()!=  0)  {  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  &&  numbers  &&  random.nextDouble()!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  &&  numbers  &&  random.nextDouble()!=  0)  {	  if(count    ==    0    ||    numbers    &&    random.nextDouble()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
334	[BUG]  [BUGGY]  if(count  ==  0  ||  ch  ||  random.nextDouble()!=  0)  {  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  ch  ||  random.nextDouble()!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  ch  ||  random.nextDouble()!=  0)  {	  if(count    ==    0    ||    numbers    &&    random.nextDouble()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
335	[BUG]  [BUGGY]  char[]  buffer,  Random  random)  {  return  this;  }  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random)  {  return  this;  }  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random)  {  return  this;  }	  char[]    buffer,    Random    random)    {    return    null;    	non-compiled	[CE]  	47	None	replace
336	[BUG]  [BUGGY]  char[]  buffer,  int  count)  {  return  null;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count)  {  return  null;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count)  {  return  null;	  char[]    buffer,    Random    random)    {    return    null;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
337	[BUG]  [BUGGY]  char[]  buffer,  0,  random,  0);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random,  0);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random,  0);	  char[]    buffer,    chars,    random,    numbers);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
338	[BUG]  [BUGGY]  char[]  buffer,  0,  random,  ch);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random,  ch);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random,  ch);	  char[]    buffer,    chars,    random,    numbers);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
339	[BUG]  [BUGGY]  char[]  buffer,  0,  random,  numbers);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random,  numbers);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random,  numbers);	  char[]    buffer,    chars,    random,    numbers);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
340	[BUG]  [BUGGY]  char[]  buffer,  start,  random,  numbers);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  start,  random,  numbers);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  start,  random,  numbers);	  char[]    buffer,    chars,    random,    numbers);    	non-compiled	[CE]  	98	None	replace
341	[BUG]  [BUGGY]  char[]  buffer,  ch,  chars)  {  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  ch,  chars)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  ch,  chars)  {	  char[]    buffer,    chars,    ch)    {    	non-compiled	[CE]  	26	None	replace
342	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  RANDOM,  ch);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  RANDOM,  ch);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  RANDOM,  ch);	  char[]    buffer,    Random    random,    RANDOM);    	non-compiled	[CE]  	102	None	replace
343	[BUG]  [BUGGY]  if(chars  ==  random  ||  buffer.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  random  ||  buffer.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  random  ||  buffer.length  ==  0)  {	  if(chars    ==    random    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
344	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  boolean  starts)  {  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  boolean  starts)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  boolean  starts)  {	  char[]    buffer,    Random    random,    boolean    numbers)    {    	non-compiled	[CE]  	18	None	replace
345	[BUG]  [BUGGY]  char[]  buffer,  1,  chars.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  1,  chars.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  1,  chars.length);	  char[]    buffer,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
346	[BUG]  [BUGGY]  char[]  buffer,  chars,  random)  {  return  new  String(buffer,  0,  buffer.length);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  random)  {  return  new  String(buffer,  0,  buffer.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  random)  {  return  new  String(buffer,  0,  buffer.length);	  char[]    buffer,    chars)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  	127	None	replace
347	[BUG]  [BUGGY]  if(count  ==  0  &&  random.numbers)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  &&  random.numbers)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  &&  random.numbers)  {	  if(count    ==    0    ||    random.numbers)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
348	[BUG]  [BUGGY]  if(count  ==  0  ||  buffer.numbers)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  buffer.numbers)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  buffer.numbers)  {	  if(count    ==    0    ||    random.numbers)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
349	[BUG]  [BUGGY]  int  count  =(quote  ==  null)?  0  :  chars.length;  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(quote  ==  null)?  0  :  chars.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(quote  ==  null)?  0  :  chars.length;	  int    count    =(chars    ==    null)?    0    :    chars.length;    	non-compiled	[CE]  	8	None	replace
350	[BUG]  [BUGGY]  int  count  =(count  ==  null)?  0  :  chars.length;  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(count  ==  null)?  0  :  chars.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(count  ==  null)?  0  :  chars.length;	  int    count    =(chars    ==    null)?    0    :    chars.length;    	non-compiled	[CE]  	8	None	replace
351	[BUG]  [BUGGY]  if(count  ==  0  ||  buffer.length  ==  0  ||  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  buffer.length  ==  0  ||  chars.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  buffer.length  ==  0  ||  chars.length  ==  0)  {	  if(count    ==    0    ||    random.length    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
352	[BUG]  [BUGGY]  char[]  buffer,  int  count,  chars,  random)  {  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count,  chars,  random)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count,  chars,  random)  {	  char[]    buffer,    int    count,    boolean    numbers)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
353	[BUG]  [BUGGY]  char[]  buffer,  int  count,  boolean  numbers,  boolean  letters)  {  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count,  boolean  numbers,  boolean  letters)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count,  boolean  numbers,  boolean  letters)  {	  char[]    buffer,    int    count,    boolean    numbers)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
354	[BUG]  [BUGGY]  int  count  =(chars  ==  null)?  0  :  chars.length();  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(chars  ==  null)?  0  :  chars.length();  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(chars  ==  null)?  0  :  chars.length();	  int    count    =    chars.length();    	non-compiled	[CE]  	65	None	replace
355	[BUG]  [BUGGY]  Integer  count  =  random.length();  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  Integer  count  =  random.length();  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	Integer  count  =  random.length();	  int    count    =    random.length()    +    1;    	non-compiled	[CE]  	66	None	replace
356	[BUG]  [BUGGY]  int  count  =  random.count(buffer,  0,  chars.length);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  random.count(buffer,  0,  chars.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count(buffer,  0,  chars.length);	  int    count    =    random.count(chars);    	non-compiled	[CE]  	50	None	replace
357	[BUG]  [BUGGY]  int  count  =  random.count(chars,  0);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  random.count(chars,  0);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count(chars,  0);	  int    count    =    random.count(chars);    	non-compiled	[CE]  	50	None	replace
358	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
359	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
360	[BUG]  [BUGGY]  char[]  buffer,  0,  start);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  start);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  start);	  char[]    buffer,    0,    random);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
361	[BUG]  [BUGGY]  char[]  buffer,  int  randomCount)  {  return  new  String(buffer,  0,  random.length  +  1);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  randomCount)  {  return  new  String(buffer,  0,  random.length  +  1);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  randomCount)  {  return  new  String(buffer,  0,  random.length  +  1);	  char[]    buffer,    int    randomCount)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
362	[BUG]  [BUGGY]  char[]  buffer,  int  randomCount)  {  return  new  String(buffer,  0,  random.length  +  1,  random.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  randomCount)  {  return  new  String(buffer,  0,  random.length  +  1,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  randomCount)  {  return  new  String(buffer,  0,  random.length  +  1,  random.length);	  char[]    buffer,    int    randomCount)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
363	[BUG]  [BUGGY]  int  count  =(count  ==  null)?  random.length  :  chars.length;  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(count  ==  null)?  random.length  :  chars.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(count  ==  null)?  random.length  :  chars.length;	  int    count    =(chars    ==    null)?    random.length    :    chars.length;    	non-compiled	[CE]  	84	None	replace
364	[BUG]  [BUGGY]  int  count  =(random  ==  null)?  random.length  :  chars.length;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(random  ==  null)?  random.length  :  chars.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(random  ==  null)?  random.length  :  chars.length;	  int    count    =(chars    ==    null)?    random.length    :    chars.length;    	non-compiled	[CE]  	84	None	replace
365	[BUG]  [BUGGY]  if(count  ==  0  ||(chars  &&  random.nextCharacter()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(chars  &&  random.nextCharacter()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(chars  &&  random.nextCharacter()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextCharacter()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
366	[BUG]  [BUGGY]  int  count  =(numbers  &  Random.MIN_VALUE)!=  0?  chars.length  :  0;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  &  Random.MIN_VALUE)!=  0?  chars.length  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &  Random.MIN_VALUE)!=  0?  chars.length  :  0;	  int    count    =(numbers    &    Random.MIN_VALUE)!=    0?    random.length    :    0;    	non-compiled	[CE]  	136	None	replace
367	[BUG]  [BUGGY]  int  count  =(numbers  &  Random.MIN_VALUE)  ==  0?  chars.length  :  0;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  &  Random.MIN_VALUE)  ==  0?  chars.length  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &  Random.MIN_VALUE)  ==  0?  chars.length  :  0;	  int    count    =(numbers    &    Random.MIN_VALUE)!=    0?    random.length    :    0;    	non-compiled	[CE]  	136	None	replace
368	[BUG]  [BUGGY]  int  count  =(numbers  &  Random.MIN_VALUE)  ==  0?  random.length  -  1  :  0;  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  &  Random.MIN_VALUE)  ==  0?  random.length  -  1  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &  Random.MIN_VALUE)  ==  0?  random.length  -  1  :  0;	  int    count    =(numbers    &    Random.MIN_VALUE)!=    0?    random.length    :    0;    	non-compiled	[CE]  	136	None	replace
369	[BUG]  [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.getChars(ch)  ==  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.getChars(ch)  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||(numbers  &&  random.getChars(ch)  ==  0))  {	  if(chars    ==    0    ||(numbers    &&    random.getChars(ch)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
370	[BUG]  [BUGGY]  char[]  buffer,  0,  random,  letters);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random,  letters);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random,  letters);	  char[]    buffer,    chars,    random,    letters);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
371	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&(  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&(  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&(	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&(    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
372	[BUG]  [BUGGY]  if(count  ==  0  ||  random.getChars().length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.getChars().length()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.getChars().length()  ==  0)  {	  if(count    ==    0    ||    random.getString().length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
373	[BUG]  [BUGGY]  if(count  ==  0  &&  random.getString().length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  &&  random.getString().length()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  &&  random.getString().length()  ==  0)  {	  if(count    ==    0    ||    random.getString().length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
374	[BUG]  [BUGGY]  int  count  =  RandomUtils.length  -  1;  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  RandomUtils.length  -  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  RandomUtils.length  -  1;	  int    count    =    random.length()    -    1;    	non-compiled	[CE]  	67	None	replace
375	[BUG]  [BUGGY]  char[]  buffer,  int  randomLength)  {  return  new  String(buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  randomLength)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  randomLength)  {  return  new  String(buffer,  0,  random.length);	  char[]    buffer,    Random    random)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
376	[BUG]  [BUGGY]  char[]  buffer,  Random  random)  {  return  new  String(buffer,  0,  random.length  +  1);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random)  {  return  new  String(buffer,  0,  random.length  +  1);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random)  {  return  new  String(buffer,  0,  random.length  +  1);	  char[]    buffer,    Random    random)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  	81	None	replace
377	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')||((  random.nextToken()  ==  'z'  &&  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')||((  random.nextToken()  ==  'z'  &&  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')||((  random.nextToken()  ==  'z'  &&  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VAL    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
378	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VAL    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
379	[BUG]  [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextCharacters()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextCharacters()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||(numbers  &&  random.nextCharacters()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextCharacters()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
380	[BUG]  [BUGGY]  if(count  ==  0  ||(chars  &&  random.nextCharacters()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(chars  &&  random.nextCharacters()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(chars  &&  random.nextCharacters()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextCharacters()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
381	[BUG]  [BUGGY]  if(count  ==  0  ||(chars  &&  random.nextDouble()!=  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(chars  &&  random.nextDouble()!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(chars  &&  random.nextDouble()!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextDouble()!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
382	[BUG]  [BUGGY]  char[]  buffer,  0,  start,  random);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  start,  random);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  start,  random);	  char[]    buffer,    chars,    0,    random);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
383	[BUG]  [BUGGY]  if(chars  ==  0  &&  random.getValue()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  &&  random.getValue()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  &&  random.getValue()  ==  0)  {	  if(count    ==    0    &&    random.getValue()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
384	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
385	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
386	[BUG]  [BUGGY]  char[]  buffer,  start,  ch);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  start,  ch);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  start,  ch);	  char[]    buffer,    start,    random);    	non-compiled	[CE]  	97	None	replace
387	[BUG]  [BUGGY]  int  count  =(numbers  &&  random.length  >  0)?  buffer.length  :  0;  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  &&  random.length  >  0)?  buffer.length  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &&  random.length  >  0)?  buffer.length  :  0;	  int    count    =(numbers    &&    random.length    >    0)?    random.length    :    0;    	non-compiled	[CE]  	135	None	replace
388	[BUG]  [BUGGY]  if(count  ==  0  ||  ch  ==  '.')  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  ch  ==  '.')  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  ch  ==  '.')  {	  if(count    ==    0    ||    ch    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
389	[BUG]  [BUGGY]  if(chars  ==  0  ||  ch  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||  ch  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||  ch  ==  0)  {	  if(count    ==    0    ||    ch    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
390	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
391	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
392	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  0,  chars.length);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  0,  chars.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  0,  chars.length);	  char[]    buffer,    Random    random,    numbers);    	non-compiled	[CE]  	103	None	replace
393	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  0,  charCount);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  0,  charCount);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  0,  charCount);	  char[]    buffer,    Random    random,    numbers);    	non-compiled	[CE]  	103	None	replace
394	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
395	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')||((  random.nextToken()  ==  'z')&&  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')||((  random.nextToken()  ==  'z')&&  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')||((  random.nextToken()  ==  'z')&&	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
396	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length  >=  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  null  ||  chars.length  >=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  chars.length  >=  0)  {	  if(chars    ==    null    ||    chars.length!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
397	[BUG]  [BUGGY]  if((  letters  &&  random.nextToken()!=  0)||(numbers  &&  random.nextToken()  ==  0))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  letters  &&  random.nextToken()!=  0)||(numbers  &&  random.nextToken()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.nextToken()!=  0)||(numbers  &&  random.nextToken()  ==  0))  {	  if((    letters    &&    random.nextToken()    ==    0)||(numbers    &&    random.nextToken()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
398	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  chars)  {  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  chars)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  chars)  {	  char[]    buffer,    Random    random,    charCount)    {    	non-compiled	[CE]  	120	None	replace
399	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')||((  random.nextToken()  ==  'z  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')||((  random.nextToken()  ==  'z  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')||((  random.nextToken()  ==  'z	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
400	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')||((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')||((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')||((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
401	[BUG]  [BUGGY]  if(count  ==  0  ||  ch  ||  random.nextDouble()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  ch  ||  random.nextDouble()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  ch  ||  random.nextDouble()  ==  0)  {	  if(count    ==    0    ||    numbers    &&    random.nextDouble()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
402	[BUG]  [BUGGY]  if(count  ==  0  &&  numbers  &&  random.nextDouble()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  &&  numbers  &&  random.nextDouble()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  &&  numbers  &&  random.nextDouble()  ==  0)  {	  if(count    ==    0    ||    numbers    &&    random.nextDouble()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
403	[BUG]  [BUGGY]  int  count  =  random.count(1);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  random.count(1);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count(1);	  int    count    =    random.count()    -    1;    	non-compiled	[CE]  	86	None	replace
404	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  boolean  letters,  boolean  start)  {  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  boolean  letters,  boolean  start)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  boolean  letters,  boolean  start)  {	  char[]    buffer,    Random    random,    boolean    letters)    {    	non-compiled	[CE]  	19	None	replace
405	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  boolean  letters,  boolean  starts)  {  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  boolean  letters,  boolean  starts)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  boolean  letters,  boolean  starts)  {	  char[]    buffer,    Random    random,    boolean    letters)    {    	non-compiled	[CE]  	19	None	replace
406	[BUG]  [BUGGY]  char[]  buffer,  Random  random)  {  return  new  char[0]  +  4;  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random)  {  return  new  char[0]  +  4;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random)  {  return  new  char[0]  +  4;	  char[]    buffer,    Random    random)    {    return    new    char[0]    +    1;    	non-compiled	[CE]  	107	None	replace
407	[BUG]  [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextInt()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextInt()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||(numbers  &&  random.nextInt()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextInt()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
408	[BUG]  [BUGGY]  char[]  buffer,  int  start,  boolean  letters)  {  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  boolean  letters)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  boolean  letters)  {	  char[]    buffer,    int    count,    boolean    letters)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
409	[BUG]  [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length  +  1);  }  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length  +  1);  }  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length  +  1);  }	  char[]    buffer,    int    count)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
410	[BUG]  [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextBoolean()))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextBoolean()))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||(numbers  &&  random.nextBoolean()))  {	  if(chars    ==    0    ||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
411	[BUG]  [BUGGY]  if(ch  ==  '0'  &&  random.getValue()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  '0'  &&  random.getValue()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  '0'  &&  random.getValue()  ==  0)  {	  if(ch    ==    0    ||    random.getValue()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
412	[BUG]  [BUGGY]  char[]  buffer,  int  start)  {  return  new  String(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start)  {  return  new  String(buffer,  0,  buffer.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start)  {  return  new  String(buffer,  0,  buffer.length);	  char[]    buffer,    int    count)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
413	[BUG]  [BUGGY]  char[]  buffer,  int  start)  {  return  new  String(buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start)  {  return  new  String(buffer,  0,  random.length);	  char[]    buffer,    int    count)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
414	[BUG]  [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length);  }  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length);  }  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length);  }	  char[]    buffer,    int    count)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
415	[BUG]  [BUGGY]  if(chars  ==  0  ||  random.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||  random.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||  random.length  ==  0)  {	  if(ch    ==    0    ||    random.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
416	[BUG]  [BUGGY]  if(ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  'n'  ||  ch  ==  't')  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  'n'  ||  ch  ==  't')  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  'n'  ||  ch  ==  't')  {	  if(ch    ==    0    ||    random.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
417	[BUG]  [BUGGY]  if(chars  ==  random  ||  chars!=  null  ||  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  random  ||  chars!=  null  ||  chars.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  random  ||  chars!=  null  ||  chars.length  ==  0)  {	  if(chars!=    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
418	[BUG]  [BUGGY]  int  count  =(this.random!=  null)?  0  :  this.random.length();  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(this.random!=  null)?  0  :  this.random.length();  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(this.random!=  null)?  0  :  this.random.length();	  int    count    =    this.random.length();    	non-compiled	[CE]  	138	None	replace
419	[BUG]  [BUGGY]  int  count  =(this.random!=  null)?  this.random.length()  :  0;  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(this.random!=  null)?  this.random.length()  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(this.random!=  null)?  this.random.length()  :  0;	  int    count    =    this.random.length();    	non-compiled	[CE]  	138	None	replace
420	[BUG]  [BUGGY]  char[]  buffer,  0,  random.arrayOffset());  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random.arrayOffset());  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random.arrayOffset());	  char[]    buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
421	[BUG]  [BUGGY]  char[]  buffer,  int  len)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  len)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  len)  {	  char[]    buffer,    int    ch)    {    	non-compiled	[CE]  <identifier>  expected	117	None	replace
422	[BUG]  [BUGGY]  if(chars  ==  0  ||  random.getKey()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||  random.getKey()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||  random.getKey()  ==  0)  {	  if(count    ==    0    ||    random.getKey()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
423	[BUG]  [BUGGY]  if(count  ==  0  ||  random.getChars()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.getChars()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.getChars()  ==  0)  {	  if(count    ==    0    ||    random.getKey()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
424	[BUG]  [BUGGY]  char[]  buffer,  ch,  chars);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  ch,  chars);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  ch,  chars);	  char[]    buffer,    chars,    ch);    	non-compiled	[CE]  	25	None	replace
425	[BUG]  [BUGGY]  char[]  buffer,  0,  random,  0)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random,  0)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random,  0)  {	  char[]    buffer,    chars,    random,    RANDOM)    {    	non-compiled	[CE]  <identifier>  expected	133	None	replace
426	[BUG]  [BUGGY]  if(count  ==  0  ||(chars  &&  random.nextBoolean()))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(chars  &&  random.nextBoolean()))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(chars  &&  random.nextBoolean()))  {	  if(count    ==    0    ||(numbers    &&    random.nextBoolean()))    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
427	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextBoolean())||(numbers  &&  random.booleanValue()))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextBoolean())||(numbers  &&  random.booleanValue()))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextBoolean())||(numbers  &&  random.booleanValue()))  {	  if(count    ==    0    ||(numbers    &&    random.nextBoolean()))    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
428	[BUG]  [BUGGY]  char[]  buffer,  int  start)  {  return  new  char[0];  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start)  {  return  new  char[0];  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start)  {  return  new  char[0];	  char[]    buffer,    int    count)    {    return    new    char[0];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
429	[BUG]  [BUGGY]  char[]  buffer,  int  count)  {  return  new  char[count  +  1];  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count)  {  return  new  char[count  +  1];  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count)  {  return  new  char[count  +  1];	  char[]    buffer,    int    count)    {    return    new    char[0];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
430	[BUG]  [BUGGY]  if((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.	  if((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&((    random.nextToken    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
431	[BUG]  [BUGGY]  if((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken	  if((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&((    random.nextToken    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
432	[BUG]  [BUGGY]  if(count  ==  0  &&  random.numbers!=  0)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  &&  random.numbers!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  &&  random.numbers!=  0)  {	  if(count    ==    0    ||    random.numbers!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
433	[BUG]  [BUGGY]  if(count  ==  0  ||  buffer[numbers].length!=  0)  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  buffer[numbers].length!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  buffer[numbers].length!=  0)  {	  if(count    ==    0    ||    random.numbers!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
434	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
435	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')||((  random.nextToken()  ==  'z'  &&  random.nextToken()  ==  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')||((  random.nextToken()  ==  'z'  &&  random.nextToken()  ==  JsonToken.VALUE_N  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')||((  random.nextToken()  ==  'z'  &&  random.nextToken()  ==  JsonToken.VALUE_N	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
436	[BUG]  [BUGGY]  int  count  =  this.chars.count();  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  this.chars.count();  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  this.chars.count();	  int    count    =    chars.count();    	non-compiled	[CE]  	49	None	replace
437	[BUG]  [BUGGY]  char[]  buffer,  chars,  start,  chars)  {  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  start,  chars)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  start,  chars)  {	  char[]    buffer,    chars,    random,    numbers)    {    	non-compiled	[CE]  	29	None	replace
438	[BUG]  [BUGGY]  char[]  buffer,  chars,  random,  ch)  {  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  random,  ch)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  random,  ch)  {	  char[]    buffer,    chars,    random,    numbers)    {    	non-compiled	[CE]  	29	None	replace
439	[BUG]  [BUGGY]  if(chars.length  ==  0  ||(count  ==  0  &&  random.nextDouble()  ==  0))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars.length  ==  0  ||(count  ==  0  &&  random.nextDouble()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars.length  ==  0  ||(count  ==  0  &&  random.nextDouble()  ==  0))  {	  if(count    ==    0    &&    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
440	[BUG]  [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length  +  1,  random.length);  }  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length  +  1,  random.length);  }  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length  +  1,  random.length);  }	  char[]    buffer,    int    count)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
441	[BUG]  [BUGGY]  CharSequence  buffer[]  =  random.getChars(0,  0,  buffer.length);  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  CharSequence  buffer[]  =  random.getChars(0,  0,  buffer.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	CharSequence  buffer[]  =  random.getChars(0,  0,  buffer.length);	  char[]    buffer,    0,    buffer.length);    	non-compiled	[CE]  	3	None	replace
442	[BUG]  [BUGGY]  CharSequence  buffer[]  =  random.getBooleanValue()?  true  :  false;  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  CharSequence  buffer[]  =  random.getBooleanValue()?  true  :  false;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	CharSequence  buffer[]  =  random.getBooleanValue()?  true  :  false;	  char[]    buffer,    0,    buffer.length);    	non-compiled	[CE]  	3	None	replace
443	[BUG]  [BUGGY]  char[]  buffer,  0,  chars.length,  random.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  chars.length,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  chars.length,  random.length);	  char[]    buffer,    0,    chars.length);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
444	[BUG]  [BUGGY]  char[]  buffer,  random,  0,  letters);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  random,  0,  letters);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  random,  0,  letters);	  char[]    buffer,    Random    random,    letters);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
445	[BUG]  [BUGGY]  if((  letters  &&  random.getChars(ch)!=  0)||(numbers  &&  random.getChars(ch)!=  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  letters  &&  random.getChars(ch)!=  0)||(numbers  &&  random.getChars(ch)!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.getChars(ch)!=  0)||(numbers  &&  random.getChars(ch)!=  0))  {	  if(chars    ==    0    ||(numbers    &&    random.getChars(ch)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
446	[BUG]  [BUGGY]  char[]  buffer,  chars,  random,  boolean  letters)  {  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  random,  boolean  letters)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  random,  boolean  letters)  {	  char[]    buffer,    chars,    random,    numbers)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
447	[BUG]  [BUGGY]  if((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
448	[BUG]  [BUGGY]  if(count  ==  0  ||  chars.length  ==  0  ||  random.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  chars.length  ==  0  ||  random.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  chars.length  ==  0  ||  random.length  ==  0)  {	  if(count    ==    0    ||    random.length    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
449	[BUG]  [BUGGY]  if(count  ==  0  ||  chars.length  ==  0  ||  random.length!=  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  chars.length  ==  0  ||  random.length!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  chars.length  ==  0  ||  random.length!=  0)  {	  if(count    ==    0    ||    random.length    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
450	[BUG]  [BUGGY]  if(count  ==  0  ||  ch  ==  0  ||  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  ch  ==  0  ||  chars.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  ch  ==  0  ||  chars.length  ==  0)  {	  if(count    ==    0    ||    random.length    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
451	[BUG]  [BUGGY]  char[]  buffer,  Random  random)  {  return  new  String(buffer,  0,  random.length  +  1,  random.length);  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random)  {  return  new  String(buffer,  0,  random.length  +  1,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random)  {  return  new  String(buffer,  0,  random.length  +  1,  random.length);	  char[]    buffer,    Random    random)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  	81	None	replace
452	[BUG]  [BUGGY]  char[]  buffer,  Random  random)  {  return  new  String(buffer,  0,  random.length,  ch);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random)  {  return  new  String(buffer,  0,  random.length,  ch);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random)  {  return  new  String(buffer,  0,  random.length,  ch);	  char[]    buffer,    Random    random)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  	81	None	replace
453	[BUG]  [BUGGY]  if(count  ==  0  ||(letters  &&  random.getChars(ch)  ==  0))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(letters  &&  random.getChars(ch)  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(letters  &&  random.getChars(ch)  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.getChars(ch)    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
454	[BUG]  [BUGGY]  if((  letters  &&  random.getChars(ch)  ==  0)||(numbers  &&  random.getChars(ch)  ==  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  letters  &&  random.getChars(ch)  ==  0)||(numbers  &&  random.getChars(ch)  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.getChars(ch)  ==  0)||(numbers  &&  random.getChars(ch)  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.getChars(ch)    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
455	[BUG]  [BUGGY]  if((  letters  &&  random.nextChar()  ==  0)||(numbers  &&  random.nextChar()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  letters  &&  random.nextChar()  ==  0)||(numbers  &&  random.nextChar()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.nextChar()  ==  0)||(numbers  &&  random.nextChar()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextChar()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
456	[BUG]  [BUGGY]  if((  letters  &&  random.nextChar()  ==  0)||(numbers  &&  random.nextChar()!=  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  letters  &&  random.nextChar()  ==  0)||(numbers  &&  random.nextChar()!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.nextChar()  ==  0)||(numbers  &&  random.nextChar()!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextChar()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
457	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  randomLength)  {  return  new  String(buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  start,  int  randomLength)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  randomLength)  {  return  new  String(buffer,  0,  random.length);	  char[]    buffer,    int    start,    Random    random)    {    return    new    String(buffer,    0,    random.length);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
458	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
459	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')||  random.nextToken()  ==  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')||  random.nextToken()  ==  JsonToken.VALUE_N  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')||  random.nextToken()  ==  JsonToken.VALUE_N	  if((    random!=    null)&&((    random.nextToken()    ==    'a'    ||    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
460	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N	  if((    random!=    null)&&((    random.nextToken()    ==    'a'    ||    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
461	[BUG]  [BUGGY]  if(numbers  &&(letters  &&  random.getChars(ch)!=  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(numbers  &&(letters  &&  random.getChars(ch)!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(numbers  &&(letters  &&  random.getChars(ch)!=  0))  {	  if(count    ==    0    ||(letters    &&    random.getChars(ch)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
462	[BUG]  [BUGGY]  if(chars  ==  null  ||  ch  ==  '.')  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  null  ||  ch  ==  '.')  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  ch  ==  '.')  {	  if(chars    ==    null    ||    ch    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
463	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  null)  {  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  null)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  null)  {	  char[]    buffer,    Random    random,    charCount)    {    	non-compiled	[CE]  	120	None	replace
464	[BUG]  [BUGGY]  char[]  buffer,  random,  0,  random.length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  random,  0,  random.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  random,  0,  random.length);	  char[]    buffer,    Random    random,    ch);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
465	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  random,  RANDOM);  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  random,  RANDOM);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  random,  RANDOM);	  char[]    buffer,    Random    random,    ch);    	non-compiled	[CE]  	41	None	replace
466	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length  ==  0  ||  random.getString().length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  null  ||  chars.length  ==  0  ||  random.getString().length()  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  chars.length  ==  0  ||  random.getString().length()  ==  0)  {	  if(count    ==    0    ||    random.getString().length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
467	[BUG]  [BUGGY]  if(count  ==  0  ||  random.getBytes().length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.getBytes().length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.getBytes().length  ==  0)  {	  if(count    ==    0    ||    random.getString().length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
468	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VAL    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
469	[BUG]  [BUGGY]  int  count  =  this.chars.length;  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  this.chars.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  this.chars.length;	  int    count    =    chars.length();    	non-compiled	[CE]  	65	None	replace
470	[BUG]  [BUGGY]  int  count  =(numbers  &  Random.MIN_VALUE)  >=  0?  random.length  :  0;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  &  Random.MIN_VALUE)  >=  0?  random.length  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &  Random.MIN_VALUE)  >=  0?  random.length  :  0;	  int    count    =(numbers    &    Random.MAX_VALUE)    >=    0?    random.length    :    0;    	non-compiled	[CE]  	137	None	replace
471	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length  <  2)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  null  ||  chars.length  <  2)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  chars.length  <  2)  {	  if(chars    ==    null    ||    chars.length    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
472	[BUG]  [BUGGY]  if((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
473	[BUG]  [BUGGY]  char[]  buffer,  random,  0,  count);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  random,  0,  count);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  random,  0,  count);	  char[]    buffer,    Random    random,    int    count);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
474	[BUG]  [BUGGY]  if((  random  ==  null)||(count  ==  0  &&  random.getValue()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)||(count  ==  0  &&  random.getValue()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)||(count  ==  0  &&  random.getValue()  ==  0))  {	  if(count    ==    0    &&    random.getValue()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
475	[BUG]  [BUGGY]  if(chars  ==  0  ||  chars.length  ==  0  ||  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  0  ||  chars.length  ==  0  ||  chars.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||  chars.length  ==  0  ||  chars.length  ==  0)  {	  if(count    ==    0    &&    random.getValue()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
476	[BUG]  [BUGGY]  if(count  ==  0  ||(letters  &&  random.nextCharacters()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(letters  &&  random.nextCharacters()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(letters  &&  random.nextCharacters()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextCharacters()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
477	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  boolean  letters,  boolean  numbers)  {  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  boolean  letters,  boolean  numbers)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  boolean  letters,  boolean  numbers)  {	  char[]    buffer,    Random    random,    boolean    letters)    {    	non-compiled	[CE]  	19	None	replace
478	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ',')  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ',')  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  '.'  ||  ch  ==  ',')  {	  if(ch    ==    0    ||    random.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
479	[BUG]  [BUGGY]  if(ch  ==  '0'  ||  ch  ==  '9')  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  '0'  ||  ch  ==  '9')  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  '0'  ||  ch  ==  '9')  {	  if(ch    ==    0    ||    random.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
480	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
481	[BUG]  [BUGGY]  if((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a'  &&  random.nextToken()  ==  'z')||((  random.nextToken()  ==  'z')&&  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a'  &&  random.nextToken()  ==  'z')||((  random.nextToken()  ==  'z')&&  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a'  &&  random.nextToken()  ==  'z')||((  random.nextToken()  ==  'z')&&	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
482	[BUG]  [BUGGY]  int  count  =  this.random.length()  *  2;  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  this.random.length()  *  2;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  this.random.length()  *  2;	  int    count    =    this.random.length();    	non-compiled	[CE]  	138	None	replace
483	[BUG]  [BUGGY]  char[]  buffer,  start,  int  count);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  start,  int  count);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  start,  int  count);	  char[]    buffer,    start,    random);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
484	[BUG]  [BUGGY]  int  count  =(count  &  Random.MIN_VALUE)!=  0?  random.length  :  0;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(count  &  Random.MIN_VALUE)!=  0?  random.length  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(count  &  Random.MIN_VALUE)!=  0?  random.length  :  0;	  int    count    =(numbers    &    Random.MIN_VALUE)!=    0?    random.length    :    0;    	non-compiled	[CE]  	136	None	replace
485	[BUG]  [BUGGY]  char[]  buffer,  int  count)  {  return  new  char[count];  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  int  count)  {  return  new  char[count];  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count)  {  return  new  char[count];	  char[]    buffer,    int    count)    {    return    new    char[0];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
486	[BUG]  [BUGGY]  char[]  buffer,  Random  random)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random)  {  throw  new  IllegalArgumentException( " ");  }	  char[]    buffer,    Random    random)    {    return    null;    	non-compiled	[CE]  	47	None	replace
487	[BUG]  [BUGGY]  if(count  ==  0  ||  chars.length  ==  random.numbers)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  chars.length  ==  random.numbers)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  chars.length  ==  random.numbers)  {	  if(count    ==    0    ||    numbers    &&    random.numbers)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
488	[BUG]  [BUGGY]  int  count  =(random!=  null)?  0  :  random.length;  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(random!=  null)?  0  :  random.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(random!=  null)?  0  :  random.length;	  int    count    =(chars    ==    null)?    0    :    random.length;    	non-compiled	[CE]  	85	None	replace
489	[BUG]  [BUGGY]  int  count  =(pattern  ==  null)?  0  :  random.length;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(pattern  ==  null)?  0  :  random.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(pattern  ==  null)?  0  :  random.length;	  int    count    =(chars    ==    null)?    0    :    random.length;    	non-compiled	[CE]  	85	None	replace
490	[BUG]  [BUGGY]  int  count  =(ch  ==  null)?  0  :  ch.length;  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(ch  ==  null)?  0  :  ch.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(ch  ==  null)?  0  :  ch.length;	  int    count    =(chars    ==    null)?    0    :    random.length;    	non-compiled	[CE]  	85	None	replace
491	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getBooleanValue())  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getBooleanValue())  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.getBooleanValue())  ==  0)  {	  if(count    ==    0    ||(numbers    &&    random.nextInt()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
492	[BUG]  [BUGGY]  if((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  '0')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  '0')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  '0')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken	  if((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&((    random.nextToken    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
493	[BUG]  [BUGGY]  if((  random.nextToken()  ==  '0')&&((  random.nextToken()  ==  '0')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random.nextToken()  ==  '0')&&((  random.nextToken()  ==  '0')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random.nextToken()  ==  '0')&&((  random.nextToken()  ==  '0')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken	  if((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&((    random.nextToken    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
494	[BUG]  [BUGGY]  int  count  =  random.count(Character.toLowerCase(ch));  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  random.count(Character.toLowerCase(ch));  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count(Character.toLowerCase(ch));	  int    count    =    random.count(ch);    	non-compiled	[CE]  	87	None	replace
495	[BUG]  [BUGGY]  int  count  =  random.count(chars,  0,  ch.length);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  random.count(chars,  0,  ch.length);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count(chars,  0,  ch.length);	  int    count    =    random.count(ch);    	non-compiled	[CE]  	87	None	replace
496	[BUG]  [BUGGY]  if(count  ==  0  ||(buffered  ||  random.nextToken()  ==  0))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(buffered  ||  random.nextToken()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(buffered  ||  random.nextToken()  ==  0))  {	  if(count    ==    0    ||(chars    &&    random.nextToken()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
497	[BUG]  [BUGGY]  if((  letters  &&  random.nextCharacter()  ==  0)||(numbers  &&  random.nextCharacter()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  letters  &&  random.nextCharacter()  ==  0)||(numbers  &&  random.nextCharacter()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.nextCharacter()  ==  0)||(numbers  &&  random.nextCharacter()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextCharacter()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
498	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextCharacter()!=  chars.length))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextCharacter()!=  chars.length))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextCharacter()!=  chars.length))  {	  if(count    ==    0    ||(numbers    &&    random.nextCharacter()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
499	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextCharacter()  ==  '0'))  {  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextCharacter()  ==  '0'))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextCharacter()  ==  '0'))  {	  if(count    ==    0    ||(numbers    &&    random.nextCharacter()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
500	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
501	[BUG]  [BUGGY]  if((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
502	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  3);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  3);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  3);	  char[]    buffer,    Random    random,    RANDOM);    	non-compiled	[CE]  	102	None	replace
503	[BUG]  [BUGGY]  if(count  ==  0  ||  numbers  &&  random.nextBoolean())  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  numbers  &&  random.nextBoolean())  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  numbers  &&  random.nextBoolean())  {	  if(count    ==    0    ||    numbers    &&    random.nextDouble()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
504	[BUG]  [BUGGY]  if(count  ==  0  ||  chars.length  ==  random.length)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  chars.length  ==  random.length)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  chars.length  ==  random.length)  {	  if(count    ==    0    ||    random.numbers)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
505	[BUG]  [BUGGY]  if(count  ==  0  ||  ch)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  ch)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  ch)  {	  if(count    ==    0    ||    random.numbers)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
506	[BUG]  [BUGGY]  if(ch  ==  0  ||  random.numbers)  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||  random.numbers)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||  random.numbers)  {	  if(count    ==    0    ||    random.numbers)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
507	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextToken()  ==  null))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextToken()  ==  null))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextToken()  ==  null))  {	  if(count    ==    0    ||(numbers    &&    random.nextToken()!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
508	[BUG]  [BUGGY]  if(count  ==  0  ||(letters  &&  random.nextToken()!=  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(letters  &&  random.nextToken()!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(letters  &&  random.nextToken()!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextToken()!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
509	[BUG]  [BUGGY]  char[]  buffer,  new  char[6]);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  new  char[6]);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  new  char[6]);	  char[]    buffer,    new    char[64]);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
510	[BUG]  [BUGGY]  char[]  buffer,  0,  this.random)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  this.random)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  this.random)  {	  char[]    buffer,    chars,    0,    random)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
511	[BUG]  [BUGGY]  int  count  =(ch  ==  null)?  0  :  chars.length;  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(ch  ==  null)?  0  :  chars.length;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(ch  ==  null)?  0  :  chars.length;	  int    count    =(chars    ==    null)?    0    :    chars.length;    	non-compiled	[CE]  	8	None	replace
512	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')||  random.nextToken()  ==  JsonToken.VALUE_  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')||  random.nextToken()  ==  JsonToken.VALUE_  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')||  random.nextToken()  ==  JsonToken.VALUE_	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
513	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch,  chars,  null)!=  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch,  chars,  null)!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.getChars(ch,  chars,  null)!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.getChars(ch,    chars.length)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
514	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch,  chars,  1)!=  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch,  chars,  1)!=  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.getChars(ch,  chars,  1)!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.getChars(ch,    chars.length)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
515	[BUG]  [BUGGY]  if(count  ==  0  ||  ch  ==  'n'  ||  ch  ==  'r')  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  ch  ==  'n'  ||  ch  ==  'r')  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  ch  ==  'n'  ||  ch  ==  'r')  {	  if(count    ==    0    ||    ch    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
516	[BUG]  [BUGGY]  if((  numbers  &&  random.nextDouble()  ==  0)||(numbers  &&  random.nextDouble()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  numbers  &&  random.nextDouble()  ==  0)||(numbers  &&  random.nextDouble()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  numbers  &&  random.nextDouble()  ==  0)||(numbers  &&  random.nextDouble()  ==  0))  {	  if(chars    ==    0    ||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
517	[BUG]  [BUGGY]  if((  letters  &&  random.nextDouble()  ==  0)||(numbers  &&  random.nextBoolean()))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  letters  &&  random.nextDouble()  ==  0)||(numbers  &&  random.nextBoolean()))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.nextDouble()  ==  0)||(numbers  &&  random.nextBoolean()))  {	  if(chars    ==    0    ||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
518	[BUG]  [BUGGY]  if(count  ==  0  ||  random.getKey()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.getKey()!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.getKey()!=  0)  {	  if(count    ==    0    ||    random.getValue()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
519	[BUG]  [BUGGY]  if(count  ==  0  ||  random.getRawClass()!=  0)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.getRawClass()!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.getRawClass()!=  0)  {	  if(count    ==    0    ||    random.getValue()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
520	[BUG]  [BUGGY]  char[]  buffer,  start,  random,  letters);  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  start,  random,  letters);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  start,  random,  letters);	  char[]    buffer,    chars,    random,    letters);    	non-compiled	[CE]  	123	None	replace
521	[BUG]  [BUGGY]  char[]  buffer,  start,  chars,  random,  letters);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  start,  chars,  random,  letters);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  start,  chars,  random,  letters);	  char[]    buffer,    chars,    random,    letters);    	non-compiled	[CE]  	123	None	replace
522	[BUG]  [BUGGY]  if(chars  ==  random  ||  ch.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars  ==  random  ||  ch.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  random  ||  ch.length  ==  0)  {	  if(chars    ==    null    ||    ch.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
523	[BUG]  [BUGGY]  if(count  ==  0  ||  chars.length!=  0)  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  chars.length!=  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  chars.length!=  0)  {	  if(count    ==    0    ||    random.numbers!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
524	[BUG]  [BUGGY]  char[]  buffer,  chars,  random)  {  return  new  String(buffer,  0,  buffer.length);  }  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  chars,  random)  {  return  new  String(buffer,  0,  buffer.length);  }  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  random)  {  return  new  String(buffer,  0,  buffer.length);  }	  char[]    buffer,    chars)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  	127	None	replace
525	[BUG]  [BUGGY]  char[]  buffer,  random,  RANDOM)  {  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  random,  RANDOM)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  random,  RANDOM)  {	  char[]    buffer,    chars,    RANDOM)    {    	non-compiled	[CE]  	75	None	replace
526	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&(  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&(  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&(	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&(    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
527	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextBoolean())||(numbers  &&  random.nextBoolean()))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextBoolean())||(numbers  &&  random.nextBoolean()))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextBoolean())||(numbers  &&  random.nextBoolean()))  {	  if(count    ==    0    ||(numbers    &&    random.nextBoolean()))    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
528	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextBoolean())||(buffered  &&  random.nextBoolean()))  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextBoolean())||(buffered  &&  random.nextBoolean()))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextBoolean())||(buffered  &&  random.nextBoolean()))  {	  if(count    ==    0    ||(numbers    &&    random.nextBoolean()))    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
529	[BUG]  [BUGGY]  char[]  buffer,  0,  random,  RANDOM)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  0,  random,  RANDOM)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random,  RANDOM)  {	  char[]    buffer,    chars,    random,    RANDOM)    {    	non-compiled	[CE]  <identifier>  expected	133	None	replace
530	[BUG]  [BUGGY]  char[]  buffer,  start,  random,  RANDOM)  {  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  start,  random,  RANDOM)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  start,  random,  RANDOM)  {	  char[]    buffer,    chars,    random,    RANDOM)    {    	non-compiled	[CE]  	133	None	replace
531	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  int  start,  boolean  letters)  {  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random  random,  int  start,  boolean  letters)  {  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  int  start,  boolean  letters)  {	  char[]    buffer,    Random    random,    int    start)    {    	non-compiled	[CE]  	17	None	replace
532	[BUG]  [BUGGY]  if((  numbers  &&  random.nextToken()  ==  0)||(numbers  &&  random.nextToken()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  numbers  &&  random.nextToken()  ==  0)||(numbers  &&  random.nextToken()  ==  0))  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  numbers  &&  random.nextToken()  ==  0)||(numbers  &&  random.nextToken()  ==  0))  {	  if(chars    ==    0    ||(numbers    &&    random.nextToken()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
533	[BUG]  [BUGGY]  char[]  buffer,  Random.toString(ch));  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  char[]  buffer,  Random.toString(ch));  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random.toString(ch));	  char[]    buffer,    Random.valueOf(ch));    	non-compiled	[CE]  	40	None	replace
534	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
535	[BUG]  [BUGGY]  if(ch  ==  0  ||  random.length  ==  0  ||  numbers)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(ch  ==  0  ||  random.length  ==  0  ||  numbers)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||  random.length  ==  0  ||  numbers)  {	  if(count    ==    0    ||    random.length    ==    0    ||    numbers)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
536	[BUG]  [BUGGY]  if(count  ==  0  ||  random.length!=  0  ||  letters)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(count  ==  0  ||  random.length!=  0  ||  letters)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.length!=  0  ||  letters)  {	  if(count    ==    0    ||    random.length    ==    0    ||    numbers)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
537	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
538	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
539	[BUG]  [BUGGY]  if((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random.nextToken()  ==  '0'  &&  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z	  if((    random!=    null)&&((    random.nextToken()    ==    '0'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
540	[BUG]  [BUGGY]  int  count  =(numbers  &&  random.length  >  0)?  chars[count]  :  0;  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =(numbers  &&  random.length  >  0)?  chars[count]  :  0;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &&  random.length  >  0)?  chars[count]  :  0;	  int    count    =(numbers    &&    random.length    >    0)?    random.length    :    0;    	non-compiled	[CE]  	135	None	replace
541	[BUG]  [BUGGY]  if(chars!=  null  &&  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  if(chars!=  null  &&  chars.length  ==  0)  {  [BUGGY]      return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars!=  null  &&  chars.length  ==  0)  {	  if(chars!=    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
542	[BUG]  [BUGGY]  int  count  =  this.random.count()  -  1;  [CE]  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  this.random.count()  -  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  this.random.count()  -  1;	  int    count    =    this.random.count();    	non-compiled	[CE]  	122	None	replace
543	[BUG]  [BUGGY]  int  count  =  this.random.count()  +  1;  [CE]  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  this.random.count()  +  1;  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  this.random.count()  +  1;	  int    count    =    this.random.count();    	non-compiled	[CE]  	122	None	replace
544	[BUG]  [BUGGY]  int  count  =  this.random.count(ch);  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      char[]  chars,  Random  random)  {      [BUGGY]  int  count  =  this.random.count(ch);  [BUGGY]      if  (count  ==  0)  {  return       "     ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(     "Requested  random  string  length       "  +  count  +       "  is  less  than  0.     ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  this.random.count(ch);	  int    count    =    this.random.count();    	non-compiled	[CE]  	122	None	replace
