bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char[]  buffer,  0,  random);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  0,  random);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random);	      char[]    buffer,    chars);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
2	[BUG]  [BUGGY]  char[]  buffer,  random);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  random);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  random);	      char[]    buffer,    chars);    	non-compiled	[CE]  	11	None	replace
3	[BUG]  [BUGGY]  char[]  buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  0,  buffer.length);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  buffer.length);	      char[]    buffer,    chars);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
4	[BUG]  [BUGGY]  char[]  buffer,  new  char[count]);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  new  char[count]);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  new  char[count]);	      char[]    buffer,    chars);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
5	[BUG]  [BUGGY]  int  count  =  chars.length;  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =  chars.length;  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  chars.length;	      int    count    =    random.length;    	non-compiled	[CE]  	5	None	replace
6	[BUG]  [BUGGY]  char  count  =  random.length;  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char  count  =  random.length;  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char  count  =  random.length;	      int    count    =    random.length;    	non-compiled	[CE]  	5	None	replace
7	[BUG]  [BUGGY]  int  count  =  random.length  -  1;  [CE]  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =  random.length  -  1;  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.length  -  1;	      int    count    =    random.length;    	non-compiled	[CE]  	5	None	replace
8	[BUG]  [BUGGY]  int  count  =(chars  ==  null)?  0  :  chars.length;  [CE]  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =(chars  ==  null)?  0  :  chars.length;  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(chars  ==  null)?  0  :  chars.length;	      int    count    =    random.length;    	non-compiled	[CE]  	5	None	replace
9	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&((    random.nextToken    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
10	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&((    random.nextToken    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
11	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&((    random.nextToken    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
12	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&(  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&(  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&(	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&((    random.nextToken    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
13	[BUG]  [BUGGY]  if(count  ==  0  ||  random.length  ==  0  ||  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||  random.length  ==  0  ||  chars.length  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.length  ==  0  ||  chars.length  ==  0)  {	  if(count    ==    0    ||    random.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  if(ch  ==  0  ||  random.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(ch  ==  0  ||  random.length  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||  random.length  ==  0)  {	  if(count    ==    0    ||    random.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  if(count  ==  0  ||  random.length  ==  0  ||  numbers)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||  random.length  ==  0  ||  numbers)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.length  ==  0  ||  numbers)  {	  if(count    ==    0    ||    random.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  int  count)  {  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  random,  int  count)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  int  count)  {	      char[]    buffer,    Random    random)    {    	non-compiled	[CE]  	1	None	replace
17	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  int  start)  {  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  random,  int  start)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  int  start)  {	      char[]    buffer,    Random    random)    {    	non-compiled	[CE]  	1	None	replace
18	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  boolean  numbers)  {  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  random,  boolean  numbers)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  boolean  numbers)  {	      char[]    buffer,    Random    random)    {    	non-compiled	[CE]  	1	None	replace
19	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  boolean  letters)  {  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  random,  boolean  letters)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  boolean  letters)  {	      char[]    buffer,    Random    random)    {    	non-compiled	[CE]  	1	None	replace
20	[BUG]  [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  random.length);	      char[]    buffer,    Random    random)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
21	[BUG]  [BUGGY]  char[]  buffer,  int  start,  Random  random)  {  return  new  String(buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  int  start,  Random  random)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  Random  random)  {  return  new  String(buffer,  0,  random.length);	      char[]    buffer,    Random    random)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
22	[BUG]  [BUGGY]  char[]  buffer,  int  offset,  Random  random)  {  return  new  String(buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  int  offset,  Random  random)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  offset,  Random  random)  {  return  new  String(buffer,  0,  random.length);	      char[]    buffer,    Random    random)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
23	[BUG]  [BUGGY]  char[]  buffer,  ch,  random);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  ch,  random);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  ch,  random);	      char[]    buffer,    chars,    random);    	non-compiled	[CE]  	17	None	replace
24	[BUG]  [BUGGY]  char[]  buffer,  chars,  0,  random);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  chars,  0,  random);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  0,  random);	      char[]    buffer,    chars,    random);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
25	[BUG]  [BUGGY]  char[]  buffer,  chars,  ch);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  chars,  ch);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  ch);	      char[]    buffer,    chars,    random);    	non-compiled	[CE]  	17	None	replace
26	[BUG]  [BUGGY]  char[]  buffer,  chars,  ch)  {  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  chars,  ch)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  ch)  {	      char[]    buffer,    chars,    random)    {    	non-compiled	[CE]  	3	None	replace
27	[BUG]  [BUGGY]  char[]  buffer,  chars,  0,  random)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  chars,  0,  random)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  0,  random)  {	      char[]    buffer,    chars,    random)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
28	[BUG]  [BUGGY]  char[]  buffer,  0,  random)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  0,  random)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random)  {	      char[]    buffer,    chars,    random)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
29	[BUG]  [BUGGY]  char[]  buffer,  chars,  random,  numbers)  {  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  chars,  random,  numbers)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  random,  numbers)  {	      char[]    buffer,    chars,    random)    {    	non-compiled	[CE]  	3	None	replace
30	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
31	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
32	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
33	[BUG]  [BUGGY]  char[]  buffer,  int  start,  int  count)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  int  start,  int  count)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start,  int  count)  {	      char[]    buffer,    int    count)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  char[]  buffer,  int  count,  boolean  numbers)  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  int  count,  boolean  numbers)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count,  boolean  numbers)  {	      char[]    buffer,    int    count)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  char[]  buffer,  int  count,  boolean  letters)  {  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  int  count,  boolean  letters)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count,  boolean  letters)  {	      char[]    buffer,    int    count)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
36	[BUG]  [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextToken()  ==  0))  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.nextToken()  ==  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||(numbers  &&  random.nextToken()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextToken()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
37	[BUG]  [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextToken()  ==  0))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextToken()  ==  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||(numbers  &&  random.nextToken()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextToken()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
38	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextToken()!=  0))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextToken()!=  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextToken()!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextToken()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
39	[BUG]  [BUGGY]  char[]  buffer,  Random  RANDOM  random);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  RANDOM  random);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  RANDOM  random);	      char[]    buffer,    Random    random);    	non-compiled	[CE]  	18	None	replace
40	[BUG]  [BUGGY]  char[]  buffer,  Random.valueOf(ch));  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random.valueOf(ch));  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random.valueOf(ch));	      char[]    buffer,    Random    random);    	non-compiled	[CE]  	18	None	replace
41	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  ch);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  random,  ch);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  ch);	      char[]    buffer,    Random    random);    	non-compiled	[CE]  	18	None	replace
42	[BUG]  [BUGGY]  char[]  buffer,  Random  RANDOM);  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  RANDOM);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  RANDOM);	      char[]    buffer,    Random    random);    	non-compiled	[CE]  	18	None	replace
43	[BUG]  [BUGGY]  if(count  ==  0  ||  buffer.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||  buffer.length  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  buffer.length  ==  0)  {	  if(count    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  if(ch  ==  0  ||  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(ch  ==  0  ||  chars.length  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||  chars.length  ==  0)  {	  if(count    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  char[]  buffer,  Random  random)  {  return  new  char[1];  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  random)  {  return  new  char[1];  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random)  {  return  new  char[1];	      char[]    buffer,    Random    random)    {    return    new    char[0];    	non-compiled	[CE]  	19	None	replace
46	[BUG]  [BUGGY]  char[]  buffer,  int  count)  {  return  new  char[0];  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  int  count)  {  return  new  char[0];  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count)  {  return  new  char[0];	      char[]    buffer,    Random    random)    {    return    new    char[0];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
47	[BUG]  [BUGGY]  char[]  buffer,  Random  random)  {  return  null;  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  random)  {  return  null;  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random)  {  return  null;	      char[]    buffer,    Random    random)    {    return    new    char[0];    	non-compiled	[CE]  	19	None	replace
48	[BUG]  [BUGGY]  int  count  =  random.count()  +  1;  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =  random.count()  +  1;  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count()  +  1;	      int    count    =    random.count();    	non-compiled	[CE]  	10	None	replace
49	[BUG]  [BUGGY]  int  count  =  chars.count();  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =  chars.count();  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  chars.count();	      int    count    =    random.count();    	non-compiled	[CE]  	10	None	replace
50	[BUG]  [BUGGY]  int  count  =  random.count(chars);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =  random.count(chars);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count(chars);	      int    count    =    random.count();    	non-compiled	[CE]  	10	None	replace
51	[BUG]  [BUGGY]  if(chars  ==  null  ||  ch.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(chars  ==  null  ||  ch.length  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  ch.length  ==  0)  {	  if(chars    ==    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
52	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length!=  0)  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(chars  ==  null  ||  chars.length!=  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  chars.length!=  0)  {	  if(chars    ==    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
53	[BUG]  [BUGGY]  if(chars  ==  null  ||  ch  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(chars  ==  null  ||  ch  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  ch  ==  0)  {	  if(chars    ==    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
54	[BUG]  [BUGGY]  if(ch  ==  0  ||  random.getValue()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(ch  ==  0  ||  random.getValue()  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||  random.getValue()  ==  0)  {	  if(count    ==    0    ||    random.getValue()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
55	[BUG]  [BUGGY]  if(count  ==  0  ||  random.getValue()!=  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||  random.getValue()!=  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.getValue()!=  0)  {	  if(count    ==    0    ||    random.getValue()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
56	[BUG]  [BUGGY]  if(chars  ==  0  ||  random.getValue()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(chars  ==  0  ||  random.getValue()  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||  random.getValue()  ==  0)  {	  if(count    ==    0    ||    random.getValue()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
57	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
58	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
59	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextChar()  ==  0))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextChar()  ==  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextChar()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
60	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextCharacter()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextCharacter()  ==  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextCharacter()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
61	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextInt()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextInt()  ==  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextInt()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
62	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextCharacters()  ==  0))  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextCharacters()  ==  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextCharacters()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
63	[BUG]  [BUGGY]  if(count  ==  0  ||  random.numbers)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||  random.numbers)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.numbers)  {	  if(count    ==    1)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
64	[BUG]  [BUGGY]  if(count  ==  0  ||  random.numbers!=  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||  random.numbers!=  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.numbers!=  0)  {	  if(count    ==    1)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
65	[BUG]  [BUGGY]  int  count  =  chars.length();  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =  chars.length();  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  chars.length();	      int    count    =    random.length();    	non-compiled	[CE]  	2	None	replace
66	[BUG]  [BUGGY]  int  count  =  random.length()  +  1;  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =  random.length()  +  1;  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.length()  +  1;	      int    count    =    random.length();    	non-compiled	[CE]  	2	None	replace
67	[BUG]  [BUGGY]  int  count  =  random.length()  -  1;  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =  random.length()  -  1;  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.length()  -  1;	      int    count    =    random.length();    	non-compiled	[CE]  	2	None	replace
68	[BUG]  [BUGGY]  char  count  =  random.length();  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char  count  =  random.length();  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char  count  =  random.length();	      int    count    =    random.length();    	non-compiled	[CE]  	2	None	replace
69	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_	  if((    random!=    null)&&((    random.nextToken()    ==    'Z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
70	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    'Z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
71	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'Z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N	  if((    random!=    null)&&((    random.nextToken()    ==    'Z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
72	[BUG]  [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.getChars(ch)!=  0))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(ch  ==  0  ||(numbers  &&  random.getChars(ch)!=  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(ch  ==  0  ||(numbers  &&  random.getChars(ch)!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.getChars(ch)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
73	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch,  chars.length)!=  0))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch,  chars.length)!=  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.getChars(ch,  chars.length)!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.getChars(ch)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
74	[BUG]  [BUGGY]  if(count  ==  0  ||(letters  &&  random.getChars(ch)!=  0))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||(letters  &&  random.getChars(ch)!=  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(letters  &&  random.getChars(ch)!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.getChars(ch)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
75	[BUG]  [BUGGY]  char[]  buffer,  chars,  RANDOM)  {  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  chars,  RANDOM)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  RANDOM)  {	      char[]    buffer,    chars,    random)    {    	non-compiled	[CE]  	3	None	replace
76	[BUG]  [BUGGY]  if(chars  ==  null  ||  chars.length  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(chars  ==  null  ||  chars.length  <  =  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  null  ||  chars.length  <  =  0)  {	  if(chars    ==    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
77	[BUG]  [BUGGY]  if(chars!=  null  ||  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(chars!=  null  ||  chars.length  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars!=  null  ||  chars.length  ==  0)  {	  if(chars    ==    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
78	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
79	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VAL	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
80	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
81	[BUG]  [BUGGY]  char[]  buffer,  Random  random)  {  return  new  String(buffer,  0,  random.length);  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  random)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random)  {  return  new  String(buffer,  0,  random.length);	      char[]    buffer,    Random    random)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  	16	None	replace
82	[BUG]  [BUGGY]  char[]  buffer,  int  randomCount)  {  return  new  String(buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  int  randomCount)  {  return  new  String(buffer,  0,  random.length);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  randomCount)  {  return  new  String(buffer,  0,  random.length);	      char[]    buffer,    Random    random)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
83	[BUG]  [BUGGY]  if(count  ==  0  &&  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  &&  chars.length  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  &&  chars.length  ==  0)  {	  if(count    ==    0    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
84	[BUG]  [BUGGY]  int  count  =(chars  ==  null)?  random.length  :  chars.length;  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =(chars  ==  null)?  random.length  :  chars.length;  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(chars  ==  null)?  random.length  :  chars.length;	      int    count    =    random.length;    	non-compiled	[CE]  	5	None	replace
85	[BUG]  [BUGGY]  int  count  =(chars  ==  null)?  0  :  random.length;  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =(chars  ==  null)?  0  :  random.length;  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(chars  ==  null)?  0  :  random.length;	      int    count    =    random.length;    	non-compiled	[CE]  	5	None	replace
86	[BUG]  [BUGGY]  int  count  =  random.count()  -  1;  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =  random.count()  -  1;  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count()  -  1;	      int    count    =    random.count();    	non-compiled	[CE]  	10	None	replace
87	[BUG]  [BUGGY]  int  count  =  random.count(ch);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =  random.count(ch);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  random.count(ch);	      int    count    =    random.count();    	non-compiled	[CE]  	10	None	replace
88	[BUG]  [BUGGY]  if(count  ==  0  ||(chars  &&  random.nextToken()  ==  0))  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||(chars  &&  random.nextToken()  ==  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(chars  &&  random.nextToken()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextToken()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
89	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextDouble()!=  0))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextDouble()!=  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextDouble()!=  0))  {	  if(count    ==    1)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
90	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&((    random.nextToken    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
91	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&((    random.nextToken    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
92	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&((    random.nextToken    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
93	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch)  ==  0))  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||(numbers  &&  random.getChars(ch)  ==  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.getChars(ch)  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.getChars(ch)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
94	[BUG]  [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.getChars(ch)!=  0))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.getChars(ch)!=  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||(numbers  &&  random.getChars(ch)!=  0))  {	  if(count    ==    0    ||(numbers    &&    random.getChars(ch)!=    0))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
95	[BUG]  [BUGGY]  char[]  buffer,  0,  random.length);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  0,  random.length);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  random.length);	      char[]    buffer,    chars);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
96	[BUG]  [BUGGY]  char[]  buffer,  new  char[64]);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  new  char[64]);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  new  char[64]);	      char[]    buffer,    chars);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
97	[BUG]  [BUGGY]  char[]  buffer,  start,  random);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  start,  random);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  start,  random);	      char[]    buffer,    chars,    random);    	non-compiled	[CE]  	17	None	replace
98	[BUG]  [BUGGY]  char[]  buffer,  chars,  random,  numbers);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  chars,  random,  numbers);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  random,  numbers);	      char[]    buffer,    chars,    random);    	non-compiled	[CE]  	17	None	replace
99	[BUG]  [BUGGY]  if(count  ==  0  &&  random.getValue()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  &&  random.getValue()  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  &&  random.getValue()  ==  0)  {	  if(count    ==    0    ||    random.getValue()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
100	[BUG]  [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextDouble()  ==  0))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(chars  ==  0  ||(numbers  &&  random.nextDouble()  ==  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  0  ||(numbers  &&  random.nextDouble()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
101	[BUG]  [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextBoolean()))  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||(numbers  &&  random.nextBoolean()))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||(numbers  &&  random.nextBoolean()))  {	  if(count    ==    0    ||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
102	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  RANDOM);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  random,  RANDOM);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  RANDOM);	      char[]    buffer,    Random    random);    	non-compiled	[CE]  	18	None	replace
103	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  numbers);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  random,  numbers);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  numbers);	      char[]    buffer,    Random    random);    	non-compiled	[CE]  	18	None	replace
104	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  int  count);  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  random,  int  count);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  int  count);	      char[]    buffer,    Random    random);    	non-compiled	[CE]  	18	None	replace
105	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'a'  ||  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
106	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  '0'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
107	[BUG]  [BUGGY]  char[]  buffer,  Random  random)  {  return  new  char[0]  +  1;  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  random)  {  return  new  char[0]  +  1;  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random)  {  return  new  char[0]  +  1;	      char[]    buffer,    Random    random)    {    return    new    char[0];    	non-compiled	[CE]  	19	None	replace
108	[BUG]  [BUGGY]  char[]  buffer,  int  start)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  int  start)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  start)  {	      char[]    buffer,    int    count)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
109	[BUG]  [BUGGY]  if(count  ==  0  ||  random.getString().length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||  random.getString().length()  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.getString().length()  ==  0)  {	  if(count    ==    0    ||    random.getValue()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
110	[BUG]  [BUGGY]  if(count  ==  0  ||  random.getKey()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||  random.getKey()  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.getKey()  ==  0)  {	  if(count    ==    0    ||    random.getValue()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
111	[BUG]  [BUGGY]  if(count  ==  0  ||  random.getBooleanValue()  ==  false)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||  random.getBooleanValue()  ==  false)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  random.getBooleanValue()  ==  false)  {	  if(count    ==    0    ||    random.getValue()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
112	[BUG]  [BUGGY]  char[]  buffer,  0,  chars);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  0,  chars);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  chars);	      char[]    buffer,    chars);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
113	[BUG]  [BUGGY]  char[]  buffer,  0,  chars.length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  0,  chars.length);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  0,  chars.length);	      char[]    buffer,    chars);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
114	[BUG]  [BUGGY]  if(count  ==  0  ||  ch  ==  0)  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||  ch  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  ch  ==  0)  {	  if(count    ==    0    ||    random.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
115	[BUG]  [BUGGY]  char[]  buffer,  Random  random)  {  return  new  char[16];  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  random)  {  return  new  char[16];  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random)  {  return  new  char[16];	      char[]    buffer,    Random    random)    {    return    new    char[0];    	non-compiled	[CE]  	19	None	replace
116	[BUG]  [BUGGY]  if(chars  ==  random  ||  chars.length  ==  0)  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(chars  ==  random  ||  chars.length  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(chars  ==  random  ||  chars.length  ==  0)  {	  if(chars    ==    null    ||    chars.length    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
117	[BUG]  [BUGGY]  char[]  buffer,  int  ch)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  int  ch)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  ch)  {	      char[]    buffer,    int    count)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
118	[BUG]  [BUGGY]  char[]  buffer,  Random  ch);  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  ch);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  ch);	      char[]    buffer,    Random    random);    	non-compiled	[CE]  	18	None	replace
119	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  letters);  [CE]  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  random,  letters);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  letters);	      char[]    buffer,    Random    random);    	non-compiled	[CE]  	18	None	replace
120	[BUG]  [BUGGY]  char[]  buffer,  Random  random,  charCount)  {  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  Random  random,  charCount)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  Random  random,  charCount)  {	      char[]    buffer,    Random    random)    {    	non-compiled	[CE]  	1	None	replace
121	[BUG]  [BUGGY]  if((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z')&&((  random.nextToken()  ==  'z')&&((  random.nextToken	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z')&&((    random.nextToken()    ==    'z')&&((    random.nextToken    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
122	[BUG]  [BUGGY]  int  count  =  this.random.count();  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =  this.random.count();  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  this.random.count();	      int    count    =    random.count();    	non-compiled	[CE]  	10	None	replace
123	[BUG]  [BUGGY]  char[]  buffer,  chars,  random,  letters);  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  chars,  random,  letters);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  random,  letters);	      char[]    buffer,    chars,    random);    	non-compiled	[CE]  	17	None	replace
124	[BUG]  [BUGGY]  if(count  ==  0  ||  numbers  &&  random.nextDouble()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||  numbers  &&  random.nextDouble()  ==  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  numbers  &&  random.nextDouble()  ==  0)  {	  if(count    ==    1)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
125	[BUG]  [BUGGY]  if(count  ==  0  ||  numbers  &&  random.numbers)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||  numbers  &&  random.numbers)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  numbers  &&  random.numbers)  {	  if(count    ==    1)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
126	[BUG]  [BUGGY]  if(count  ==  0  ||  numbers  &&  random.nextDouble()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if(count  ==  0  ||  numbers  &&  random.nextDouble()!=  0)  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if(count  ==  0  ||  numbers  &&  random.nextDouble()!=  0)  {	  if(count    ==    1)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
127	[BUG]  [BUGGY]  char[]  buffer,  chars)  {  return  new  String(buffer,  0,  buffer.length);  [CE]  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  chars)  {  return  new  String(buffer,  0,  buffer.length);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars)  {  return  new  String(buffer,  0,  buffer.length);	      char[]    buffer,    Random    random)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  	16	None	replace
128	[BUG]  [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  buffer.length);  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  int  count)  {  return  new  String(buffer,  0,  buffer.length);	      char[]    buffer,    Random    random)    {    return    new    String(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
129	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_N	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
130	[BUG]  [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random!=  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_N    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
131	[BUG]  [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  random  ==  null)&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  'a')&&((  random.nextToken()  ==  'z'  ||  random.nextToken()  ==  JsonToken.VALUE_STRING)	  if((    random!=    null)&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    'a')&&((    random.nextToken()    ==    'z'    ||    random.nextToken()    ==    JsonToken.VALUE_STRING)    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
132	[BUG]  [BUGGY]  if((  letters  &&  random.nextDouble()  ==  0)||(numbers  &&  random.nextDouble()  ==  0))  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  letters  &&  random.nextDouble()  ==  0)||(numbers  &&  random.nextDouble()  ==  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.nextDouble()  ==  0)||(numbers  &&  random.nextDouble()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextDouble()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
133	[BUG]  [BUGGY]  char[]  buffer,  chars,  random,  RANDOM)  {  [CE]  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  char[]  buffer,  chars,  random,  RANDOM)  {  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	char[]  buffer,  chars,  random,  RANDOM)  {	      char[]    buffer,    chars,    random)    {    	non-compiled	[CE]  	3	None	replace
134	[BUG]  [BUGGY]  if((  letters  &&  random.nextToken()  ==  0)||(numbers  &&  random.nextToken()  ==  0))  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  if((  letters  &&  random.nextToken()  ==  0)||(numbers  &&  random.nextToken()  ==  0))  {  [BUGGY]    return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	if((  letters  &&  random.nextToken()  ==  0)||(numbers  &&  random.nextToken()  ==  0))  {	  if(count    ==    0    ||(numbers    &&    random.nextToken()    ==    0))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
135	[BUG]  [BUGGY]  int  count  =(numbers  &&  random.length  >  0)?  random.length  :  0;  [CE]  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =(numbers  &&  random.length  >  0)?  random.length  :  0;  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &&  random.length  >  0)?  random.length  :  0;	      int    count    =    random.length;    	non-compiled	[CE]  	5	None	replace
136	[BUG]  [BUGGY]  int  count  =(numbers  &  Random.MIN_VALUE)!=  0?  random.length  :  0;  [CE]  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =(numbers  &  Random.MIN_VALUE)!=  0?  random.length  :  0;  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &  Random.MIN_VALUE)!=  0?  random.length  :  0;	      int    count    =    random.length;    	non-compiled	[CE]  	5	None	replace
137	[BUG]  [BUGGY]  int  count  =(numbers  &  Random.MAX_VALUE)  >=  0?  random.length  :  0;  [CE]  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =(numbers  &  Random.MAX_VALUE)  >=  0?  random.length  :  0;  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =(numbers  &  Random.MAX_VALUE)  >=  0?  random.length  :  0;	      int    count    =    random.length;    	non-compiled	[CE]  	5	None	replace
138	[BUG]  [BUGGY]  int  count  =  this.random.length();  [CE]  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  chars,  Random  random)  {    [BUGGY]  int  count  =  this.random.length();  [BUGGY]    if  (count  ==  0)  {  return     "   ";  }  else  if  (count  <  0)  {  throw  new  IllegalArgumentException(   "Requested  random  string  length     "  +  count  +     "  is  less  than  0.   ");  }  if  (start  ==  0  &&  end  ==  0)  {  if  (!letters  &&  !numbers)  {  end  =  Integer.MAX_VALUE;  }  else  {  end  =  'z'  +  1;  [CLASS]  RandomStringUtils  [METHOD]  random  [RETURN_TYPE]  String  int  count  int  start  int  end  boolean  letters  boolean  numbers  char[]  chars  Random  random  [VARIABLES]  char  ch  boolean  letters  numbers  Random  RANDOM  random  int  count  end  gap  start  char[]  buffer  chars  	projects/Lang12/src/main/java/org/apache/commons/lang3/RandomStringUtils.java	0.7071067811865475	225	225	2	replace	int  count  =  this.random.length();	      int    count    =    random.length();    	non-compiled	[CE]  	2	None	replace
