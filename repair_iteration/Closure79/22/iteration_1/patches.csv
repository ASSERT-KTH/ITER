bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  null,  getSynthesizedExternsInput());  [CE]  illegal  start  of  type  [FE]              RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  null,  getSynthesizedExternsInput());  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	NodeTraversal.traverse(compiler,  varInput,  null,  getSynthesizedExternsInput());	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  varsToDeclareInExternsRoot.add(currInput);  [CE]  illegal  start  of  type  [FE]                RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  varsToDeclareInExternsRoot.add(currInput);  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	varsToDeclareInExternsRoot.add(currInput);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  varsToDeclareInExternsRoot  =  currInput.getParent();  [CE]  illegal  start  of  type  [FE]                  RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  varsToDeclareInExternsRoot  =  currInput.getParent();  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	varsToDeclareInExternsRoot  =  currInput.getParent();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  varsToDeclareInExternsRoot.add(currInput);  compiler.reportCodeChange();  [CE]  illegal  start  of  type  [FE]                    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  varsToDeclareInExternsRoot.add(currInput);  compiler.reportCodeChange();  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	varsToDeclareInExternsRoot.add(currInput);  compiler.reportCodeChange();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  currModule);  [CE]  illegal  start  of  type  [FE]                      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  currModule);  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	NodeTraversal.traverse(compiler,  varInput,  currModule);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  varsToDeclareInExternsRoot.put(varName,  currInput);  [CE]  illegal  start  of  type  [FE]                        RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  varsToDeclareInExternsRoot.put(varName,  currInput);  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	varsToDeclareInExternsRoot.put(varName,  currInput);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currInput.getParent();  [CE]  illegal  start  of  type  [FE]                          RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  varsToDeclareInExterns  =  currInput.getParent();  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	varsToDeclareInExterns  =  currInput.getParent();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(currInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if(currInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {	  if(varInput    ==    currInput    ||    currInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	4	12	replace
9	[BUG]  [BUGGY]  if(currInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(currInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(currInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {	  if(varInput    ==    currInput    ||    currInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	4	12	replace
10	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(currInput  ==  null  ||  currInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if(currInput  ==  null  ||  currInput  ==  null  ||  varInput  ==  null)  {	  if(varInput    ==    currInput    ||    currInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	4	5	replace
11	[BUG]  [BUGGY]  if(currInput  ==  null  ||  currInput  ==  null  ||  varInput  ==  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(currInput  ==  null  ||  currInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(currInput  ==  null  ||  currInput  ==  null  ||  varInput  ==  null)  {	  if(varInput    ==    currInput    ||    currInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	4	5	replace
12	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(currInput  ==  currInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if(currInput  ==  currInput  ||  currInput  ==  null  ||  varInput!=  null)  {	  if(varInput    ==    currInput    ||    currInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	4	12	replace
13	[BUG]  [BUGGY]  if(currInput  ==  currInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(currInput  ==  currInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(currInput  ==  currInput  ||  currInput  ==  null  ||  varInput!=  null)  {	  if(varInput    ==    currInput    ||    currInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	4	12	replace
14	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  currInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if(varInput  ==  currInput  ||  currInput!=  null  ||  varInput  ==  null)  {	  if    (currInput    ==    varInput    ||    currInput!=    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	6	12	replace
15	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  currInput!=  null  ||  varInput  ==  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  currInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput  ==  currInput  ||  currInput!=  null  ||  varInput  ==  null)  {	  if    (currInput    ==    varInput    ||    currInput!=    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	6	12	replace
16	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  null  ||  currInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if  (currInput  ==  null  ||  currInput!=  null  ||  varInput  ==  null)  {	  if    (currInput    ==    varInput    ||    currInput!=    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	6	12	replace
17	[BUG]  [BUGGY]  if  (currInput  ==  null  ||  currInput!=  null  ||  varInput  ==  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  null  ||  currInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if  (currInput  ==  null  ||  currInput!=  null  ||  varInput  ==  null)  {	  if    (currInput    ==    varInput    ||    currInput!=    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	6	12	replace
18	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
19	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if  (currInput  ==  varInput  ||  varInput!=  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if  (currInput  ==  varInput  ||  varInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    if  (currInput  ==  varInput  ||  varInput!=  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
20	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
21	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if  (currInput!=  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if  (currInput!=  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    if  (currInput!=  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
22	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if  (varInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if  (varInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    if  (varInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
23	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  If  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [CE]  ';'  expected  [FE]              RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  If  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    If  (currInput  ==  varInput  ||  varInput  ==  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
24	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    currInput    ==    null    ||    varInput!=    null)    {    if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
25	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    currInput    ==    null    ||    varInput!=    null)    {    if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
26	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  >=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    currInput    ==    null    ||    varInput!=    null)    {    if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
27	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  if  (currInput!=  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  if  (currInput!=  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    currInput    ==    null    ||    varInput!=    null)    {    if  (currInput!=  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
28	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  If  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [CE]  ';'  expected  [FE]            RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  If  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    currInput    ==    null    ||    varInput!=    null)    {    If  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
29	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  if  (currInput  >=  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  if  (currInput  >=  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    currInput    ==    null    ||    varInput!=    null)    {    if  (currInput  >=  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
30	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(currInput  ==  varInput  ||  varInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if(currInput  ==  varInput  ||  varInput  ==  null  ||  varInput!=  null)  {	  if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
31	[BUG]  [BUGGY]  if(currInput  ==  varInput  ||  varInput  ==  null  ||  varInput!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(currInput  ==  varInput  ||  varInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(currInput  ==  varInput  ||  varInput  ==  null  ||  varInput!=  null)  {	  if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
32	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(currInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if(currInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {	  if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
33	[BUG]  [BUGGY]  if(currInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(currInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(currInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {	  if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
34	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput!=  null)  {	  if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
35	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput!=  null)  {	  if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
36	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput!=  null)  {	  if    (currInput    ==    varInput    ||    currInput    ==    null    ||    varInput!=    null)    {    	compilable	  [FE]  RuntimeException  	2	12	replace
37	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput!=  null)  {	  if    (currInput    ==    varInput    ||    currInput    ==    null    ||    varInput!=    null)    {    	compilable	  [FE]  RuntimeException  	2	12	replace
38	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  null  ||  currInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if  (currInput  ==  null  ||  currInput  ==  null  ||  varInput!=  null)  {	  if    (currInput    ==    varInput    ||    currInput    ==    null    ||    varInput!=    null)    {    	compilable	  [FE]  RuntimeException  	2	12	replace
39	[BUG]  [BUGGY]  if  (currInput  ==  null  ||  currInput  ==  null  ||  varInput!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  null  ||  currInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if  (currInput  ==  null  ||  currInput  ==  null  ||  varInput!=  null)  {	  if    (currInput    ==    varInput    ||    currInput    ==    null    ||    varInput!=    null)    {    	compilable	  [FE]  RuntimeException  	2	12	replace
40	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput    ==    currInput    ||    currInput    ==    null    ||    varInput    ==    null)    {    if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
41	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  currInput!=  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  currInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput    ==    currInput    ||    currInput    ==    null    ||    varInput    ==    null)    {    if(varInput  ==  currInput  ||  currInput!=  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
42	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput    ==    currInput    ||    currInput    ==    null    ||    varInput    ==    null)    {    if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
43	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  if(varInput!=  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  if(varInput!=  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput    ==    currInput    ||    currInput    ==    null    ||    varInput    ==    null)    {    if(varInput!=  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
44	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  if(varInput  >=  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  if(varInput  >=  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput    ==    currInput    ||    currInput    ==    null    ||    varInput    ==    null)    {    if(varInput  >=  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
45	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  currInput  >=  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  currInput  >=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput    ==    currInput    ||    currInput    ==    null    ||    varInput    ==    null)    {    if(varInput  ==  currInput  ||  currInput  >=  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
46	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  If(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [CE]  ';'  expected  [FE]                RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  If(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput    ==    currInput    ||    currInput    ==    null    ||    varInput    ==    null)    {    If(varInput  ==  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
47	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    currInput!=    null    ||    varInput    ==    null)    {    if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
48	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  if  (currInput!=  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  if  (currInput!=  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    currInput!=    null    ||    varInput    ==    null)    {    if  (currInput!=  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
49	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  if  (currInput  ==  varInput  ||  currInput  >=  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  if  (currInput  ==  varInput  ||  currInput  >=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    currInput!=    null    ||    varInput    ==    null)    {    if  (currInput  ==  varInput  ||  currInput  >=  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
50	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  if  (currInput  ==  varInput  ||  currInput  >>  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  if  (currInput  ==  varInput  ||  currInput  >>  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    currInput!=    null    ||    varInput    ==    null)    {    if  (currInput  ==  varInput  ||  currInput  >>  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
51	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  if  (currInput  >=  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  if  (currInput  >=  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    currInput!=    null    ||    varInput    ==    null)    {    if  (currInput  >=  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
52	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  If  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  [CE]  ';'  expected  [FE]              RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  If  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    currInput!=    null    ||    varInput    ==    null)    {    If  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
53	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
54	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  varInput!=  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  varInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    if(varInput  ==  currInput  ||  varInput!=  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
55	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
56	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if(varInput!=  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if(varInput!=  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    if(varInput!=  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
57	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if(varInput  >=  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if(varInput  >=  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    if(varInput  >=  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
58	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  varInput  >=  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  if(varInput  ==  currInput  ||  varInput  >=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    if(varInput  ==  currInput  ||  varInput  >=  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
59	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  If(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [CE]  ';'  expected  [FE]                RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  If(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    If(varInput  ==  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
60	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  if  (varInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  if  (varInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    currInput!=    null    ||    varInput    ==    null)    {    if  (varInput  ==  varInput  ||  currInput!=  null  ||  varInput  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
61	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  null  ||  currInput  ==  varInput  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if(varInput  ==  null  ||  currInput  ==  varInput  ||  varInput  ==  null)  {	  if    (currInput    ==    varInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	9	5	replace
62	[BUG]  [BUGGY]  if(varInput  ==  null  ||  currInput  ==  varInput  ||  varInput  ==  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  null  ||  currInput  ==  varInput  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput  ==  null  ||  currInput  ==  varInput  ||  varInput  ==  null)  {	  if    (currInput    ==    varInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	9	5	replace
63	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  null  ||  currInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if(varInput  ==  null  ||  currInput  ==  null  ||  varInput  ==  null)  {	  if(varInput    ==    currInput    ||    currInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	4	5	replace
64	[BUG]  [BUGGY]  if(varInput  ==  null  ||  currInput  ==  null  ||  varInput  ==  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  null  ||  currInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput  ==  null  ||  currInput  ==  null  ||  varInput  ==  null)  {	  if(varInput    ==    currInput    ||    currInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	4	5	replace
65	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(currInput  ==  varInput  ||  varInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if(currInput  ==  varInput  ||  varInput!=  null  ||  varInput  ==  null)  {	  if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
66	[BUG]  [BUGGY]  if(currInput  ==  varInput  ||  varInput!=  null  ||  varInput  ==  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(currInput  ==  varInput  ||  varInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(currInput  ==  varInput  ||  varInput!=  null  ||  varInput  ==  null)  {	  if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
67	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(currInput  ==  varInput  ||  varInput  ==  null  ||  currInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if(currInput  ==  varInput  ||  varInput  ==  null  ||  currInput  ==  null)  {	  if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	11	5	replace
68	[BUG]  [BUGGY]  if(currInput  ==  varInput  ||  varInput  ==  null  ||  currInput  ==  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(currInput  ==  varInput  ||  varInput  ==  null  ||  currInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(currInput  ==  varInput  ||  varInput  ==  null  ||  currInput  ==  null)  {	  if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	11	5	replace
69	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  if  (varInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  if  (varInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    currInput    ==    null    ||    varInput!=    null)    {    if  (varInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
70	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  this);  [CE]  illegal  start  of  type  [FE]              RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  this);  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	NodeTraversal.traverse(compiler,  varInput,  this);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
71	[BUG]  [BUGGY]  t.getCompiler().reportCodeChange();  [CE]  illegal  start  of  type  [FE]                RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  t.getCompiler().reportCodeChange();  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	t.getCompiler().reportCodeChange();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
72	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck(currInput),  t);  [CE]  illegal  start  of  type  [FE]                  RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck(currInput),  t);  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck(currInput),  t);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
73	[BUG]  [BUGGY]  varsToDeclareInExterns.put(varName,  currInput);  [CE]  illegal  start  of  type  [FE]              RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  varsToDeclareInExterns.put(varName,  currInput);  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	varsToDeclareInExterns.put(varName,  currInput);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
74	[BUG]  [BUGGY]  varsToDeclareInExterns.add(currInput);  [CE]  illegal  start  of  type  [FE]                RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  varsToDeclareInExterns.add(currInput);  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	varsToDeclareInExterns.add(currInput);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
75	[BUG]  [BUGGY]  varsToDeclareInExterns.add(varInput);  [CE]  illegal  start  of  type  [FE]                  RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  varsToDeclareInExterns.add(varInput);  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	varsToDeclareInExterns.add(varInput);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
76	[BUG]  [BUGGY]  n.removeChild(currInput);  [CE]  illegal  start  of  type  [FE]                    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  n.removeChild(currInput);  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	n.removeChild(currInput);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
77	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  varInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if(varInput  ==  currInput  ||  varInput!=  null  ||  varInput  ==  null)  {	  if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
78	[BUG]  [BUGGY]  if(varInput  ==  currInput  ||  varInput!=  null  ||  varInput  ==  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  currInput  ||  varInput!=  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput  ==  currInput  ||  varInput!=  null  ||  varInput  ==  null)  {	  if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
79	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  null  ||  varInput  ==  currInput  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if(varInput  ==  null  ||  varInput  ==  currInput  ||  varInput  ==  null)  {	  if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	11	5	replace
80	[BUG]  [BUGGY]  if(varInput  ==  null  ||  varInput  ==  currInput  ||  varInput  ==  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  null  ||  varInput  ==  currInput  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput  ==  null  ||  varInput  ==  currInput  ||  varInput  ==  null)  {	  if(varInput    ==    currInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	11	5	replace
81	[BUG]  [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  >>  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput!=  null)  {  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  >>  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if    (currInput    ==    varInput    ||    currInput    ==    null    ||    varInput!=    null)    {    if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
82	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	if(varInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {	  if    (currInput    ==    varInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	9	12	replace
83	[BUG]  [BUGGY]  if(varInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    createSynthesizedExternVar(varName);  scope.getGlobalScope().declare(varName,  n,  null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;    [BUGGY]  if(varInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]      return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	if(varInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {	  if    (currInput    ==    varInput    ||    varInput    ==    null    ||    varInput    ==    null)    {    	compilable	  [FE]  RuntimeException  	9	12	replace
