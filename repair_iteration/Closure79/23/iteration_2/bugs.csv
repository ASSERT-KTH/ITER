bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Throwables.throw  new  AssertionError( "Unknown  module: "  +  currInput);  [CE]  <identifier>  expected  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionError( "Unknown  module: "  +  currInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	Throwables.throw  new  AssertionError( "Unknown  module: "  +  currInput);	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
2	[BUG]  [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput,  varModule);  [CE]  cannot  find  symbol  varModule  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput,  varModule);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  AssertionError( "Unknown  module: "  +  currInput,  varModule);	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  cannot  find  symbol  varModule	13	None	replace
3	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  varInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	add	throw  new  AssertionError( "Unknown  module: "  +  varInput);	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    	compilable	  [FE]  RuntimeException  	13	42	replace
4	[BUG]  [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  varInput);  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  varInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  AssertionError( "Unknown  module: "  +  varInput);	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    	compilable	  [FE]  RuntimeException  	13	42	replace
5	[BUG]  [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput,  currModule);  [CE]  cannot  find  symbol  currModule  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput,  currModule);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  AssertionError( "Unknown  module: "  +  currInput,  currModule);	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  cannot  find  symbol  currModule	13	None	replace
6	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput.getModule());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	add	throw  new  AssertionError( "Unknown  module: "  +  currInput.getModule());	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    	compilable	  [FE]  RuntimeException  	13	42	replace
7	[BUG]  [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput.getModule());  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput.getModule());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  AssertionError( "Unknown  module: "  +  currInput.getModule());	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    	compilable	  [FE]  RuntimeException  	13	42	replace
8	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  throw  new  UnsupportedOperationException( "   ");  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  throw  new  UnsupportedOperationException( "   ");  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    UnsupportedOperationException(   "   ");    throw  new  UnsupportedOperationException( "   ");	  	non-compiled	[CE]  unreachable  statement	5	None	add
9	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  Throw  new  UnsupportedOperationException( "   ");  [CE]  not  a  statement  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  Throw  new  UnsupportedOperationException( "   ");  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    UnsupportedOperationException(   "   ");    Throw  new  UnsupportedOperationException( "   ");	  	non-compiled	[CE]  not  a  statement	5	None	add
10	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [CE]  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    UnsupportedOperationException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));	  	non-compiled	[CE]  	5	None	add
11	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [CE]  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    UnsupportedOperationException(   "   ");    JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));	  	non-compiled	[CE]  	5	None	add
12	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [CE]  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    UnsupportedOperationException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));	  	non-compiled	[CE]  	5	None	add
13	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [CE]  [FE]              RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    UnsupportedOperationException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));	  	non-compiled	[CE]  	5	None	add
14	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	add	varInput    =    currInput;    varInput  =  currInput;	  	compilable	  [FE]  RuntimeException  	16	5	add
15	[BUG]  [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    varInput  =  currInput;	  	compilable	  [FE]  RuntimeException  	16	5	add
16	[BUG]  [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  getSynthesizedExternsInput();  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  getSynthesizedExternsInput();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  getSynthesizedExternsInput();	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
17	[BUG]  [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  type  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  compiler.reportCodeChange();  }  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    varInput  =  currInput;  }  else  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  compiler.reportCodeChange();  }	  	non-compiled	[CE]  illegal  start  of  type	16	None	add
18	[BUG]  [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  type  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  compiler.reportCodeChange();  }  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  compiler.reportCodeChange();  }	  	non-compiled	[CE]  illegal  start  of  type	16	None	add
19	[BUG]  [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  getSynthesizedExternsInput();  }  [CE]  illegal  start  of  type  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  getSynthesizedExternsInput();  }  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  getSynthesizedExternsInput();  }	  	non-compiled	[CE]  illegal  start  of  type	16	None	add
20	[BUG]  [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [CE]  cannot  find  symbol  [FE]              RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
21	[BUG]  [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  getSynthesizedExternsInput();  return;  [CE]  cannot  find  symbol  [FE]                RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  getSynthesizedExternsInput();  return;  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  getSynthesizedExternsInput();  return;	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
22	[BUG]  [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    varInput  =  currInput;  }  else  if(currInput.getType()  ==  Token.FUNCTION  ||  currInput.getType()  ==  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	16	None	add
23	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
24	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,CompilerInput)  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  t.report(JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	t.report(JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,CompilerInput)	4	None	replace
25	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [CE]  cannot  find  symbol  currModule  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  t.report(JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	t.report(JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  currModule	4	None	replace
26	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  STRICT_MODULE_DEP_ERROR,  currInput));  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,CompilerInput)  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  t.report(JSError.make(t,  n,  STRICT_MODULE_DEP_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	t.report(JSError.make(t,  n,  STRICT_MODULE_DEP_ERROR,  currInput));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,CompilerInput)	4	None	replace
27	[BUG]  [BUGGY]  t.report(JSError.make(t,  varInput,  currModule,  varName));  [CE]  cannot  find  symbol  currModule  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  t.report(JSError.make(t,  varInput,  currModule,  varName));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	t.report(JSError.make(t,  varInput,  currModule,  varName));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  currModule	4	None	replace
28	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  STRICT_MODULE_DEP_ERROR,  currModule));  [CE]  cannot  find  symbol  currModule  [FE]              RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  t.report(JSError.make(t,  n,  STRICT_MODULE_DEP_ERROR,  currModule));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	t.report(JSError.make(t,  n,  STRICT_MODULE_DEP_ERROR,  currModule));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  currModule	4	None	replace
29	[BUG]  [BUGGY]  Throwables.throw  new  RuntimeException( " ");  [CE]  <identifier>  expected  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  Throwables.throw  new  RuntimeException( " ");  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	Throwables.throw  new  RuntimeException( " ");	  throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
30	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
31	[BUG]  [BUGGY]  varsToDeclareInExternsRoot  =  currInput.getSynthesizedExternsRoot();  [CE]  cannot  find  symbol  varsToDeclareInExternsRoot  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varsToDeclareInExternsRoot  =  currInput.getSynthesizedExternsRoot();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varsToDeclareInExternsRoot  =  currInput.getSynthesizedExternsRoot();	      	non-compiled	[CE]  cannot  find  symbol  varsToDeclareInExternsRoot	15	None	replace
32	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currInput.getSynthesizedExterns();  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varsToDeclareInExterns  =  currInput.getSynthesizedExterns();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varsToDeclareInExterns  =  currInput.getSynthesizedExterns();	      	non-compiled	[CE]  cannot  find  symbol	15	None	replace
33	[BUG]  [BUGGY]  varsToDeclareInExternsRoot  =  currInput.getSynthesizedExternsRoot();  compiler.reportCodeChange();  [CE]  cannot  find  symbol  varsToDeclareInExternsRoot  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varsToDeclareInExternsRoot  =  currInput.getSynthesizedExternsRoot();  compiler.reportCodeChange();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varsToDeclareInExternsRoot  =  currInput.getSynthesizedExternsRoot();  compiler.reportCodeChange();	      	non-compiled	[CE]  cannot  find  symbol  varsToDeclareInExternsRoot	15	None	replace
34	[BUG]  [BUGGY]  varsToDeclareInExternsRoot  =  currInput.getParent();  [CE]  cannot  find  symbol  varsToDeclareInExternsRoot  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varsToDeclareInExternsRoot  =  currInput.getParent();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varsToDeclareInExternsRoot  =  currInput.getParent();	      	non-compiled	[CE]  cannot  find  symbol  varsToDeclareInExternsRoot	15	None	replace
35	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currInput.getSynthesizedExterns();  compiler.reportCodeChange();  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varsToDeclareInExterns  =  currInput.getSynthesizedExterns();  compiler.reportCodeChange();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varsToDeclareInExterns  =  currInput.getSynthesizedExterns();  compiler.reportCodeChange();	      	non-compiled	[CE]  cannot  find  symbol	15	None	replace
36	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currInput.getParent();  [CE]  cannot  find  symbol  [FE]              RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varsToDeclareInExterns  =  currInput.getParent();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varsToDeclareInExterns  =  currInput.getParent();	      	non-compiled	[CE]  cannot  find  symbol	15	None	replace
37	[BUG]  [BUGGY]  ||  currInput  ==  null  ||  varInput  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  ||  currInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	||  currInput  ==  null  ||  varInput  ==  null)  {	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
38	[BUG]  [BUGGY]  throw  new  JSError( "Unknown  module: "  +  currInput.getName(),  NAME_REFERENCE_IN_EXTERNS_ERROR);  [CE]  no  suitable  constructor  found  for  JSError(String,DiagnosticType)  [FE]                RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError( "Unknown  module: "  +  currInput.getName(),  NAME_REFERENCE_IN_EXTERNS_ERROR);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError( "Unknown  module: "  +  currInput.getName(),  NAME_REFERENCE_IN_EXTERNS_ERROR);	  throw    new    JSError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  no  suitable  constructor  found  for  JSError(String,DiagnosticType)	9	None	replace
39	[BUG]  [BUGGY]  Throwables.throw  new  JSError( "Unknown  module: "  +  currInput.getName());  [CE]  <identifier>  expected  [FE]                  RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  Throwables.throw  new  JSError( "Unknown  module: "  +  currInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	Throwables.throw  new  JSError( "Unknown  module: "  +  currInput.getName());	  throw    new    JSError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
40	[BUG]  [BUGGY]  throw  new  JSError( "Unknown  module: "  +  currInput.getName(),  MISSING_MODULE_DEP_ERROR);  [CE]  no  suitable  constructor  found  for  JSError(String,DiagnosticType)  [FE]                    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError( "Unknown  module: "  +  currInput.getName(),  MISSING_MODULE_DEP_ERROR);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError( "Unknown  module: "  +  currInput.getName(),  MISSING_MODULE_DEP_ERROR);	  throw    new    JSError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  no  suitable  constructor  found  for  JSError(String,DiagnosticType)	9	None	replace
41	[BUG]  [BUGGY]  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput.getName()));  [CE]  ';'  expected  [FE]                      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput.getName()));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput.getName()));	  throw    new    JSError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  ';'  expected	9	None	replace
42	[BUG]  [BUGGY]  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput.getName()));  [CE]  ';'  expected  [FE]                        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput.getName()));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput.getName()));	  throw    new    JSError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  ';'  expected	9	None	replace
43	[BUG]  [BUGGY]  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [CE]  ';'  expected  [FE]                          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));	  throw    new    JSError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  ';'  expected	9	None	replace
44	[BUG]  [BUGGY]  String  varName  =  currInput.getString();  [CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  String  varName  =  currInput.getString();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	String  varName  =  currInput.getString();	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	2	None	replace
45	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  INVALID_FUNCTION_DECL));  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType)  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  t.report(JSError.make(t,  n,  INVALID_FUNCTION_DECL));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	t.report(JSError.make(t,  n,  INVALID_FUNCTION_DECL));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType)	2	None	replace
46	[BUG]  [BUGGY]  t.report(JSError.make(t,  varInput,  currModule));  [CE]  cannot  find  symbol  currModule  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  t.report(JSError.make(t,  varInput,  currModule));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	t.report(JSError.make(t,  varInput,  currModule));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  currModule	2	None	replace
47	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currInput));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  IllegalArgumentException( " ".equals(currInput));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	2	None	replace
48	[BUG]  [BUGGY]  varInput  =  currInput.getParent();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput.getParent();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput  =  currInput.getParent();	  varInput    =    currInput;    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
49	[BUG]  [BUGGY]  varInput  =  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput  =  currInput  ||  currInput  ==  null  ||  varInput  ==  null)  {	  varInput    =    currInput;    	non-compiled	[CE]  ';'  expected	17	None	replace
50	[BUG]  [BUGGY]  varInput  =  currInput  ||  currInput  ==  null  ||  varInput  ==  null);  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput  ||  currInput  ==  null  ||  varInput  ==  null);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput  =  currInput  ||  currInput  ==  null  ||  varInput  ==  null);	  varInput    =    currInput;    	non-compiled	[CE]  ';'  expected	17	None	replace
51	[BUG]  [BUGGY]  varInput  =  currInput.getModule();  [CE]  incompatible  types  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput.getModule();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput  =  currInput.getModule();	  varInput    =    currInput;    	non-compiled	[CE]  incompatible  types	17	None	replace
52	[BUG]  [BUGGY]  varInput  =  currInput  ||  currInput  ==  null  ||  varInput  ==  null;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput  ||  currInput  ==  null  ||  varInput  ==  null;  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput  =  currInput  ||  currInput  ==  null  ||  varInput  ==  null;	  varInput    =    currInput;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	17	None	replace
53	[BUG]  [BUGGY]  varInput  =  currInput.getSynthesizedExternsInput();  [CE]  cannot  find  symbol  [FE]              RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput.getSynthesizedExternsInput();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput  =  currInput.getSynthesizedExternsInput();	  varInput    =    currInput;    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
54	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  throw  new  RuntimeException( "   ");  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException(   "   ");  throw  new  RuntimeException( "   ");  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    RuntimeException(   "   ");    throw  new  RuntimeException( "   ");	  	non-compiled	[CE]  unreachable  statement	7	None	add
55	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  getSynthesizedExternsInput()));  [CE]  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  getSynthesizedExternsInput()));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    RuntimeException(   "   ");    JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  getSynthesizedExternsInput()));	  	non-compiled	[CE]  	7	None	add
56	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [CE]  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    RuntimeException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));	  	non-compiled	[CE]  	7	None	add
57	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [CE]  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    RuntimeException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));	  	non-compiled	[CE]  	7	None	add
58	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [CE]  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    RuntimeException(   "   ");    JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));	  	non-compiled	[CE]  	7	None	add
59	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [CE]  [FE]              RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    RuntimeException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));	  	non-compiled	[CE]  	7	None	add
60	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  varName));  [CE]  [FE]                RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  varName));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    RuntimeException(   "   ");    JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  varName));	  	non-compiled	[CE]  	7	None	add
61	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ");  [CE]  <identifier>  expected  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ");  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	Throwables.throw  new  UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
62	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " "),  getSynthesizedExternsInput());  [CE]  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  UnsupportedOperationException( " "),  getSynthesizedExternsInput());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  UnsupportedOperationException( " "),  getSynthesizedExternsInput());	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  	6	None	replace
63	[BUG]  [BUGGY]  Throwables.throw  new  AssertionError( "Unknown  module: "  +  currInput.getName());  [CE]  <identifier>  expected  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionError( "Unknown  module: "  +  currInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	Throwables.throw  new  AssertionError( "Unknown  module: "  +  currInput.getName());	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
64	[BUG]  [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput.getName(),  varModule);  [CE]  cannot  find  symbol  varModule  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput.getName(),  varModule);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  AssertionError( "Unknown  module: "  +  currInput.getName(),  varModule);	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  cannot  find  symbol  varModule	11	None	replace
65	[BUG]  [BUGGY]  Throwables.warning( "Unknown  module: "  +  currInput.getName());  [CE]  cannot  find  symbol  Throwables  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  Throwables.warning( "Unknown  module: "  +  currInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	Throwables.warning( "Unknown  module: "  +  currInput.getName());	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  cannot  find  symbol  Throwables	11	None	replace
66	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput.toString());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	add	throw  new  AssertionError( "Unknown  module: "  +  currInput.toString());	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    	compilable	  [FE]  RuntimeException  	11	42	replace
67	[BUG]  [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput.toString());  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput.toString());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  AssertionError( "Unknown  module: "  +  currInput.toString());	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    	compilable	  [FE]  RuntimeException  	11	42	replace
68	[BUG]  [BUGGY]  String  varName  =  currInput.getName();  [CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  String  varName  =  currInput.getName();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	String  varName  =  currInput.getName();	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	11	None	replace
69	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  throw  new  AssertionError( "Unknown  module:   "  +  currInput.getName());  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  throw  new  AssertionError( "Unknown  module:   "  +  currInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    throw  new  AssertionError( "Unknown  module:   "  +  currInput.getName());	  	non-compiled	[CE]  unreachable  statement	10	None	add
70	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  Throw  new  AssertionError( "Unknown  module:   "  +  currInput.getName());  [CE]  not  a  statement  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  Throw  new  AssertionError( "Unknown  module:   "  +  currInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    Throw  new  AssertionError( "Unknown  module:   "  +  currInput.getName());	  	non-compiled	[CE]  not  a  statement	10	None	add
71	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  JSError.make(t,  n,  INVALID_FUNCTION_DECL, "Unknown  module: "  +  currInput.getName());  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,String)  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  JSError.make(t,  n,  INVALID_FUNCTION_DECL, "Unknown  module: "  +  currInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    JSError.make(t,  n,  INVALID_FUNCTION_DECL, "Unknown  module: "  +  currInput.getName());	  	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,String)	10	None	add
72	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currInput.getName()));  [CE]  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currInput.getName()));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currInput.getName()));	  	non-compiled	[CE]  	10	None	add
73	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( "   ");  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( "   ");  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalStateException(   "   ");    throw  new  IllegalStateException( "   ");	  	non-compiled	[CE]  unreachable  statement	3	None	add
74	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throw  new  IllegalStateException( "   ");  [CE]  not  a  statement  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throw  new  IllegalStateException( "   ");  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalStateException(   "   ");    Throw  new  IllegalStateException( "   ");	  	non-compiled	[CE]  not  a  statement	3	None	add
75	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [CE]  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalStateException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));	  	non-compiled	[CE]  	3	None	add
76	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [CE]  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalStateException(   "   ");    JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));	  	non-compiled	[CE]  	3	None	add
77	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [CE]  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalStateException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));	  	non-compiled	[CE]  	3	None	add
78	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [CE]  [FE]              RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalStateException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));	  	non-compiled	[CE]  	3	None	add
79	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  varName));  [CE]  [FE]                RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  varName));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalStateException(   "   ");    JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  varName));	  	non-compiled	[CE]  	3	None	add
80	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  throw  new  AssertionError( "Unknown  module:   "  +  currInput);  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  throw  new  AssertionError( "Unknown  module:   "  +  currInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    throw  new  AssertionError( "Unknown  module:   "  +  currInput);	  	non-compiled	[CE]  unreachable  statement	12	None	add
81	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  Throw  new  AssertionError( "Unknown  module:   "  +  currInput);  [CE]  not  a  statement  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  Throw  new  AssertionError( "Unknown  module:   "  +  currInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    Throw  new  AssertionError( "Unknown  module:   "  +  currInput);	  	non-compiled	[CE]  not  a  statement	12	None	add
82	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  NodeTraversal.traverse(compiler,  varInput,  null,  getSynthesizedExternsInput());  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,<null>,CompilerInput)  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  NodeTraversal.traverse(compiler,  varInput,  null,  getSynthesizedExternsInput());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    NodeTraversal.traverse(compiler,  varInput,  null,  getSynthesizedExternsInput());	  	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,<null>,CompilerInput)	12	None	add
83	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  String  varName  =  currInput.getString();  [CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  String  varName  =  currInput.getString();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    String  varName  =  currInput.getString();	  	non-compiled	[CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	12	None	add
84	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  JSError.make(t,  varInput,  currInput,  null,  getSynthesizedExternsInput()));  [CE]  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  JSError.make(t,  varInput,  currInput,  null,  getSynthesizedExternsInput()));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    JSError.make(t,  varInput,  currInput,  null,  getSynthesizedExternsInput()));	  	non-compiled	[CE]  	12	None	add
85	[BUG]  [BUGGY]      varsToDeclareInExternsRoot  =  currInput.getParent();  compiler.reportCodeChange();  [CE]  cannot  find  symbol  varsToDeclareInExternsRoot  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]      varsToDeclareInExternsRoot  =  currInput.getParent();  compiler.reportCodeChange();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	        varsToDeclareInExternsRoot  =  currInput.getParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  cannot  find  symbol  varsToDeclareInExternsRoot	14	None	add
86	[BUG]  [BUGGY]  throw  new  JSError( "Unknown  module: "  +  currInput,  varName);  [CE]  no  suitable  constructor  found  for  JSError(String,String)  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError( "Unknown  module: "  +  currInput,  varName);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError( "Unknown  module: "  +  currInput,  varName);	  throw    new    JSError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  no  suitable  constructor  found  for  JSError(String,String)	18	None	replace
87	[BUG]  [BUGGY]  throw  new  JSError( "Unknown  module: "  +  currInput,  varModule);  [CE]  cannot  find  symbol  varModule  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError( "Unknown  module: "  +  currInput,  varModule);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError( "Unknown  module: "  +  currInput,  varModule);	  throw    new    JSError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  cannot  find  symbol  varModule	18	None	replace
88	[BUG]  [BUGGY]  throw  new  JSError( "Unknown  module: "  +  currInput,  NAME_REFERENCE_IN_EXTERNS_ERROR);  [CE]  no  suitable  constructor  found  for  JSError(String,DiagnosticType)  [FE]              RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError( "Unknown  module: "  +  currInput,  NAME_REFERENCE_IN_EXTERNS_ERROR);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError( "Unknown  module: "  +  currInput,  NAME_REFERENCE_IN_EXTERNS_ERROR);	  throw    new    JSError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  no  suitable  constructor  found  for  JSError(String,DiagnosticType)	18	None	replace
89	[BUG]  [BUGGY]  Throwables.throw  new  JSError( "Unknown  module: "  +  currInput);  [CE]  <identifier>  expected  [FE]                RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  Throwables.throw  new  JSError( "Unknown  module: "  +  currInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	Throwables.throw  new  JSError( "Unknown  module: "  +  currInput);	  throw    new    JSError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
90	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  unreachable  statement	1	None	add
91	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalArgumentException(   "   ");    Throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  not  a  statement	1	None	add
92	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [CE]  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalArgumentException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));	  	non-compiled	[CE]  	1	None	add
93	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [CE]  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalArgumentException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));	  	non-compiled	[CE]  	1	None	add
94	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [CE]  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalArgumentException(   "   ");    JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));	  	non-compiled	[CE]  	1	None	add
95	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [CE]  [FE]              RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalArgumentException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));	  	non-compiled	[CE]  	1	None	add
96	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  varName));  [CE]  [FE]                RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  varName));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalArgumentException(   "   ");    JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  varName));	  	non-compiled	[CE]  	1	None	add
97	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  varInput;  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	add	varInput  =  varInput;	  varInput    =    currInput;    	compilable	  [FE]  RuntimeException  	17	5	replace
98	[BUG]  [BUGGY]  varInput  =  varInput;  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  varInput;  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput  =  varInput;	  varInput    =    currInput;    	compilable	  [FE]  RuntimeException  	17	5	replace
99	[BUG]  [BUGGY]  varInput  =  currInput.getInput();  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput.getInput();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput  =  currInput.getInput();	  varInput    =    currInput;    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
100	[BUG]  [BUGGY]  varInput  =  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput  =  currInput  ||  varInput  ==  null  ||  varInput  ==  null)  {	  varInput    =    currInput;    	non-compiled	[CE]  ';'  expected	17	None	replace
101	[BUG]  [BUGGY]  varInput  =  currInput  ||  varInput  ==  null  ||  varInput  ==  null);  [CE]  ';'  expected  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput  ||  varInput  ==  null  ||  varInput  ==  null);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput  =  currInput  ||  varInput  ==  null  ||  varInput  ==  null);	  varInput    =    currInput;    	non-compiled	[CE]  ';'  expected	17	None	replace
102	[BUG]  [BUGGY]  varInput  =  currInput  ||  varInput  ==  null  ||  varInput  ==  null;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput  ||  varInput  ==  null  ||  varInput  ==  null;  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput  =  currInput  ||  varInput  ==  null  ||  varInput  ==  null;	  varInput    =    currInput;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	17	None	replace
103	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [CE]  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));	  	non-compiled	[CE]  	12	None	add
104	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, "Unknown  module: "  +  currInput);  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,String)  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, "Unknown  module: "  +  currInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, "Unknown  module: "  +  currInput);	  	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,String)	12	None	add
105	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  JSError.make(t,  n,  INVALID_FUNCTION_DECL, "Unknown  module: "  +  currInput);  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,String)  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  JSError.make(t,  n,  INVALID_FUNCTION_DECL, "Unknown  module: "  +  currInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    JSError.make(t,  n,  INVALID_FUNCTION_DECL, "Unknown  module: "  +  currInput);	  	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,String)	12	None	add
106	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [CE]  cannot  find  symbol  currModule  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalStateException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);	  	non-compiled	[CE]  cannot  find  symbol  currModule	3	None	add
107	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, "   ");  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,String)  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, "   ");  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalStateException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, "   ");	  	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,String)	3	None	add
108	[BUG]  [BUGGY]  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  ';'  expected	4	None	replace
109	[BUG]  [BUGGY]  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, " "));  [CE]  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, " "));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, " "));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	4	None	replace
110	[BUG]  [BUGGY]  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  ';'  expected	4	None	replace
111	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));  [CE]  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    UnsupportedOperationException(   "   ");    JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));	  	non-compiled	[CE]  	5	None	add
112	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [CE]  cannot  find  symbol  currModule  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    UnsupportedOperationException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);	  	non-compiled	[CE]  cannot  find  symbol  currModule	5	None	add
113	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));  [CE]  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    RuntimeException(   "   ");    JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));	  	non-compiled	[CE]  	7	None	add
114	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [CE]  cannot  find  symbol  currModule  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    RuntimeException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);	  	non-compiled	[CE]  cannot  find  symbol  currModule	7	None	add
115	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, "   ");  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,String)  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, "   ");  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    RuntimeException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, "   ");	  	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,String)	7	None	add
116	[BUG]  [BUGGY]  varInput  =  currInput;  varInput  =  currInput  +  compiler.getModuleGraph().dependsOn(currModule,  varModule);  [CE]  cannot  find  symbol  currModule  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput  +  compiler.getModuleGraph().dependsOn(currModule,  varModule);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    varInput  =  currInput  +  compiler.getModuleGraph().dependsOn(currModule,  varModule);	  	non-compiled	[CE]  cannot  find  symbol  currModule	16	None	add
117	[BUG]  [BUGGY]  varInput  =  currInput;  varInput  =  currInput  +  nameRefInExternsCheck.dependsOn(currModule,  varModule);  [CE]  cannot  find  symbol  currModule  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput  +  nameRefInExternsCheck.dependsOn(currModule,  varModule);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    varInput  =  currInput  +  nameRefInExternsCheck.dependsOn(currModule,  varModule);	  	non-compiled	[CE]  cannot  find  symbol  currModule	16	None	add
118	[BUG]  [BUGGY]  varInput  =  currInput;  varInput  =  currInput  +  nameRefInExternsCheck.dependsOn(currModule,  varName);  [CE]  cannot  find  symbol  currModule  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput  +  nameRefInExternsCheck.dependsOn(currModule,  varName);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    varInput  =  currInput  +  nameRefInExternsCheck.dependsOn(currModule,  varName);	  	non-compiled	[CE]  cannot  find  symbol  currModule	16	None	add
119	[BUG]  [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput  ==  null)  {  varInput  =  currInput;  }  [CE]  illegal  start  of  type  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput  ==  null)  {  varInput  =  currInput;  }  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    varInput  =  currInput;  }  else  if(currInput  ==  null)  {  varInput  =  currInput;  }	  	non-compiled	[CE]  illegal  start  of  type	16	None	add
120	[BUG]  [BUGGY]  varInput  =  currInput;  varInput  =  currInput  +  compiler.getModuleGraph().dependsOn(currModule,  varName);  [CE]  cannot  find  symbol  currModule  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput  +  compiler.getModuleGraph().dependsOn(currModule,  varName);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    varInput  =  currInput  +  compiler.getModuleGraph().dependsOn(currModule,  varName);	  	non-compiled	[CE]  cannot  find  symbol  currModule	16	None	add
121	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput  ==  null  &&  currInput!=  null)  {  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	add	varInput    =    currInput;    varInput  =  currInput;  }  else  if(currInput  ==  null  &&  currInput!=  null)  {	  	compilable	  [FE]  RuntimeException  	16	5	add
122	[BUG]  [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput  ==  null  &&  currInput!=  null)  {  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput;  }  else  if(currInput  ==  null  &&  currInput!=  null)  {  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    varInput  =  currInput;  }  else  if(currInput  ==  null  &&  currInput!=  null)  {	  	compilable	  [FE]  RuntimeException  	16	5	add
123	[BUG]  [BUGGY]  varInput  =  currInput;  varInput  =  currInput  +  compiler.getModuleGraph().dependsOn(currModule,  varModule));  [CE]  ';'  expected  [FE]                RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  varInput  =  currInput  +  compiler.getModuleGraph().dependsOn(currModule,  varModule));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    varInput  =  currInput  +  compiler.getModuleGraph().dependsOn(currModule,  varModule));	  	non-compiled	[CE]  ';'  expected	16	None	add
124	[BUG]  [BUGGY]  throw  new  JSError(t,  NAME_REFERENCE_IN_EXTERNS_ERROR, "Unknown  module: "  +  currInput);  [CE]  no  suitable  constructor  found  for  JSError(NodeTraversal,DiagnosticType,String)  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError(t,  NAME_REFERENCE_IN_EXTERNS_ERROR, "Unknown  module: "  +  currInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError(t,  NAME_REFERENCE_IN_EXTERNS_ERROR, "Unknown  module: "  +  currInput);	  throw    new    JSError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  no  suitable  constructor  found  for  JSError(NodeTraversal,DiagnosticType,String)	18	None	replace
125	[BUG]  [BUGGY]  throw  new  JSError(JSError.make(t,  varName,  currInput),  NAME_REFERENCE_IN_EXTERNS_ERROR);  [CE]  no  suitable  method  found  for  make(NodeTraversal,String,CompilerInput)  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError(JSError.make(t,  varName,  currInput),  NAME_REFERENCE_IN_EXTERNS_ERROR);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError(JSError.make(t,  varName,  currInput),  NAME_REFERENCE_IN_EXTERNS_ERROR);	  throw    new    JSError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,String,CompilerInput)	18	None	replace
126	[BUG]  [BUGGY]  JSError  t  =  new  JSError( "Unknown  module: "  +  currInput);  [CE]  variable  t  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]              RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  JSError  t  =  new  JSError( "Unknown  module: "  +  currInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	JSError  t  =  new  JSError( "Unknown  module: "  +  currInput);	  throw    new    JSError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  variable  t  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	18	None	replace
127	[BUG]  [BUGGY]  throw  new  JSError( "Unknown  module: "  +  varName);  [CE]  no  suitable  constructor  found  for  JSError(String)  [FE]                RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError( "Unknown  module: "  +  varName);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError( "Unknown  module: "  +  varName);	  throw    new    JSError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  no  suitable  constructor  found  for  JSError(String)	18	None	replace
128	[BUG]  [BUGGY]      varsToDeclareInExterns  =  currInput.getParent();  compiler.reportCodeChange();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]      varsToDeclareInExterns  =  currInput.getParent();  compiler.reportCodeChange();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	        varsToDeclareInExterns  =  currInput.getParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
129	[BUG]  [BUGGY]      varsToDeclareInExternsRoot  =  compiler.getSynthesizedExternsRoot();  [CE]  cannot  find  symbol  varsToDeclareInExternsRoot  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]      varsToDeclareInExternsRoot  =  compiler.getSynthesizedExternsRoot();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	        varsToDeclareInExternsRoot  =  compiler.getSynthesizedExternsRoot();	  	non-compiled	[CE]  cannot  find  symbol  varsToDeclareInExternsRoot	14	None	add
130	[BUG]  [BUGGY]      varsToDeclareInExterns  =  currInput.getSynthesizedExterns();  getSynthesizedExternsInput();  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]      varsToDeclareInExterns  =  currInput.getSynthesizedExterns();  getSynthesizedExternsInput();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	        varsToDeclareInExterns  =  currInput.getSynthesizedExterns();  getSynthesizedExternsInput();	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
131	[BUG]  [BUGGY]      varModule  =  currInput.getModule();  [CE]  cannot  find  symbol  varModule  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]      varModule  =  currInput.getModule();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	        varModule  =  currInput.getModule();	  	non-compiled	[CE]  cannot  find  symbol  varModule	14	None	add
132	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  varInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	add	throw  new  AssertionError( "Unknown  module: "  +  varInput.getName());	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    	compilable	  [FE]  RuntimeException  	11	42	replace
133	[BUG]  [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  varInput.getName());  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  varInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  AssertionError( "Unknown  module: "  +  varInput.getName());	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    	compilable	  [FE]  RuntimeException  	11	42	replace
134	[BUG]  [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput.getName(),  NAME_REFERENCE_IN_EXTERNS_ERROR);  [CE]  no  suitable  constructor  found  for  AssertionError(String,DiagnosticType)  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput.getName(),  NAME_REFERENCE_IN_EXTERNS_ERROR);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  AssertionError( "Unknown  module: "  +  currInput.getName(),  NAME_REFERENCE_IN_EXTERNS_ERROR);	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  no  suitable  constructor  found  for  AssertionError(String,DiagnosticType)	11	None	replace
135	[BUG]  [BUGGY]  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  ';'  expected	6	None	replace
136	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  JSError.error( "Unknown  module:   "  +  currInput.getName());  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  JSError.error( "Unknown  module:   "  +  currInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    JSError.error( "Unknown  module:   "  +  currInput.getName());	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
137	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  String  varName  =  currInput.getName();  [CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  String  varName  =  currInput.getName();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    String  varName  =  currInput.getName();	  	non-compiled	[CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	10	None	add
138	[BUG]  [BUGGY]  throw  new  JSError(t,  NAME_REFERENCE_IN_EXTERNS_ERROR, "Unknown  module: "  +  currInput.getName());  [CE]  no  suitable  constructor  found  for  JSError(NodeTraversal,DiagnosticType,String)  [FE]                RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError(t,  NAME_REFERENCE_IN_EXTERNS_ERROR, "Unknown  module: "  +  currInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError(t,  NAME_REFERENCE_IN_EXTERNS_ERROR, "Unknown  module: "  +  currInput.getName());	  throw    new    JSError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  no  suitable  constructor  found  for  JSError(NodeTraversal,DiagnosticType,String)	9	None	replace
139	[BUG]  [BUGGY]  JSError  t  =  new  JSError( "Unknown  module: "  +  currInput.getName());  [CE]  variable  t  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  JSError  t  =  new  JSError( "Unknown  module: "  +  currInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	JSError  t  =  new  JSError( "Unknown  module: "  +  currInput.getName());	  throw    new    JSError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  variable  t  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	9	None	replace
140	[BUG]  [BUGGY]  throw  new  JSError( "Unknown  module: "  +  currInput.getName(),  varModule);  [CE]  cannot  find  symbol  varModule  [FE]                    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError( "Unknown  module: "  +  currInput.getName(),  varModule);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError( "Unknown  module: "  +  currInput.getName(),  varModule);	  throw    new    JSError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  cannot  find  symbol  varModule	9	None	replace
141	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  new  AssertionError( "Unknown  module: "  +  currInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	add	new  AssertionError( "Unknown  module: "  +  currInput);	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    	compilable	  [FE]  RuntimeException  	13	5	replace
142	[BUG]  [BUGGY]  new  AssertionError( "Unknown  module: "  +  currInput);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  new  AssertionError( "Unknown  module: "  +  currInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	new  AssertionError( "Unknown  module: "  +  currInput);	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    	compilable	  [FE]  RuntimeException  	13	5	replace
143	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [CE]  cannot  find  symbol  currModule  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalArgumentException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);	  	non-compiled	[CE]  cannot  find  symbol  currModule	1	None	add
144	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, "   ");  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,String)  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, "   ");  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalArgumentException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, "   ");	  	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,String)	1	None	add
145	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));  [CE]  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalStateException(   "   ");    JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));	  	non-compiled	[CE]  	3	None	add
146	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException( "Unknown  module: "  +  currInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	add	throw  new  RuntimeException( "Unknown  module: "  +  currInput);	  throw    new    RuntimeException(   "   ");    	compilable	  [FE]  RuntimeException  	8	42	replace
147	[BUG]  [BUGGY]  throw  new  RuntimeException( "Unknown  module: "  +  currInput);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException( "Unknown  module: "  +  currInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  RuntimeException( "Unknown  module: "  +  currInput);	  throw    new    RuntimeException(   "   ");    	compilable	  [FE]  RuntimeException  	8	42	replace
148	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException( "Unknown  module: "  +  currInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	add	throw  new  RuntimeException( "Unknown  module: "  +  currInput.getName());	  throw    new    RuntimeException(   "   ");    	compilable	  [FE]  RuntimeException  	8	42	replace
149	[BUG]  [BUGGY]  throw  new  RuntimeException( "Unknown  module: "  +  currInput.getName());  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException( "Unknown  module: "  +  currInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  RuntimeException( "Unknown  module: "  +  currInput.getName());	  throw    new    RuntimeException(   "   ");    	compilable	  [FE]  RuntimeException  	8	42	replace
150	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException( "Unknown  module: "  +  varName);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	add	throw  new  RuntimeException( "Unknown  module: "  +  varName);	  throw    new    RuntimeException(   "   ");    	compilable	  [FE]  RuntimeException  	8	42	replace
151	[BUG]  [BUGGY]  throw  new  RuntimeException( "Unknown  module: "  +  varName);  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException( "Unknown  module: "  +  varName);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  RuntimeException( "Unknown  module: "  +  varName);	  throw    new    RuntimeException(   "   ");    	compilable	  [FE]  RuntimeException  	8	42	replace
152	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  STRICT_MODULE_DEP_ERROR,  currInput));  [CE]  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  RuntimeException(   "   ");  JSError.make(t,  n,  STRICT_MODULE_DEP_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    RuntimeException(   "   ");    JSError.make(t,  n,  STRICT_MODULE_DEP_ERROR,  currInput));	  	non-compiled	[CE]  	7	None	add
153	[BUG]  [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput,  varInput);  [CE]  no  suitable  constructor  found  for  AssertionError(String,CompilerInput)  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput,  varInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  AssertionError( "Unknown  module: "  +  currInput,  varInput);	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  no  suitable  constructor  found  for  AssertionError(String,CompilerInput)	13	None	replace
154	[BUG]  [BUGGY]  Throw  new  AssertionError( "Unknown  module: "  +  currInput);  [CE]  not  a  statement  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  Throw  new  AssertionError( "Unknown  module: "  +  currInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	Throw  new  AssertionError( "Unknown  module: "  +  currInput);	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  not  a  statement	13	None	replace
155	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [CE]  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput);  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput);    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));	  	non-compiled	[CE]  	12	None	add
156	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,String)  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  t.report(JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	t.report(JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,String)	4	None	replace
157	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,CompilerInput)  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  t.report(JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	t.report(JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,CompilerInput)	4	None	replace
158	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR));  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType)  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  t.report(JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	t.report(JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType)	4	None	replace
159	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR));  [CE]  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    UnsupportedOperationException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR));	  	non-compiled	[CE]  	5	None	add
160	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));  [CE]  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalArgumentException(   "   ");    JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));	  	non-compiled	[CE]  	1	None	add
161	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR));  [CE]  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    IllegalArgumentException(   "   ");    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR));	  	non-compiled	[CE]  	1	None	add
162	[BUG]  [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput.getName(),  MISSING_MODULE_DEP_ERROR);  [CE]  no  suitable  constructor  found  for  AssertionError(String,DiagnosticType)  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput.getName(),  MISSING_MODULE_DEP_ERROR);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  AssertionError( "Unknown  module: "  +  currInput.getName(),  MISSING_MODULE_DEP_ERROR);	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  no  suitable  constructor  found  for  AssertionError(String,DiagnosticType)	11	None	replace
163	[BUG]  [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput.getName(),  varInput);  [CE]  no  suitable  constructor  found  for  AssertionError(String,CompilerInput)  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError( "Unknown  module: "  +  currInput.getName(),  varInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  AssertionError( "Unknown  module: "  +  currInput.getName(),  varInput);	  throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  no  suitable  constructor  found  for  AssertionError(String,CompilerInput)	11	None	replace
164	[BUG]  [BUGGY]  t.report(JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR));  [CE]  cannot  find  symbol  currModule  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  t.report(JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	t.report(JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR));	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  currModule	6	None	replace
165	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [CE]  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput));	  	non-compiled	[CE]  	10	None	add
166	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput.getName()));  [CE]  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput.getName()));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput.getName()));	  	non-compiled	[CE]  	10	None	add
167	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [CE]  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));	  	non-compiled	[CE]  	10	None	add
168	[BUG]  [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  AssertionError(   "Unknown  module:   "  +  currInput.getName());  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw    new    AssertionError(   "Unknown    module:   "    +    currInput.getName());    JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();	  	non-compiled	[CE]  unreachable  statement	10	None	add
169	[BUG]  [BUGGY]  throw  new  JSError(t,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName);  [CE]  no  suitable  constructor  found  for  JSError(NodeTraversal,DiagnosticType,String)  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError(t,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError(t,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName);	  throw    new    JSError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  no  suitable  constructor  found  for  JSError(NodeTraversal,DiagnosticType,String)	18	None	replace
170	[BUG]  [BUGGY]  throw  new  JSError(t,   "Unknown  module: "  +  currInput);  [CE]  no  suitable  constructor  found  for  JSError(NodeTraversal,String)  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError(t,   "Unknown  module: "  +  currInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError(t,   "Unknown  module: "  +  currInput);	  throw    new    JSError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  no  suitable  constructor  found  for  JSError(NodeTraversal,String)	18	None	replace
171	[BUG]  [BUGGY]  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [CE]  ';'  expected  [FE]              RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName));	  throw    new    JSError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  ';'  expected	18	None	replace
172	[BUG]  [BUGGY]  throw  new  JSError(t.getMessage(),  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName);  [CE]  cannot  find  symbol  [FE]                RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError(t.getMessage(),  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError(t.getMessage(),  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName);	  throw    new    JSError(   "Unknown    module:   "    +    currInput);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
173	[BUG]  [BUGGY]      varsToDeclareInExterns  =  currInput.getParent();  getSynthesizedExternsInput();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]      varsToDeclareInExterns  =  currInput.getParent();  getSynthesizedExternsInput();  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	        varsToDeclareInExterns  =  currInput.getParent();  getSynthesizedExternsInput();	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
174	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck());  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,VarCheck.NameRefInExternsCheck)  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]      NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	        NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck());	  	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,VarCheck.NameRefInExternsCheck)	14	None	add
175	[BUG]  [BUGGY]  throw  new  JSError(t,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput.getName());  [CE]  no  suitable  constructor  found  for  JSError(NodeTraversal,DiagnosticType,String)  [FE]                RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError(t,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError(t,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput.getName());	  throw    new    JSError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  no  suitable  constructor  found  for  JSError(NodeTraversal,DiagnosticType,String)	9	None	replace
176	[BUG]  [BUGGY]  throw  new  JSError(t,   "Unknown  module: "  +  currInput.getName());  [CE]  no  suitable  constructor  found  for  JSError(NodeTraversal,String)  [FE]                  RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError(t,   "Unknown  module: "  +  currInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError(t,   "Unknown  module: "  +  currInput.getName());	  throw    new    JSError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  no  suitable  constructor  found  for  JSError(NodeTraversal,String)	9	None	replace
177	[BUG]  [BUGGY]  throw  new  JSError(t.getMessage(),  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput);  [CE]  cannot  find  symbol  [FE]                    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  throw  new  JSError(t.getMessage(),  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	throw  new  JSError(t.getMessage(),  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput);	  throw    new    JSError(   "Unknown    module:   "    +    currInput.getName());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
178	[BUG]  [BUGGY]  varInput  =  currInput;  ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName);  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName);	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
179	[BUG]  [BUGGY]  varInput  =  currInput;  ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR);  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR);  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR);	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
180	[BUG]  [BUGGY]  varInput  =  currInput;  ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  getSynthesizedExternsInput());  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  getSynthesizedExternsInput());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  getSynthesizedExternsInput());	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
181	[BUG]  [BUGGY]  varInput  =  currInput;  ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  getSynthesizedExternsInput()  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  getSynthesizedExternsInput()  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  getSynthesizedExternsInput()	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
182	[BUG]  [BUGGY]  varInput  =  currInput;  ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, "Unknown  type "  +  currInput.getName());  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, "Unknown  type "  +  currInput.getName());  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR, "Unknown  type "  +  currInput.getName());	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
183	[BUG]  [BUGGY]  varInput  =  currInput;  ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  getSynthesizedExterns  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]    null,  getSynthesizedExternsInput());  }  }  return;  }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {      [BUGGY]  varInput  =  currInput;  ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  getSynthesizedExterns  [BUGGY]    }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	varInput    =    currInput;    ||  currInput  ==  null  ||  varInput  ==  null)  {  reportError(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  getSynthesizedExterns	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
