bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] createSynthesizedExternVar(varName); [FE] RuntimeException [CONTEXT] if ((parent.getType() == Token.VAR || NodeUtil.isFunctionDeclaration(parent)) && varsToDeclareInExterns.contains(varName)) { [BUGGY] createSynthesizedExternVar(varName); [BUGGY]  n.addSuppression("duplicate"); } [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.5962847939999439	137	137	5	replace	
2	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] if ((parent.getType() == Token.VAR || NodeUtil.isFunctionDeclaration(parent)) && varsToDeclareInExterns.contains(varName)) { [BUGGY] [BUGGY] createSynthesizedExternVar(varName); n.addSuppression("duplicate"); } [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.5962847939999439	137	137	5	add	
3	[BUG] [BUGGY] n.addSuppression("duplicate"); [FE] RuntimeException [CONTEXT] if ((parent.getType() == Token.VAR || NodeUtil.isFunctionDeclaration(parent)) && varsToDeclareInExterns.contains(varName)) { createSynthesizedExternVar(varName); [BUGGY] n.addSuppression("duplicate"); [BUGGY] } [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.5962847939999439	139	139	5	replace	
4	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] if ((parent.getType() == Token.VAR || NodeUtil.isFunctionDeclaration(parent)) && varsToDeclareInExterns.contains(varName)) { createSynthesizedExternVar(varName); [BUGGY] [BUGGY] n.addSuppression("duplicate"); } [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.5962847939999439	139	139	5	add	
5	[BUG] [BUGGY] Node nameNode = Node.newString(Token.NAME, varName); [FE] RuntimeException [CONTEXT] private void createSynthesizedExternVar(String varName) { [BUGGY] Node nameNode = Node.newString(Token.NAME, varName); [BUGGY]        if (compiler.getCodingConvention().isConstant(varName)) { nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true); } [CLASS] VarCheck NameRefInExternsCheck [METHOD] createSynthesizedExternVar [RETURN_TYPE] void  String varName [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	206	206	5	replace	
6	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] private void createSynthesizedExternVar(String varName) { [BUGGY] [BUGGY] Node nameNode = Node.newString(Token.NAME, varName);       if (compiler.getCodingConvention().isConstant(varName)) { nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true); } [CLASS] VarCheck NameRefInExternsCheck [METHOD] createSynthesizedExternVar [RETURN_TYPE] void  String varName [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	206	206	5	add	
7	[BUG] [BUGGY] if (compiler.getCodingConvention().isConstant(varName)) { [FE] RuntimeException [CONTEXT] private void createSynthesizedExternVar(String varName) { Node nameNode = Node.newString(Token.NAME, varName);       [BUGGY] if (compiler.getCodingConvention().isConstant(varName)) { [BUGGY] nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true); } getSynthesizedExternsRoot().addChildToBack( new Node(Token.VAR, nameNode)); varsToDeclareInExterns.remove(varName); } [CLASS] VarCheck NameRefInExternsCheck [METHOD] createSynthesizedExternVar [RETURN_TYPE] void  String varName [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	214	214	5	replace	
8	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] private void createSynthesizedExternVar(String varName) { Node nameNode = Node.newString(Token.NAME, varName);       [BUGGY] [BUGGY] if (compiler.getCodingConvention().isConstant(varName)) { nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true); } getSynthesizedExternsRoot().addChildToBack( new Node(Token.VAR, nameNode)); varsToDeclareInExterns.remove(varName); } [CLASS] VarCheck NameRefInExternsCheck [METHOD] createSynthesizedExternVar [RETURN_TYPE] void  String varName [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	214	214	5	add	
9	[BUG] [BUGGY] getSynthesizedExternsRoot().addChildToBack( new Node(Token.VAR, nameNode)); [FE] RuntimeException [CONTEXT]       if (compiler.getCodingConvention().isConstant(varName)) { nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true); } [BUGGY] getSynthesizedExternsRoot().addChildToBack(  new Node(Token.VAR, nameNode)); [BUGGY] new Node(Token.VAR, nameNode)); varsToDeclareInExterns.remove(varName); } [CLASS] VarCheck NameRefInExternsCheck [METHOD] createSynthesizedExternVar [RETURN_TYPE] void  String varName [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	218	219	5	replace	
10	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT]       if (compiler.getCodingConvention().isConstant(varName)) { nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true); } [BUGGY] [BUGGY] getSynthesizedExternsRoot().addChildToBack(  new Node(Token.VAR, nameNode)); new Node(Token.VAR, nameNode)); varsToDeclareInExterns.remove(varName); } [CLASS] VarCheck NameRefInExternsCheck [METHOD] createSynthesizedExternVar [RETURN_TYPE] void  String varName [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	218	219	5	add	
11	[BUG] [BUGGY] varsToDeclareInExterns.remove(varName); [FE] RuntimeException [CONTEXT]     if (compiler.getCodingConvention().isConstant(varName)) { nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true); } getSynthesizedExternsRoot().addChildToBack( new Node(Token.VAR, nameNode)); [BUGGY] varsToDeclareInExterns.remove(varName); [BUGGY] } [CLASS] VarCheck NameRefInExternsCheck [METHOD] createSynthesizedExternVar [RETURN_TYPE] void  String varName [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	
12	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT]     if (compiler.getCodingConvention().isConstant(varName)) { nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true); } getSynthesizedExternsRoot().addChildToBack( new Node(Token.VAR, nameNode)); [BUGGY] [BUGGY] varsToDeclareInExterns.remove(varName); } [CLASS] VarCheck NameRefInExternsCheck [METHOD] createSynthesizedExternVar [RETURN_TYPE] void  String varName [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	
13	[BUG] [BUGGY] } [FE] RuntimeException [CONTEXT]    if (compiler.getCodingConvention().isConstant(varName)) { nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true); } getSynthesizedExternsRoot().addChildToBack( new Node(Token.VAR, nameNode)); varsToDeclareInExterns.remove(varName); [BUGGY] } [BUGGY]  [CLASS] VarCheck NameRefInExternsCheck [METHOD] createSynthesizedExternVar [RETURN_TYPE] void  String varName [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	221	221	5	replace	
14	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT]    if (compiler.getCodingConvention().isConstant(varName)) { nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true); } getSynthesizedExternsRoot().addChildToBack( new Node(Token.VAR, nameNode)); varsToDeclareInExterns.remove(varName); [BUGGY] [BUGGY] } [CLASS] VarCheck NameRefInExternsCheck [METHOD] createSynthesizedExternVar [RETURN_TYPE] void  String varName [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	221	221	5	add	
15	[BUG] [BUGGY] if (synthesizedExternsInput == null) { [FE] RuntimeException [CONTEXT] private CompilerInput getSynthesizedExternsInput() { [BUGGY] if (synthesizedExternsInput == null) { [BUGGY] synthesizedExternsInput = compiler.newExternInput("{SyntheticVarsDeclar}"); } return synthesizedExternsInput; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] getSynthesizedExternsInput [RETURN_TYPE] CompilerInput  [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	262	262	5	replace	
16	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] private CompilerInput getSynthesizedExternsInput() { [BUGGY] [BUGGY] if (synthesizedExternsInput == null) { synthesizedExternsInput = compiler.newExternInput("{SyntheticVarsDeclar}"); } return synthesizedExternsInput; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] getSynthesizedExternsInput [RETURN_TYPE] CompilerInput  [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	262	262	5	add	
17	[BUG] [BUGGY] synthesizedExternsInput = compiler.newExternInput("{SyntheticVarsDeclar}"); [FE] RuntimeException [CONTEXT] private CompilerInput getSynthesizedExternsInput() { if (synthesizedExternsInput == null) { [BUGGY] synthesizedExternsInput =   compiler.newExternInput("{SyntheticVarsDeclar}"); [BUGGY] compiler.newExternInput("{SyntheticVarsDeclar}"); } return synthesizedExternsInput; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] getSynthesizedExternsInput [RETURN_TYPE] CompilerInput  [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	263	264	5	replace	
18	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] private CompilerInput getSynthesizedExternsInput() { if (synthesizedExternsInput == null) { [BUGGY] [BUGGY] synthesizedExternsInput =   compiler.newExternInput("{SyntheticVarsDeclar}"); compiler.newExternInput("{SyntheticVarsDeclar}"); } return synthesizedExternsInput; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] getSynthesizedExternsInput [RETURN_TYPE] CompilerInput  [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	263	264	5	add	
19	[BUG] [BUGGY] return synthesizedExternsInput; [FE] RuntimeException [CONTEXT] private CompilerInput getSynthesizedExternsInput() { if (synthesizedExternsInput == null) { synthesizedExternsInput = compiler.newExternInput("{SyntheticVarsDeclar}"); } [BUGGY] return synthesizedExternsInput; [BUGGY] } [CLASS] VarCheck NameRefInExternsCheck [METHOD] getSynthesizedExternsInput [RETURN_TYPE] CompilerInput  [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	266	266	5	replace	
20	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] private CompilerInput getSynthesizedExternsInput() { if (synthesizedExternsInput == null) { synthesizedExternsInput = compiler.newExternInput("{SyntheticVarsDeclar}"); } [BUGGY] [BUGGY] return synthesizedExternsInput; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] getSynthesizedExternsInput [RETURN_TYPE] CompilerInput  [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	266	266	5	add	
21	[BUG] [BUGGY] if (synthesizedExternsRoot == null) { [FE] RuntimeException [CONTEXT] private Node getSynthesizedExternsRoot() { [BUGGY] if (synthesizedExternsRoot == null) { [BUGGY] CompilerInput synthesizedExterns = getSynthesizedExternsInput(); synthesizedExternsRoot = synthesizedExterns.getAstRoot(compiler); } return synthesizedExternsRoot; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] getSynthesizedExternsRoot [RETURN_TYPE] Node  [VARIABLES] CompilerInput currInput synthesizedExterns synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	271	271	5	replace	
22	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] private Node getSynthesizedExternsRoot() { [BUGGY] [BUGGY] if (synthesizedExternsRoot == null) { CompilerInput synthesizedExterns = getSynthesizedExternsInput(); synthesizedExternsRoot = synthesizedExterns.getAstRoot(compiler); } return synthesizedExternsRoot; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] getSynthesizedExternsRoot [RETURN_TYPE] Node  [VARIABLES] CompilerInput currInput synthesizedExterns synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	271	271	5	add	
23	[BUG] [BUGGY] CompilerInput synthesizedExterns = getSynthesizedExternsInput(); [FE] RuntimeException [CONTEXT] private Node getSynthesizedExternsRoot() { if (synthesizedExternsRoot == null) { [BUGGY] CompilerInput synthesizedExterns = getSynthesizedExternsInput(); [BUGGY] synthesizedExternsRoot = synthesizedExterns.getAstRoot(compiler); } return synthesizedExternsRoot; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] getSynthesizedExternsRoot [RETURN_TYPE] Node  [VARIABLES] CompilerInput currInput synthesizedExterns synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	272	272	5	replace	
24	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] private Node getSynthesizedExternsRoot() { if (synthesizedExternsRoot == null) { [BUGGY] [BUGGY] CompilerInput synthesizedExterns = getSynthesizedExternsInput(); synthesizedExternsRoot = synthesizedExterns.getAstRoot(compiler); } return synthesizedExternsRoot; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] getSynthesizedExternsRoot [RETURN_TYPE] Node  [VARIABLES] CompilerInput currInput synthesizedExterns synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	272	272	5	add	
25	[BUG] [BUGGY] synthesizedExternsRoot = synthesizedExterns.getAstRoot(compiler); [FE] RuntimeException [CONTEXT] private Node getSynthesizedExternsRoot() { if (synthesizedExternsRoot == null) { CompilerInput synthesizedExterns = getSynthesizedExternsInput(); [BUGGY] synthesizedExternsRoot = synthesizedExterns.getAstRoot(compiler); [BUGGY] } return synthesizedExternsRoot; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] getSynthesizedExternsRoot [RETURN_TYPE] Node  [VARIABLES] CompilerInput currInput synthesizedExterns synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	273	273	5	replace	
26	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] private Node getSynthesizedExternsRoot() { if (synthesizedExternsRoot == null) { CompilerInput synthesizedExterns = getSynthesizedExternsInput(); [BUGGY] [BUGGY] synthesizedExternsRoot = synthesizedExterns.getAstRoot(compiler); } return synthesizedExternsRoot; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] getSynthesizedExternsRoot [RETURN_TYPE] Node  [VARIABLES] CompilerInput currInput synthesizedExterns synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	273	273	5	add	
27	[BUG] [BUGGY] return synthesizedExternsRoot; [FE] RuntimeException [CONTEXT] private Node getSynthesizedExternsRoot() { if (synthesizedExternsRoot == null) { CompilerInput synthesizedExterns = getSynthesizedExternsInput(); synthesizedExternsRoot = synthesizedExterns.getAstRoot(compiler); } [BUGGY] return synthesizedExternsRoot; [BUGGY] } [CLASS] VarCheck NameRefInExternsCheck [METHOD] getSynthesizedExternsRoot [RETURN_TYPE] Node  [VARIABLES] CompilerInput currInput synthesizedExterns synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	275	275	5	replace	
28	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] private Node getSynthesizedExternsRoot() { if (synthesizedExternsRoot == null) { CompilerInput synthesizedExterns = getSynthesizedExternsInput(); synthesizedExternsRoot = synthesizedExterns.getAstRoot(compiler); } [BUGGY] [BUGGY] return synthesizedExternsRoot; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] getSynthesizedExternsRoot [RETURN_TYPE] Node  [VARIABLES] CompilerInput currInput synthesizedExterns synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs n nameNode parent root synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	275	275	5	add	
29	[BUG] [BUGGY] JSModule currModule = currInput.getModule(); [FE] RuntimeException [CONTEXT] } CompilerInput currInput = t.getInput(); CompilerInput varInput = var.input; if (currInput == varInput || currInput == null || varInput == null) {  return; }  [BUGGY] JSModule currModule = currInput.getModule(); [BUGGY] JSModule varModule = varInput.getModule(); JSModuleGraph moduleGraph = compiler.getModuleGraph(); if (varModule != currModule && varModule != null && currModule != null) { if (moduleGraph.dependsOn(currModule, varModule)) {  } else { if (!sanityCheck && scope.isGlobal()) { if (moduleGraph.dependsOn(varModule, currModule)) {  t.report(n, VIOLATED_MODULE_DEP_ERROR, [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	
30	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] } CompilerInput currInput = t.getInput(); CompilerInput varInput = var.input; if (currInput == varInput || currInput == null || varInput == null) {  return; }  [BUGGY] [BUGGY] JSModule currModule = currInput.getModule(); JSModule varModule = varInput.getModule(); JSModuleGraph moduleGraph = compiler.getModuleGraph(); if (varModule != currModule && varModule != null && currModule != null) { if (moduleGraph.dependsOn(currModule, varModule)) {  } else { if (!sanityCheck && scope.isGlobal()) { if (moduleGraph.dependsOn(varModule, currModule)) {  t.report(n, VIOLATED_MODULE_DEP_ERROR, [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	add	
31	[BUG] [BUGGY] JSModule varModule = varInput.getModule(); [FE] RuntimeException [CONTEXT] CompilerInput currInput = t.getInput(); CompilerInput varInput = var.input; if (currInput == varInput || currInput == null || varInput == null) {  return; }  JSModule currModule = currInput.getModule(); [BUGGY] JSModule varModule = varInput.getModule(); [BUGGY] JSModuleGraph moduleGraph = compiler.getModuleGraph(); if (varModule != currModule && varModule != null && currModule != null) { if (moduleGraph.dependsOn(currModule, varModule)) {  } else { if (!sanityCheck && scope.isGlobal()) { if (moduleGraph.dependsOn(varModule, currModule)) {  t.report(n, VIOLATED_MODULE_DEP_ERROR, currModule.getName(), varModule.getName(), varName); [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	175	175	5	replace	
32	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] CompilerInput currInput = t.getInput(); CompilerInput varInput = var.input; if (currInput == varInput || currInput == null || varInput == null) {  return; }  JSModule currModule = currInput.getModule(); [BUGGY] [BUGGY] JSModule varModule = varInput.getModule(); JSModuleGraph moduleGraph = compiler.getModuleGraph(); if (varModule != currModule && varModule != null && currModule != null) { if (moduleGraph.dependsOn(currModule, varModule)) {  } else { if (!sanityCheck && scope.isGlobal()) { if (moduleGraph.dependsOn(varModule, currModule)) {  t.report(n, VIOLATED_MODULE_DEP_ERROR, currModule.getName(), varModule.getName(), varName); [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	175	175	5	add	
33	[BUG] [BUGGY] JSModuleGraph moduleGraph = compiler.getModuleGraph(); [FE] RuntimeException [CONTEXT] CompilerInput currInput = t.getInput(); CompilerInput varInput = var.input; if (currInput == varInput || currInput == null || varInput == null) {  return; }  JSModule currModule = currInput.getModule(); JSModule varModule = varInput.getModule(); [BUGGY] JSModuleGraph moduleGraph = compiler.getModuleGraph(); [BUGGY] if (varModule != currModule && varModule != null && currModule != null) { if (moduleGraph.dependsOn(currModule, varModule)) {  } else { if (!sanityCheck && scope.isGlobal()) { if (moduleGraph.dependsOn(varModule, currModule)) {  t.report(n, VIOLATED_MODULE_DEP_ERROR, currModule.getName(), varModule.getName(), varName); } else { [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	
34	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] CompilerInput currInput = t.getInput(); CompilerInput varInput = var.input; if (currInput == varInput || currInput == null || varInput == null) {  return; }  JSModule currModule = currInput.getModule(); JSModule varModule = varInput.getModule(); [BUGGY] [BUGGY] JSModuleGraph moduleGraph = compiler.getModuleGraph(); if (varModule != currModule && varModule != null && currModule != null) { if (moduleGraph.dependsOn(currModule, varModule)) {  } else { if (!sanityCheck && scope.isGlobal()) { if (moduleGraph.dependsOn(varModule, currModule)) {  t.report(n, VIOLATED_MODULE_DEP_ERROR, currModule.getName(), varModule.getName(), varName); } else { [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	add	
35	[BUG] [BUGGY] if (varModule != currModule && varModule != null && currModule != null) { [FE] RuntimeException [CONTEXT] CompilerInput varInput = var.input; if (currInput == varInput || currInput == null || varInput == null) {  return; }  JSModule currModule = currInput.getModule(); JSModule varModule = varInput.getModule(); JSModuleGraph moduleGraph = compiler.getModuleGraph(); [BUGGY] if (varModule != currModule && varModule != null && currModule != null) { [BUGGY] if (moduleGraph.dependsOn(currModule, varModule)) {  } else { if (!sanityCheck && scope.isGlobal()) { if (moduleGraph.dependsOn(varModule, currModule)) {  t.report(n, VIOLATED_MODULE_DEP_ERROR, currModule.getName(), varModule.getName(), varName); } else {  [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	
36	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] CompilerInput varInput = var.input; if (currInput == varInput || currInput == null || varInput == null) {  return; }  JSModule currModule = currInput.getModule(); JSModule varModule = varInput.getModule(); JSModuleGraph moduleGraph = compiler.getModuleGraph(); [BUGGY] [BUGGY] if (varModule != currModule && varModule != null && currModule != null) { if (moduleGraph.dependsOn(currModule, varModule)) {  } else { if (!sanityCheck && scope.isGlobal()) { if (moduleGraph.dependsOn(varModule, currModule)) {  t.report(n, VIOLATED_MODULE_DEP_ERROR, currModule.getName(), varModule.getName(), varName); } else {  [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	
38	[BUG] [BUGGY] NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck()); [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) {    if (!sanityCheck) { [BUGGY] NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck()); [BUGGY] } NodeTraversal.traverseRoots( compiler, Lists.newArrayList(externs, root), this); for (String varName : varsToDeclareInExterns) { createSynthesizedExternVar(varName); } } [CLASS] VarCheck NameRefInExternsCheck [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.29019050004400465	102	102	5	replace	
39	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) {    if (!sanityCheck) { [BUGGY] [BUGGY] NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck()); } NodeTraversal.traverseRoots( compiler, Lists.newArrayList(externs, root), this); for (String varName : varsToDeclareInExterns) { createSynthesizedExternVar(varName); } } [CLASS] VarCheck NameRefInExternsCheck [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.29019050004400465	102	102	5	add	
40	[BUG] [BUGGY] CompilerInput currInput = t.getInput(); [FE] RuntimeException [CONTEXT] throw new IllegalStateException("Unexpected variable " + varName); } else { createSynthesizedExternVar(varName); scope.getGlobalScope().declare(varName, n, null, getSynthesizedExternsInput()); } } return; } [BUGGY] CompilerInput currInput = t.getInput(); [BUGGY] CompilerInput varInput = var.input; if (currInput == varInput || currInput == null || varInput == null) {  return; }  JSModule currModule = currInput.getModule(); JSModule varModule = varInput.getModule(); JSModuleGraph moduleGraph = compiler.getModuleGraph(); [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	166	166	5	replace	
41	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] throw new IllegalStateException("Unexpected variable " + varName); } else { createSynthesizedExternVar(varName); scope.getGlobalScope().declare(varName, n, null, getSynthesizedExternsInput()); } } return; } [BUGGY] [BUGGY] CompilerInput currInput = t.getInput(); CompilerInput varInput = var.input; if (currInput == varInput || currInput == null || varInput == null) {  return; }  JSModule currModule = currInput.getModule(); JSModule varModule = varInput.getModule(); JSModuleGraph moduleGraph = compiler.getModuleGraph(); [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	166	166	5	add	
42	[BUG] [BUGGY] CompilerInput varInput = var.input; [FE] RuntimeException [CONTEXT] } else { createSynthesizedExternVar(varName); scope.getGlobalScope().declare(varName, n, null, getSynthesizedExternsInput()); } } return; } CompilerInput currInput = t.getInput(); [BUGGY] CompilerInput varInput = var.input; [BUGGY] if (currInput == varInput || currInput == null || varInput == null) {  return; }  JSModule currModule = currInput.getModule(); JSModule varModule = varInput.getModule(); JSModuleGraph moduleGraph = compiler.getModuleGraph(); if (varModule != currModule && varModule != null && currModule != null) { [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	167	167	5	replace	
43	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] } else { createSynthesizedExternVar(varName); scope.getGlobalScope().declare(varName, n, null, getSynthesizedExternsInput()); } } return; } CompilerInput currInput = t.getInput(); [BUGGY] [BUGGY] CompilerInput varInput = var.input; if (currInput == varInput || currInput == null || varInput == null) {  return; }  JSModule currModule = currInput.getModule(); JSModule varModule = varInput.getModule(); JSModuleGraph moduleGraph = compiler.getModuleGraph(); if (varModule != currModule && varModule != null && currModule != null) { [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	167	167	5	add	
44	[BUG] [BUGGY] if (currInput == varInput || currInput == null || varInput == null) { [FE] RuntimeException [CONTEXT] createSynthesizedExternVar(varName); scope.getGlobalScope().declare(varName, n, null, getSynthesizedExternsInput()); } } return; } CompilerInput currInput = t.getInput(); CompilerInput varInput = var.input; [BUGGY] if (currInput == varInput || currInput == null || varInput == null) { [BUGGY]  return; }  JSModule currModule = currInput.getModule(); JSModule varModule = varInput.getModule(); JSModuleGraph moduleGraph = compiler.getModuleGraph(); if (varModule != currModule && varModule != null && currModule != null) { if (moduleGraph.dependsOn(currModule, varModule)) { [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	replace	
45	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] createSynthesizedExternVar(varName); scope.getGlobalScope().declare(varName, n, null, getSynthesizedExternsInput()); } } return; } CompilerInput currInput = t.getInput(); CompilerInput varInput = var.input; [BUGGY] [BUGGY] if (currInput == varInput || currInput == null || varInput == null) {  return; }  JSModule currModule = currInput.getModule(); JSModule varModule = varInput.getModule(); JSModuleGraph moduleGraph = compiler.getModuleGraph(); if (varModule != currModule && varModule != null && currModule != null) { if (moduleGraph.dependsOn(currModule, varModule)) { [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	168	168	5	add	
46	[BUG] [BUGGY] return; [FE] RuntimeException [CONTEXT] null, getSynthesizedExternsInput()); } } return; } CompilerInput currInput = t.getInput(); CompilerInput varInput = var.input; if (currInput == varInput || currInput == null || varInput == null) {  [BUGGY] return; [BUGGY] }  JSModule currModule = currInput.getModule(); JSModule varModule = varInput.getModule(); JSModuleGraph moduleGraph = compiler.getModuleGraph(); if (varModule != currModule && varModule != null && currModule != null) { if (moduleGraph.dependsOn(currModule, varModule)) {  } else { [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	replace	
47	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] null, getSynthesizedExternsInput()); } } return; } CompilerInput currInput = t.getInput(); CompilerInput varInput = var.input; if (currInput == varInput || currInput == null || varInput == null) {  [BUGGY] [BUGGY] return; }  JSModule currModule = currInput.getModule(); JSModule varModule = varInput.getModule(); JSModuleGraph moduleGraph = compiler.getModuleGraph(); if (varModule != currModule && varModule != null && currModule != null) { if (moduleGraph.dependsOn(currModule, varModule)) {  } else { [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.27937211830783126	170	170	5	add	
48	[BUG] [BUGGY] for (String varName : varsToDeclareInExterns) { [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) {    if (!sanityCheck) { NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck()); } NodeTraversal.traverseRoots( compiler, Lists.newArrayList(externs, root), this); [BUGGY] for (String varName : varsToDeclareInExterns) { [BUGGY] createSynthesizedExternVar(varName); } } [CLASS] VarCheck NameRefInExternsCheck [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2760262237369417	107	107	5	replace	
49	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) {    if (!sanityCheck) { NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck()); } NodeTraversal.traverseRoots( compiler, Lists.newArrayList(externs, root), this); [BUGGY] [BUGGY] for (String varName : varsToDeclareInExterns) { createSynthesizedExternVar(varName); } } [CLASS] VarCheck NameRefInExternsCheck [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2760262237369417	107	107	5	add	
50	[BUG] [BUGGY] } [FE] RuntimeException [CONTEXT]  if (!sanityCheck) { NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck()); } NodeTraversal.traverseRoots( compiler, Lists.newArrayList(externs, root), this); for (String varName : varsToDeclareInExterns) { createSynthesizedExternVar(varName); } [BUGGY] } [BUGGY]  [CLASS] VarCheck NameRefInExternsCheck [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2760262237369417	110	110	5	replace	
51	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT]  if (!sanityCheck) { NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck()); } NodeTraversal.traverseRoots( compiler, Lists.newArrayList(externs, root), this); for (String varName : varsToDeclareInExterns) { createSynthesizedExternVar(varName); } [BUGGY] [BUGGY] } [CLASS] VarCheck NameRefInExternsCheck [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2760262237369417	110	110	5	add	
52	[BUG] [BUGGY] VarCheck(AbstractCompiler compiler, boolean sanityCheck) { [FE] RuntimeException [CONTEXT] [BUGGY] VarCheck(AbstractCompiler compiler, boolean sanityCheck) { [BUGGY] this.compiler = compiler; this.strictExternCheck = compiler.getErrorLevel( JSError.make("", 0, 0, UNDEFINED_EXTERN_VAR_ERROR)) == CheckLevel.ERROR; this.sanityCheck = sanityCheck; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean sanityCheck [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	89	89	5	replace	
53	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] [BUGGY] [BUGGY] VarCheck(AbstractCompiler compiler, boolean sanityCheck) { this.compiler = compiler; this.strictExternCheck = compiler.getErrorLevel( JSError.make("", 0, 0, UNDEFINED_EXTERN_VAR_ERROR)) == CheckLevel.ERROR; this.sanityCheck = sanityCheck; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean sanityCheck [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	89	89	5	add	
54	[BUG] [BUGGY] private CompilerInput synthesizedExternsInput = null; [FE] RuntimeException [CONTEXT] [BUGGY] private CompilerInput synthesizedExternsInput = null; [BUGGY]  [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	69	69	5	replace	
55	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] [BUGGY] [BUGGY] private CompilerInput synthesizedExternsInput = null; [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	69	69	5	add	
56	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] private CompilerInput synthesizedExternsInput = null; [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	70	70	5	replace	
57	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] private CompilerInput synthesizedExternsInput = null; [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	70	70	5	add	
58	[BUG] [BUGGY] private Set<String> varsToDeclareInExterns = Sets.newHashSet(); [FE] RuntimeException [CONTEXT] [BUGGY] private Set<String> varsToDeclareInExterns = Sets.newHashSet(); [BUGGY]  [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	75	75	5	replace	
59	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] [BUGGY] [BUGGY] private Set<String> varsToDeclareInExterns = Sets.newHashSet(); [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	75	75	5	add	
60	[BUG] [BUGGY] this.compiler = compiler; [FE] RuntimeException [CONTEXT] VarCheck(AbstractCompiler compiler, boolean sanityCheck) { [BUGGY] this.compiler = compiler; [BUGGY] this.strictExternCheck = compiler.getErrorLevel( JSError.make("", 0, 0, UNDEFINED_EXTERN_VAR_ERROR)) == CheckLevel.ERROR; this.sanityCheck = sanityCheck; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean sanityCheck [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	90	90	5	replace	
61	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] VarCheck(AbstractCompiler compiler, boolean sanityCheck) { [BUGGY] [BUGGY] this.compiler = compiler; this.strictExternCheck = compiler.getErrorLevel( JSError.make("", 0, 0, UNDEFINED_EXTERN_VAR_ERROR)) == CheckLevel.ERROR; this.sanityCheck = sanityCheck; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean sanityCheck [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	90	90	5	add	
62	[BUG] [BUGGY] this.strictExternCheck = compiler.getErrorLevel( JSError.make("", 0, 0, UNDEFINED_EXTERN_VAR_ERROR)) == CheckLevel.ERROR; [FE] RuntimeException [CONTEXT] VarCheck(AbstractCompiler compiler, boolean sanityCheck) { this.compiler = compiler; [BUGGY] this.strictExternCheck = compiler.getErrorLevel(  JSError.make("", 0, 0, UNDEFINED_EXTERN_VAR_ERROR)) == CheckLevel.ERROR; [BUGGY] JSError.make("", 0, 0, UNDEFINED_EXTERN_VAR_ERROR)) == CheckLevel.ERROR; this.sanityCheck = sanityCheck; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean sanityCheck [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	91	92	5	replace	
63	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] VarCheck(AbstractCompiler compiler, boolean sanityCheck) { this.compiler = compiler; [BUGGY] [BUGGY] this.strictExternCheck = compiler.getErrorLevel(  JSError.make("", 0, 0, UNDEFINED_EXTERN_VAR_ERROR)) == CheckLevel.ERROR; JSError.make("", 0, 0, UNDEFINED_EXTERN_VAR_ERROR)) == CheckLevel.ERROR; this.sanityCheck = sanityCheck; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean sanityCheck [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	91	92	5	add	
64	[BUG] [BUGGY] this.sanityCheck = sanityCheck; [FE] RuntimeException [CONTEXT] VarCheck(AbstractCompiler compiler, boolean sanityCheck) { this.compiler = compiler; this.strictExternCheck = compiler.getErrorLevel( JSError.make("", 0, 0, UNDEFINED_EXTERN_VAR_ERROR)) == CheckLevel.ERROR; [BUGGY] this.sanityCheck = sanityCheck; [BUGGY] } [CLASS] VarCheck NameRefInExternsCheck [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean sanityCheck [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	93	93	5	replace	
65	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] VarCheck(AbstractCompiler compiler, boolean sanityCheck) { this.compiler = compiler; this.strictExternCheck = compiler.getErrorLevel( JSError.make("", 0, 0, UNDEFINED_EXTERN_VAR_ERROR)) == CheckLevel.ERROR; [BUGGY] [BUGGY] this.sanityCheck = sanityCheck; } [CLASS] VarCheck NameRefInExternsCheck [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean sanityCheck [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	93	93	5	add	
66	[BUG] [BUGGY] } [FE] RuntimeException [CONTEXT] VarCheck(AbstractCompiler compiler, boolean sanityCheck) { this.compiler = compiler; this.strictExternCheck = compiler.getErrorLevel( JSError.make("", 0, 0, UNDEFINED_EXTERN_VAR_ERROR)) == CheckLevel.ERROR; this.sanityCheck = sanityCheck; [BUGGY] } [BUGGY]  [CLASS] VarCheck NameRefInExternsCheck [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean sanityCheck [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	94	94	5	replace	
67	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] VarCheck(AbstractCompiler compiler, boolean sanityCheck) { this.compiler = compiler; this.strictExternCheck = compiler.getErrorLevel( JSError.make("", 0, 0, UNDEFINED_EXTERN_VAR_ERROR)) == CheckLevel.ERROR; this.sanityCheck = sanityCheck; [BUGGY] [BUGGY] } [CLASS] VarCheck NameRefInExternsCheck [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean sanityCheck [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node synthesizedExternsRoot  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	94	94	5	add	
68	[BUG] [BUGGY] if (!sanityCheck) { [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) {    [BUGGY] if (!sanityCheck) { [BUGGY] NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck()); } NodeTraversal.traverseRoots( compiler, Lists.newArrayList(externs, root), this); for (String varName : varsToDeclareInExterns) { createSynthesizedExternVar(varName); } } [CLASS] VarCheck NameRefInExternsCheck [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	101	101	5	replace	
69	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) {    [BUGGY] [BUGGY] if (!sanityCheck) { NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck()); } NodeTraversal.traverseRoots( compiler, Lists.newArrayList(externs, root), this); for (String varName : varsToDeclareInExterns) { createSynthesizedExternVar(varName); } } [CLASS] VarCheck NameRefInExternsCheck [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	101	101	5	add	
70	[BUG] [BUGGY] NodeTraversal.traverseRoots( compiler, Lists.newArrayList(externs, root), this); [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) {    if (!sanityCheck) { NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck()); } [BUGGY] NodeTraversal.traverseRoots(  compiler, Lists.newArrayList(externs, root), this); [BUGGY] compiler, Lists.newArrayList(externs, root), this); for (String varName : varsToDeclareInExterns) { createSynthesizedExternVar(varName); } } [CLASS] VarCheck NameRefInExternsCheck [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	105	106	5	replace	
71	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) {    if (!sanityCheck) { NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck()); } [BUGGY] [BUGGY] NodeTraversal.traverseRoots(  compiler, Lists.newArrayList(externs, root), this); compiler, Lists.newArrayList(externs, root), this); for (String varName : varsToDeclareInExterns) { createSynthesizedExternVar(varName); } } [CLASS] VarCheck NameRefInExternsCheck [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] CompilerInput synthesizedExternsInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Node externs root synthesizedExternsRoot String varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	105	106	5	add	
72	[BUG] [BUGGY] if (n.getType() != Token.NAME) { [FE] RuntimeException [CONTEXT] public void visit(NodeTraversal t, Node n, Node parent) { [BUGGY] if (n.getType() != Token.NAME) { [BUGGY] return; } String varName = n.getString();  if (varName.isEmpty()) { Preconditions.checkState(NodeUtil.isFunction(parent));   [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	114	114	5	replace	
73	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] public void visit(NodeTraversal t, Node n, Node parent) { [BUGGY] [BUGGY] if (n.getType() != Token.NAME) { return; } String varName = n.getString();  if (varName.isEmpty()) { Preconditions.checkState(NodeUtil.isFunction(parent));   [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	114	114	5	add	
74	[BUG] [BUGGY] return; [FE] RuntimeException [CONTEXT] public void visit(NodeTraversal t, Node n, Node parent) { if (n.getType() != Token.NAME) { [BUGGY] return; [BUGGY] } String varName = n.getString();  if (varName.isEmpty()) { Preconditions.checkState(NodeUtil.isFunction(parent));    [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	115	115	5	replace	
75	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] public void visit(NodeTraversal t, Node n, Node parent) { if (n.getType() != Token.NAME) { [BUGGY] [BUGGY] return; } String varName = n.getString();  if (varName.isEmpty()) { Preconditions.checkState(NodeUtil.isFunction(parent));    [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	115	115	5	add	
76	[BUG] [BUGGY] String varName = n.getString(); [FE] RuntimeException [CONTEXT] public void visit(NodeTraversal t, Node n, Node parent) { if (n.getType() != Token.NAME) { return; } [BUGGY] String varName = n.getString(); [BUGGY]   if (varName.isEmpty()) { Preconditions.checkState(NodeUtil.isFunction(parent));   if (!NodeUtil.isFunctionExpression(parent)) { t.report(n, INVALID_FUNCTION_DECL); } [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	118	118	5	replace	
77	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] public void visit(NodeTraversal t, Node n, Node parent) { if (n.getType() != Token.NAME) { return; } [BUGGY] [BUGGY] String varName = n.getString();  if (varName.isEmpty()) { Preconditions.checkState(NodeUtil.isFunction(parent));   if (!NodeUtil.isFunctionExpression(parent)) { t.report(n, INVALID_FUNCTION_DECL); } [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	118	118	5	add	
78	[BUG] [BUGGY] if (varName.isEmpty()) { [FE] RuntimeException [CONTEXT] public void visit(NodeTraversal t, Node n, Node parent) { if (n.getType() != Token.NAME) { return; } String varName = n.getString();  [BUGGY] if (varName.isEmpty()) { [BUGGY] Preconditions.checkState(NodeUtil.isFunction(parent));   if (!NodeUtil.isFunctionExpression(parent)) { t.report(n, INVALID_FUNCTION_DECL); } return; }  [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	121	121	5	replace	
79	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] public void visit(NodeTraversal t, Node n, Node parent) { if (n.getType() != Token.NAME) { return; } String varName = n.getString();  [BUGGY] [BUGGY] if (varName.isEmpty()) { Preconditions.checkState(NodeUtil.isFunction(parent));   if (!NodeUtil.isFunctionExpression(parent)) { t.report(n, INVALID_FUNCTION_DECL); } return; }  [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	121	121	5	add	
80	[BUG] [BUGGY] if ((parent.getType() == Token.VAR || NodeUtil.isFunctionDeclaration(parent)) && varsToDeclareInExterns.contains(varName)) { [FE] RuntimeException [CONTEXT]   if (!NodeUtil.isFunctionExpression(parent)) { t.report(n, INVALID_FUNCTION_DECL); } return; }   [BUGGY] if ((parent.getType() == Token.VAR ||   NodeUtil.isFunctionDeclaration(parent)) &&    varsToDeclareInExterns.contains(varName)) { [BUGGY] NodeUtil.isFunctionDeclaration(parent)) && varsToDeclareInExterns.contains(varName)) { createSynthesizedExternVar(varName); n.addSuppression("duplicate"); }  Scope scope = t.getScope(); Scope.Var var = scope.getVar(varName); [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	134	136	5	replace	
81	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT]   if (!NodeUtil.isFunctionExpression(parent)) { t.report(n, INVALID_FUNCTION_DECL); } return; }   [BUGGY] [BUGGY] if ((parent.getType() == Token.VAR ||   NodeUtil.isFunctionDeclaration(parent)) &&    varsToDeclareInExterns.contains(varName)) { NodeUtil.isFunctionDeclaration(parent)) && varsToDeclareInExterns.contains(varName)) { createSynthesizedExternVar(varName); n.addSuppression("duplicate"); }  Scope scope = t.getScope(); Scope.Var var = scope.getVar(varName); [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	134	136	5	add	
82	[BUG] [BUGGY] Scope scope = t.getScope(); [FE] RuntimeException [CONTEXT]  if ((parent.getType() == Token.VAR || NodeUtil.isFunctionDeclaration(parent)) && varsToDeclareInExterns.contains(varName)) { createSynthesizedExternVar(varName); n.addSuppression("duplicate"); }  [BUGGY] Scope scope = t.getScope(); [BUGGY] Scope.Var var = scope.getVar(varName); if (var == null) { if (NodeUtil.isFunctionExpression(parent)) {   } else {  if (!strictExternCheck || !t.getInput().isExtern()) { t.report(n, UNDEFINED_VAR_ERROR, varName); } [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	143	143	5	replace	
83	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT]  if ((parent.getType() == Token.VAR || NodeUtil.isFunctionDeclaration(parent)) && varsToDeclareInExterns.contains(varName)) { createSynthesizedExternVar(varName); n.addSuppression("duplicate"); }  [BUGGY] [BUGGY] Scope scope = t.getScope(); Scope.Var var = scope.getVar(varName); if (var == null) { if (NodeUtil.isFunctionExpression(parent)) {   } else {  if (!strictExternCheck || !t.getInput().isExtern()) { t.report(n, UNDEFINED_VAR_ERROR, varName); } [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	143	143	5	add	
84	[BUG] [BUGGY] Scope.Var var = scope.getVar(varName); [FE] RuntimeException [CONTEXT] if ((parent.getType() == Token.VAR || NodeUtil.isFunctionDeclaration(parent)) && varsToDeclareInExterns.contains(varName)) { createSynthesizedExternVar(varName); n.addSuppression("duplicate"); }  Scope scope = t.getScope(); [BUGGY] Scope.Var var = scope.getVar(varName); [BUGGY] if (var == null) { if (NodeUtil.isFunctionExpression(parent)) {   } else {  if (!strictExternCheck || !t.getInput().isExtern()) { t.report(n, UNDEFINED_VAR_ERROR, varName); }  [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	144	144	5	replace	
85	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] if ((parent.getType() == Token.VAR || NodeUtil.isFunctionDeclaration(parent)) && varsToDeclareInExterns.contains(varName)) { createSynthesizedExternVar(varName); n.addSuppression("duplicate"); }  Scope scope = t.getScope(); [BUGGY] [BUGGY] Scope.Var var = scope.getVar(varName); if (var == null) { if (NodeUtil.isFunctionExpression(parent)) {   } else {  if (!strictExternCheck || !t.getInput().isExtern()) { t.report(n, UNDEFINED_VAR_ERROR, varName); }  [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	144	144	5	add	
86	[BUG] [BUGGY] if (var == null) { [FE] RuntimeException [CONTEXT] NodeUtil.isFunctionDeclaration(parent)) && varsToDeclareInExterns.contains(varName)) { createSynthesizedExternVar(varName); n.addSuppression("duplicate"); }  Scope scope = t.getScope(); Scope.Var var = scope.getVar(varName); [BUGGY] if (var == null) { [BUGGY] if (NodeUtil.isFunctionExpression(parent)) {   } else {  if (!strictExternCheck || !t.getInput().isExtern()) { t.report(n, UNDEFINED_VAR_ERROR, varName); } if (sanityCheck) { [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	145	145	5	replace	
87	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] NodeUtil.isFunctionDeclaration(parent)) && varsToDeclareInExterns.contains(varName)) { createSynthesizedExternVar(varName); n.addSuppression("duplicate"); }  Scope scope = t.getScope(); Scope.Var var = scope.getVar(varName); [BUGGY] [BUGGY] if (var == null) { if (NodeUtil.isFunctionExpression(parent)) {   } else {  if (!strictExternCheck || !t.getInput().isExtern()) { t.report(n, UNDEFINED_VAR_ERROR, varName); } if (sanityCheck) { [CLASS] VarCheck NameRefInExternsCheck [METHOD] visit [RETURN_TYPE] void  NodeTraversal t Node n Node parent [VARIABLES] CompilerInput currInput synthesizedExternsInput varInput AbstractCompiler compiler Set varsToDeclareInExterns boolean sanityCheck strictExternCheck Scope scope NodeTraversal t DiagnosticType INVALID_FUNCTION_DECL MISSING_MODULE_DEP_ERROR NAME_REFERENCE_IN_EXTERNS_ERROR STRICT_MODULE_DEP_ERROR UNDEFINED_EXTERN_VAR_ERROR UNDEFINED_VAR_ERROR VIOLATED_MODULE_DEP_ERROR Var var Node externs n parent root synthesizedExternsRoot JSModule currModule varModule String varName JSModuleGraph moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.2727977357881894	145	145	5	add	
88	[BUG] [BUGGY] static final DiagnosticType UNDEFINED_VAR_ERROR = DiagnosticType.error( "JSC_UNDEFINED_VARIABLE", "variable {0} is undefined"); [FE] RuntimeException [CONTEXT] [BUGGY] static final DiagnosticType UNDEFINED_VAR_ERROR = DiagnosticType.error(  "JSC_UNDEFINED_VARIABLE",   "variable {0} is undefined"); [BUGGY] "JSC_UNDEFINED_VARIABLE", "variable {0} is undefined"); [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.26352313834736496	36	38	5	replace	
89	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] [BUGGY] [BUGGY] static final DiagnosticType UNDEFINED_VAR_ERROR = DiagnosticType.error(  "JSC_UNDEFINED_VARIABLE",   "variable {0} is undefined"); "JSC_UNDEFINED_VARIABLE", "variable {0} is undefined"); [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.26352313834736496	36	38	5	add	
90	[BUG] [BUGGY] static final DiagnosticType VIOLATED_MODULE_DEP_ERROR = DiagnosticType.error( "JSC_VIOLATED_MODULE_DEPENDENCY", "module {0} cannot reference {2}, defined in " + [FE] RuntimeException [CONTEXT] [BUGGY] static final DiagnosticType VIOLATED_MODULE_DEP_ERROR = DiagnosticType.error(  "JSC_VIOLATED_MODULE_DEPENDENCY",   "module {0} cannot reference {2}, defined in " + [BUGGY] "JSC_VIOLATED_MODULE_DEPENDENCY", "module {0} cannot reference {2}, defined in " + "module {1}, since {1} loads after {0}"); [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.26352313834736496	40	42	5	replace	
91	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] [BUGGY] [BUGGY] static final DiagnosticType VIOLATED_MODULE_DEP_ERROR = DiagnosticType.error(  "JSC_VIOLATED_MODULE_DEPENDENCY",   "module {0} cannot reference {2}, defined in " + "JSC_VIOLATED_MODULE_DEPENDENCY", "module {0} cannot reference {2}, defined in " + "module {1}, since {1} loads after {0}"); [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.26352313834736496	40	42	5	add	
92	[BUG] [BUGGY] static final DiagnosticType MISSING_MODULE_DEP_ERROR = DiagnosticType.warning( "JSC_MISSING_MODULE_DEPENDENCY", "missing module dependency; module {0} should depend " + [FE] RuntimeException [CONTEXT] [BUGGY] static final DiagnosticType MISSING_MODULE_DEP_ERROR = DiagnosticType.warning(  "JSC_MISSING_MODULE_DEPENDENCY",   "missing module dependency; module {0} should depend " + [BUGGY] "JSC_MISSING_MODULE_DEPENDENCY", "missing module dependency; module {0} should depend " + "on module {1} because it references {2}"); [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.26352313834736496	45	47	5	replace	
93	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] [BUGGY] [BUGGY] static final DiagnosticType MISSING_MODULE_DEP_ERROR = DiagnosticType.warning(  "JSC_MISSING_MODULE_DEPENDENCY",   "missing module dependency; module {0} should depend " + "JSC_MISSING_MODULE_DEPENDENCY", "missing module dependency; module {0} should depend " + "on module {1} because it references {2}"); [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.26352313834736496	45	47	5	add	
94	[BUG] [BUGGY] static final DiagnosticType STRICT_MODULE_DEP_ERROR = DiagnosticType.disabled( "JSC_STRICT_MODULE_DEPENDENCY", "module {0} cannot reference {2}, defined in " + [FE] RuntimeException [CONTEXT] [BUGGY] static final DiagnosticType STRICT_MODULE_DEP_ERROR = DiagnosticType.disabled(  "JSC_STRICT_MODULE_DEPENDENCY",   "module {0} cannot reference {2}, defined in " + [BUGGY] "JSC_STRICT_MODULE_DEPENDENCY", "module {0} cannot reference {2}, defined in " + "module {1}"); [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.26352313834736496	50	52	5	replace	
95	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] [BUGGY] [BUGGY] static final DiagnosticType STRICT_MODULE_DEP_ERROR = DiagnosticType.disabled(  "JSC_STRICT_MODULE_DEPENDENCY",   "module {0} cannot reference {2}, defined in " + "JSC_STRICT_MODULE_DEPENDENCY", "module {0} cannot reference {2}, defined in " + "module {1}"); [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.26352313834736496	50	52	5	add	
96	[BUG] [BUGGY] static final DiagnosticType NAME_REFERENCE_IN_EXTERNS_ERROR = DiagnosticType.warning( "JSC_NAME_REFERENCE_IN_EXTERNS", [FE] RuntimeException [CONTEXT] [BUGGY] static final DiagnosticType NAME_REFERENCE_IN_EXTERNS_ERROR = DiagnosticType.warning(   "JSC_NAME_REFERENCE_IN_EXTERNS", [BUGGY] DiagnosticType.warning( "JSC_NAME_REFERENCE_IN_EXTERNS", "accessing name {0} in externs has no effect"); [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.26352313834736496	55	57	5	replace	
97	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] [BUGGY] [BUGGY] static final DiagnosticType NAME_REFERENCE_IN_EXTERNS_ERROR = DiagnosticType.warning(   "JSC_NAME_REFERENCE_IN_EXTERNS", DiagnosticType.warning( "JSC_NAME_REFERENCE_IN_EXTERNS", "accessing name {0} in externs has no effect"); [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.26352313834736496	55	57	5	add	
98	[BUG] [BUGGY] static final DiagnosticType UNDEFINED_EXTERN_VAR_ERROR = DiagnosticType.warning( "JSC_UNDEFINED_EXTERN_VAR_ERROR", [FE] RuntimeException [CONTEXT] [BUGGY] static final DiagnosticType UNDEFINED_EXTERN_VAR_ERROR = DiagnosticType.warning(   "JSC_UNDEFINED_EXTERN_VAR_ERROR", [BUGGY] DiagnosticType.warning( "JSC_UNDEFINED_EXTERN_VAR_ERROR", "name {0} is not undefined in the externs."); [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.26352313834736496	60	62	5	replace	
99	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] [BUGGY] [BUGGY] static final DiagnosticType UNDEFINED_EXTERN_VAR_ERROR = DiagnosticType.warning(   "JSC_UNDEFINED_EXTERN_VAR_ERROR", DiagnosticType.warning( "JSC_UNDEFINED_EXTERN_VAR_ERROR", "name {0} is not undefined in the externs."); [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.26352313834736496	60	62	5	add	
100	[BUG] [BUGGY] static final DiagnosticType INVALID_FUNCTION_DECL = DiagnosticType.error("JSC_INVALID_FUNCTION_DECL", "Syntax error: function declaration must have a name"); [FE] RuntimeException [CONTEXT] [BUGGY] static final DiagnosticType INVALID_FUNCTION_DECL = DiagnosticType.error("JSC_INVALID_FUNCTION_DECL",    "Syntax error: function declaration must have a name"); [BUGGY] DiagnosticType.error("JSC_INVALID_FUNCTION_DECL", "Syntax error: function declaration must have a name"); [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.26352313834736496	65	67	5	replace	
101	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] [BUGGY] [BUGGY] static final DiagnosticType INVALID_FUNCTION_DECL = DiagnosticType.error("JSC_INVALID_FUNCTION_DECL",    "Syntax error: function declaration must have a name"); DiagnosticType.error("JSC_INVALID_FUNCTION_DECL", "Syntax error: function declaration must have a name"); [CLASS] VarCheck NameRefInExternsCheck  [VARIABLES] 	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.26352313834736496	65	67	5	add	
102	[BUG] [BUGGY] Normalize(AbstractCompiler compiler, boolean assertOnChange) { [FE] RuntimeException [CONTEXT] [BUGGY] Normalize(AbstractCompiler compiler, boolean assertOnChange) { [BUGGY] this.compiler = compiler; this.assertOnChange = assertOnChange;   } [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean assertOnChange [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations Set hasOkDuplicateDeclaration Map constantMap DiagnosticType CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	77	77	5	replace	
103	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] [BUGGY] [BUGGY] Normalize(AbstractCompiler compiler, boolean assertOnChange) { this.compiler = compiler; this.assertOnChange = assertOnChange;   } [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean assertOnChange [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations Set hasOkDuplicateDeclaration Map constantMap DiagnosticType CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	77	77	5	add	
104	[BUG] [BUGGY] this.compiler = compiler; [FE] RuntimeException [CONTEXT] Normalize(AbstractCompiler compiler, boolean assertOnChange) { [BUGGY] this.compiler = compiler; [BUGGY] this.assertOnChange = assertOnChange;   } [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean assertOnChange [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations Set hasOkDuplicateDeclaration Map constantMap DiagnosticType CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	78	78	5	replace	
105	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] Normalize(AbstractCompiler compiler, boolean assertOnChange) { [BUGGY] [BUGGY] this.compiler = compiler; this.assertOnChange = assertOnChange;   } [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean assertOnChange [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations Set hasOkDuplicateDeclaration Map constantMap DiagnosticType CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	78	78	5	add	
106	[BUG] [BUGGY] this.assertOnChange = assertOnChange; [FE] RuntimeException [CONTEXT] Normalize(AbstractCompiler compiler, boolean assertOnChange) { this.compiler = compiler; [BUGGY] this.assertOnChange = assertOnChange; [BUGGY]    } [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean assertOnChange [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations Set hasOkDuplicateDeclaration Map constantMap DiagnosticType CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	79	79	5	replace	
107	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] Normalize(AbstractCompiler compiler, boolean assertOnChange) { this.compiler = compiler; [BUGGY] [BUGGY] this.assertOnChange = assertOnChange;   } [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)  AbstractCompiler compiler boolean assertOnChange [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations Set hasOkDuplicateDeclaration Map constantMap DiagnosticType CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	79	79	5	add	
109	[BUG] [BUGGY] new NodeTraversal( compiler, new NormalizeStatements(compiler, assertOnChange)) .traverse(root); [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) { [BUGGY] new NodeTraversal(  compiler, new NormalizeStatements(compiler, assertOnChange))    .traverse(root); [BUGGY] compiler, new NormalizeStatements(compiler, assertOnChange)) .traverse(root); if (MAKE_LOCAL_NAMES_UNIQUE) { MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique(); NodeTraversal t = new NodeTraversal(compiler, renamer); t.traverseRoots(externs, root); }    [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations forbidChanges Set hasOkDuplicateDeclaration NodeTraversal t DiagnosticType CATCH_BLOCK_VAR_ERROR Node externs root MakeDeclaredNamesUnique renamer Map constantMap  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	120	122	5	replace	
110	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) { [BUGGY] [BUGGY] new NodeTraversal(  compiler, new NormalizeStatements(compiler, assertOnChange))    .traverse(root); compiler, new NormalizeStatements(compiler, assertOnChange)) .traverse(root); if (MAKE_LOCAL_NAMES_UNIQUE) { MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique(); NodeTraversal t = new NodeTraversal(compiler, renamer); t.traverseRoots(externs, root); }    [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations forbidChanges Set hasOkDuplicateDeclaration NodeTraversal t DiagnosticType CATCH_BLOCK_VAR_ERROR Node externs root MakeDeclaredNamesUnique renamer Map constantMap  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	120	122	5	add	
111	[BUG] [BUGGY] MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique(); [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) { new NodeTraversal( compiler, new NormalizeStatements(compiler, assertOnChange)) .traverse(root); if (MAKE_LOCAL_NAMES_UNIQUE) { [BUGGY] MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique(); [BUGGY] NodeTraversal t = new NodeTraversal(compiler, renamer); t.traverseRoots(externs, root); }        [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations forbidChanges Set hasOkDuplicateDeclaration NodeTraversal t DiagnosticType CATCH_BLOCK_VAR_ERROR Node externs root MakeDeclaredNamesUnique renamer Map constantMap  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	124	124	5	replace	
112	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) { new NodeTraversal( compiler, new NormalizeStatements(compiler, assertOnChange)) .traverse(root); if (MAKE_LOCAL_NAMES_UNIQUE) { [BUGGY] [BUGGY] MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique(); NodeTraversal t = new NodeTraversal(compiler, renamer); t.traverseRoots(externs, root); }        [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations forbidChanges Set hasOkDuplicateDeclaration NodeTraversal t DiagnosticType CATCH_BLOCK_VAR_ERROR Node externs root MakeDeclaredNamesUnique renamer Map constantMap  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	124	124	5	add	
113	[BUG] [BUGGY] NodeTraversal t = new NodeTraversal(compiler, renamer); [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) { new NodeTraversal( compiler, new NormalizeStatements(compiler, assertOnChange)) .traverse(root); if (MAKE_LOCAL_NAMES_UNIQUE) { MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique(); [BUGGY] NodeTraversal t = new NodeTraversal(compiler, renamer); [BUGGY] t.traverseRoots(externs, root); }         [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations forbidChanges Set hasOkDuplicateDeclaration NodeTraversal t DiagnosticType CATCH_BLOCK_VAR_ERROR Node externs root MakeDeclaredNamesUnique renamer Map constantMap  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	125	125	5	replace	
114	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) { new NodeTraversal( compiler, new NormalizeStatements(compiler, assertOnChange)) .traverse(root); if (MAKE_LOCAL_NAMES_UNIQUE) { MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique(); [BUGGY] [BUGGY] NodeTraversal t = new NodeTraversal(compiler, renamer); t.traverseRoots(externs, root); }         [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations forbidChanges Set hasOkDuplicateDeclaration NodeTraversal t DiagnosticType CATCH_BLOCK_VAR_ERROR Node externs root MakeDeclaredNamesUnique renamer Map constantMap  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	125	125	5	add	
115	[BUG] [BUGGY] t.traverseRoots(externs, root); [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) { new NodeTraversal( compiler, new NormalizeStatements(compiler, assertOnChange)) .traverse(root); if (MAKE_LOCAL_NAMES_UNIQUE) { MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique(); NodeTraversal t = new NodeTraversal(compiler, renamer); [BUGGY] t.traverseRoots(externs, root); [BUGGY] }          [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations forbidChanges Set hasOkDuplicateDeclaration NodeTraversal t DiagnosticType CATCH_BLOCK_VAR_ERROR Node externs root MakeDeclaredNamesUnique renamer Map constantMap  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	126	126	5	replace	
116	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] public void process(Node externs, Node root) { new NodeTraversal( compiler, new NormalizeStatements(compiler, assertOnChange)) .traverse(root); if (MAKE_LOCAL_NAMES_UNIQUE) { MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique(); NodeTraversal t = new NodeTraversal(compiler, renamer); [BUGGY] [BUGGY] t.traverseRoots(externs, root); }          [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations forbidChanges Set hasOkDuplicateDeclaration NodeTraversal t DiagnosticType CATCH_BLOCK_VAR_ERROR Node externs root MakeDeclaredNamesUnique renamer Map constantMap  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	126	126	5	add	
117	[BUG] [BUGGY] removeDuplicateDeclarations(externs, root); [FE] RuntimeException [CONTEXT]           [BUGGY] removeDuplicateDeclarations(externs, root); [BUGGY] new PropagateConstantAnnotationsOverVars(compiler, assertOnChange) .process(externs, root); if (!compiler.getLifeCycleStage().isNormalized()) { compiler.setLifeCycleStage(LifeCycleStage.NORMALIZED); } } [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations forbidChanges Set hasOkDuplicateDeclaration NodeTraversal t DiagnosticType CATCH_BLOCK_VAR_ERROR Node externs root MakeDeclaredNamesUnique renamer Map constantMap  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	142	142	5	replace	
118	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT]           [BUGGY] [BUGGY] removeDuplicateDeclarations(externs, root); new PropagateConstantAnnotationsOverVars(compiler, assertOnChange) .process(externs, root); if (!compiler.getLifeCycleStage().isNormalized()) { compiler.setLifeCycleStage(LifeCycleStage.NORMALIZED); } } [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] process [RETURN_TYPE] void  Node externs Node root [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations forbidChanges Set hasOkDuplicateDeclaration NodeTraversal t DiagnosticType CATCH_BLOCK_VAR_ERROR Node externs root MakeDeclaredNamesUnique renamer Map constantMap  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	142	142	5	add	
119	[BUG] [BUGGY] Callback tickler = new ScopeTicklingCallback(); [FE] RuntimeException [CONTEXT] private void removeDuplicateDeclarations(Node externs, Node root) { [BUGGY] Callback tickler = new ScopeTicklingCallback(); [BUGGY] ScopeCreator scopeCreator =new SyntacticScopeCreator( compiler, new DuplicateDeclarationHandler()); NodeTraversal t = new NodeTraversal(compiler, tickler, scopeCreator); t.traverseRoots(externs, root); } [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] removeDuplicateDeclarations [RETURN_TYPE] void  Node externs Node root [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations expectedConst forbidChanges isConst isMarkedConstant isObjLitKey isProperty shouldBeConstant Set hasOkDuplicateDeclaration Callback tickler NodeTraversal t DiagnosticType CATCH_BLOCK_VAR_ERROR Node externs root ScopeCreator scopeCreator Map constantMap  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	629	629	5	replace	
120	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] private void removeDuplicateDeclarations(Node externs, Node root) { [BUGGY] [BUGGY] Callback tickler = new ScopeTicklingCallback(); ScopeCreator scopeCreator =new SyntacticScopeCreator( compiler, new DuplicateDeclarationHandler()); NodeTraversal t = new NodeTraversal(compiler, tickler, scopeCreator); t.traverseRoots(externs, root); } [CLASS] Normalize PropagateConstantAnnotationsOverVars VerifyConstants NormalizeStatements DuplicateDeclarationHandler ScopeTicklingCallback [METHOD] removeDuplicateDeclarations [RETURN_TYPE] void  Node externs Node root [VARIABLES] AbstractCompiler compiler boolean CONVERT_WHILE_TO_FOR MAKE_LOCAL_NAMES_UNIQUE assertOnChange checkUserDeclarations expectedConst forbidChanges isConst isMarkedConstant isObjLitKey isProperty shouldBeConstant Set hasOkDuplicateDeclaration Callback tickler NodeTraversal t DiagnosticType CATCH_BLOCK_VAR_ERROR Node externs root ScopeCreator scopeCreator Map constantMap  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.08451542547285165	629	629	5	add	
