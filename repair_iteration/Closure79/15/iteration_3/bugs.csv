bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  JSModule  currModule  =  parent.getParent();  [CE]  incompatible  types  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  parent.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  parent.getParent();	  JSModule    currModule    =    curr.getParent();    	non-compiled	[CE]  incompatible  types	4	None	replace
2	[BUG]  [BUGGY]  JSModule  currModule  =  var.getParent();  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  var.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  var.getParent();	  JSModule    currModule    =    curr.getParent();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
3	[BUG]  [BUGGY]  JSModule  varModule  =  currInput.toModule();  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  varModule  =  currInput.toModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  varModule  =  currInput.toModule();	  JSModule    currModule    =    varInput.toModule();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
4	[BUG]  [BUGGY]  JSModule  currModule  =  var.toModule();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  var.toModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  var.toModule();	  JSModule    currModule    =    varInput.toModule();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
5	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  varModule.toModule();  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  varModule.toModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  varModule.toModule();	  JSModule    currModule    =    currInput,    varInput.toModule();    	non-compiled	[CE]  ';'  expected	50	None	replace
6	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  currModule.toModule();  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  currModule.toModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  currModule.toModule();	  JSModule    currModule    =    currInput,    varInput.toModule();    	non-compiled	[CE]  ';'  expected	50	None	replace
7	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  var.toModule();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  var.toModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  var.toModule();	  JSModule    currModule    =    currInput,    varInput.toModule();    	non-compiled	[CE]  ';'  expected	50	None	replace
8	[BUG]  [BUGGY]  JSModule  currModule  =  varInput,  currInput.toModule();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  varInput,  currInput.toModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  varInput,  currInput.toModule();	  JSModule    currModule    =    currInput,    varInput.toModule();    	non-compiled	[CE]  ';'  expected	50	None	replace
9	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  [CE]  ')'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    	non-compiled	[CE]  ')'  expected	55	None	replace
10	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currModule.getModule();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currModule.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currModule.getModule();	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	55	None	replace
11	[BUG]  [BUGGY]  ||  currModule!=  null)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  ||  currModule!=  null)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	||  currModule!=  null)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
12	[BUG]  [BUGGY]  t.report(n,  VOLATED_MODULE_DEP_ERROR,  [CE]  ')'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  VOLATED_MODULE_DEP_ERROR,  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  VOLATED_MODULE_DEP_ERROR,	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    	non-compiled	[CE]  ')'  expected	55	None	replace
13	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  [CE]  ')'  expected  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    	non-compiled	[CE]  ')'  expected	55	None	replace
14	[BUG]  [BUGGY]  t.report(n,  STRING_MODULE_DEP_ERROR,  [CE]  ')'  expected  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  STRING_MODULE_DEP_ERROR,  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  STRING_MODULE_DEP_ERROR,	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    	non-compiled	[CE]  ')'  expected	55	None	replace
15	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck));  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ';'  expected	34	None	replace
16	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck));  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ';'  expected	34	None	replace
17	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExterns  [CE]  ')'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExterns  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExterns	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ')'  expected	34	None	replace
18	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck)  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck)  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck)	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ';'  expected	34	None	replace
19	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  name  [CE]  ')'  expected  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  name  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  name	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ')'  expected	34	None	replace
20	[BUG]  [BUGGY]  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ';'  expected	34	None	replace
21	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  var.getModuleReference();  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  var.getModuleReference();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  var.getModuleReference();	  JSModule    currModule    =    currInput,    varInput.getModuleReference();    	non-compiled	[CE]  ';'  expected	42	None	replace
22	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  compiler.getModuleReference();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  compiler.getModuleReference();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  compiler.getModuleReference();	  JSModule    currModule    =    currInput,    varInput.getModuleReference();    	non-compiled	[CE]  ';'  expected	42	None	replace
23	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  varInput.getModule();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  varInput.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  varInput.getModule();	  JSModule    currModule    =    currInput,    varInput.getModuleReference();    	non-compiled	[CE]  ';'  expected	42	None	replace
24	[BUG]  [BUGGY]  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule);  [CE]  cannot  find  symbol  currModule  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  cannot  find  symbol  currModule	36	None	replace
25	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule);  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,JSModule)  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,JSModule)	36	None	replace
26	[BUG]  [BUGGY]  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  currModule);  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,JSModule,JSModule)  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  currModule);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,JSModule,JSModule)	36	None	replace
27	[BUG]  [BUGGY]  JSModule  currModule  =  t.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule);  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,JSModule)  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  t.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  t.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,JSModule)	36	None	replace
28	[BUG]  [BUGGY]  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  INVALID_FUNCTION_DECL);  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,JSModule,DiagnosticType)  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  INVALID_FUNCTION_DECL);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  INVALID_FUNCTION_DECL);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,JSModule,DiagnosticType)	36	None	replace
29	[BUG]  [BUGGY]  JSModule  currModule  =  t.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  currModule);  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,JSModule,JSModule)  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  t.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  t.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule,  currModule);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,JSModule,JSModule)	36	None	replace
30	[BUG]  [BUGGY]  JSModule  currModule  =  var.getModuleReference();  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  var.getModuleReference();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  var.getModuleReference();	  JSModule    currModule    =    curr.getModuleReference();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
31	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR));  [CE]  ';'  expected  [FE]          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR));    	non-compiled	[CE]  ';'  expected	33	None	replace
32	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR));  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR));    	non-compiled	[CE]  ';'  expected	33	None	replace
33	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR));    	non-compiled	[CE]  ';'  expected	33	None	replace
34	[BUG]  [BUGGY]  JSError.make(t,  varInput,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR));    	non-compiled	[CE]  ';'  expected	33	None	replace
35	[BUG]  [BUGGY]  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [CE]  ';'  expected  [FE]        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ';'  expected	32	None	replace
36	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [CE]  ';'  expected  [FE]          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ';'  expected	32	None	replace
37	[BUG]  [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  }  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  }	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ';'  expected	32	None	replace
38	[BUG]  [BUGGY]  JSError.make(t,  n,  STRICT_MODULE_DEP_ERROR,  currModule));  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  n,  STRICT_MODULE_DEP_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  n,  STRICT_MODULE_DEP_ERROR,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ';'  expected	32	None	replace
39	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExternsCheck));  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExternsCheck));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExternsCheck));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ';'  expected	23	None	replace
40	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExternsCheck));  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExternsCheck));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExternsCheck));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ';'  expected	23	None	replace
41	[BUG]  [BUGGY]  if(!sanityCheck)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExternsCheck));  }  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(!sanityCheck)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExternsCheck));  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(!sanityCheck)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExternsCheck));  }	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ';'  expected	23	None	replace
42	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExterns  [CE]  ')'  expected  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExterns  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExterns	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ')'  expected	23	None	replace
43	[BUG]  [BUGGY]  if(currInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExternsCheck));  }  [CE]  ';'  expected  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExternsCheck));  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExternsCheck));  }	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ';'  expected	23	None	replace
44	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR);  [CE]  cannot  find  symbol  currModule  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR);	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR    	non-compiled	[CE]  cannot  find  symbol  currModule	53	None	replace
45	[BUG]  [BUGGY]  if(currModule!=  currModule)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  currModule)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  currModule)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR    	non-compiled	[CE]  cannot  find  symbol  currModule	53	None	replace
46	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  currModule  ||  currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  currModule  ||  currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR    	non-compiled	[CE]  cannot  find  symbol  currModule	53	None	replace
47	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currMod  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currMod  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currMod	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR    	non-compiled	[CE]  ';'  expected	53	None	replace
48	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  currModule!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  currModule  &&  currModule!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  currModule  &&  currModule!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR    	non-compiled	[CE]  cannot  find  symbol  currModule	53	None	replace
49	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  varInput);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,CompilerInput)  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  varInput);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  varInput);	  NodeTraversal.traverse(compiler,    t,    n,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,CompilerInput)	14	None	replace
50	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  NAME_REFERENCE_IN_EXTERNS_ERROR);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,DiagnosticType)  [FE]                              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  NAME_REFERENCE_IN_EXTERNS_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  NAME_REFERENCE_IN_EXTERNS_ERROR);	  NodeTraversal.traverse(compiler,    t,    n,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,DiagnosticType)	14	None	replace
51	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  n,  parent,  varInput);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,NodeTraversal,Node,Node,CompilerInput)  [FE]                                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  t,  n,  parent,  varInput);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  t,  n,  parent,  varInput);	  NodeTraversal.traverse(compiler,    t,    n,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,NodeTraversal,Node,Node,CompilerInput)	14	None	replace
52	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  t);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,NodeTraversal)  [FE]                                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  t);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  t);	  NodeTraversal.traverse(compiler,    t,    n,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,NodeTraversal)	14	None	replace
53	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  n,  parent,  currInput);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,NodeTraversal,Node,Node,CompilerInput)  [FE]                                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  t,  n,  parent,  currInput);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  t,  n,  parent,  currInput);	  NodeTraversal.traverse(compiler,    t,    n,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,NodeTraversal,Node,Node,CompilerInput)	14	None	replace
54	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  n,  parent,  varModule);  [CE]  cannot  find  symbol  varModule  [FE]                                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  t,  n,  parent,  varModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  t,  n,  parent,  varModule);	  NodeTraversal.traverse(compiler,    t,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  varModule	14	None	replace
55	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_FUNCTION_DECL);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,DiagnosticType)  [FE]                                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_FUNCTION_DECL);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  INVALID_FUNCTION_DECL);	  NodeTraversal.traverse(compiler,    t,    n,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,DiagnosticType)	14	None	replace
56	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  varInput,  currModule);  [CE]  cannot  find  symbol  currModule  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  varInput,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  varInput,  currModule);	  NodeTraversal.traverse(compiler,    t,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  currModule	46	None	replace
57	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  varModule,  currModule);  [CE]  cannot  find  symbol  varModule  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  t,  varModule,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  t,  varModule,  currModule);	  NodeTraversal.traverse(compiler,    t,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  varModule	46	None	replace
58	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  currInput,  varModule);  [CE]  cannot  find  symbol  varModule  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  t,  currInput,  varModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  t,  currInput,  varModule);	  NodeTraversal.traverse(compiler,    t,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  varModule	46	None	replace
59	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  varModule,  currInput);  [CE]  cannot  find  symbol  varModule  [FE]                              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  t,  varModule,  currInput);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  t,  varModule,  currInput);	  NodeTraversal.traverse(compiler,    t,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  varModule	46	None	replace
60	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  varInput,  moduleGraph);  [CE]  cannot  find  symbol  moduleGraph  [FE]                                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  t,  varInput,  moduleGraph);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  t,  varInput,  moduleGraph);	  NodeTraversal.traverse(compiler,    t,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	46	None	replace
61	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  parent,  varModule);  [CE]  cannot  find  symbol  varModule  [FE]                                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  t,  parent,  varModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  t,  parent,  varModule);	  NodeTraversal.traverse(compiler,    t,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  varModule	46	None	replace
62	[BUG]  [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	19	None	replace
63	[BUG]  [BUGGY]  if(currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	19	None	replace
64	[BUG]  [BUGGY]  if(currModule!=  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	19	None	replace
65	[BUG]  [BUGGY]  if(currModule  ==  currModule)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule  ==  currModule)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule  ==  currModule)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	19	None	replace
66	[BUG]  [BUGGY]  if(currModule  ==  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule  ==  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule  ==  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	19	None	replace
67	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  parent.getParent();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  parent.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  parent.getParent();	  JSModule    currModule    =    currInput,    varInput.getParent();    	non-compiled	[CE]  ';'  expected	1	None	replace
68	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  varInput.getName();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  varInput.getName();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  varInput.getName();	  JSModule    currModule    =    currInput,    varInput.getParent();    	non-compiled	[CE]  ';'  expected	1	None	replace
69	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  varInput.getNext();  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  varInput.getNext();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  varInput.getNext();	  JSModule    currModule    =    currInput,    varInput.getParent();    	non-compiled	[CE]  ';'  expected	1	None	replace
70	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  varInput.getLastChild();  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  varInput.getLastChild();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  varInput.getLastChild();	  JSModule    currModule    =    currInput,    varInput.getParent();    	non-compiled	[CE]  ';'  expected	1	None	replace
71	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  currInput.getParent();  [CE]  ';'  expected  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  currInput.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  currInput.getParent();	  JSModule    currModule    =    currInput,    varInput.getParent();    	non-compiled	[CE]  ';'  expected	1	None	replace
72	[BUG]  [BUGGY]  Module  varModule  =  currInput.getModule();  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  Module  varModule  =  currInput.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	Module  varModule  =  currInput.getModule();	  JSModule    varModule    =    currInput.getModule();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
73	[BUG]  [BUGGY]  Module  currModule  =  currInput.getModule();  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  Module  currModule  =  currInput.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	Module  currModule  =  currInput.getModule();	  JSModule    varModule    =    currInput.getModule();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
74	[BUG]  [BUGGY]  JSModule  currModule  =  compiler.toModule();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  compiler.toModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  compiler.toModule();	  JSModule    currModule    =    curr.toModule();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
75	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getNext();  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getNext();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getNext();	  JSModule    currModule    =    varInput.getParent();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
76	[BUG]  [BUGGY]  Node  externs  =  currInput.getParent();  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  Node  externs  =  currInput.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	Node  externs  =  currInput.getParent();	  Node    externs    =    varInput.getParent();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
77	[BUG]  [BUGGY]  Node  externs  =  n.getParent();  [CE]  cannot  find  symbol  currModule  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  Node  externs  =  n.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	Node  externs  =  n.getParent();	  Node    externs    =    varInput.getParent();    	non-compiled	[CE]  cannot  find  symbol  currModule	59	None	replace
78	[BUG]  [BUGGY]  Node  externs  =  varInput.getExterns();  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  Node  externs  =  varInput.getExterns();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	Node  externs  =  varInput.getExterns();	  Node    externs    =    varInput.getParent();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
79	[BUG]  [BUGGY]  Node  externs  =  parent.getParent();  [CE]  cannot  find  symbol  currModule  [FE]                              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  Node  externs  =  parent.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	Node  externs  =  parent.getParent();	  Node    externs    =    varInput.getParent();    	non-compiled	[CE]  cannot  find  symbol  currModule	59	None	replace
80	[BUG]  [BUGGY]  Node  externs  =  varInput.getNext();  [CE]  cannot  find  symbol  [FE]                                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  Node  externs  =  varInput.getNext();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	Node  externs  =  varInput.getNext();	  Node    externs    =    varInput.getParent();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
81	[BUG]  [BUGGY]  Node  externs  =  varInput.getExtern();  [CE]  cannot  find  symbol  [FE]                                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  Node  externs  =  varInput.getExtern();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	Node  externs  =  varInput.getExtern();	  Node    externs    =    varInput.getParent();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
82	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  currInput,  new  NameRefInExternsCheck());  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,CompilerInput,VarCheck.NameRefInExternsCheck)  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  currInput,  new  NameRefInExternsCheck());  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  varInput,  currInput,  new  NameRefInExternsCheck());	  NodeTraversal.traverse(compiler,    varInput,    new    NameRefInExternsCheck());    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,CompilerInput,VarCheck.NameRefInExternsCheck)	47	None	replace
83	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  varInput,  new  NameRefInExternsCheck());  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,CompilerInput,VarCheck.NameRefInExternsCheck)  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  varInput,  new  NameRefInExternsCheck());  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  varInput,  new  NameRefInExternsCheck());	  NodeTraversal.traverse(compiler,    varInput,    new    NameRefInExternsCheck());    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,CompilerInput,VarCheck.NameRefInExternsCheck)	47	None	replace
84	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  NameRefInExternsCheck());  [CE]  cannot  find  symbol  currModule  [FE]                              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  NameRefInExternsCheck());  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  new  NameRefInExternsCheck());	  NodeTraversal.traverse(compiler,    varInput,    new    NameRefInExternsCheck());    	non-compiled	[CE]  cannot  find  symbol  currModule	47	None	replace
85	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck(),  t);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,VarCheck.NameRefInExternsCheck,NodeTraversal)  [FE]                                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck(),  t);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck(),  t);	  NodeTraversal.traverse(compiler,    varInput,    new    NameRefInExternsCheck());    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,VarCheck.NameRefInExternsCheck,NodeTraversal)	47	None	replace
86	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck(currInput));  [CE]  constructor  NameRefInExternsCheck  in  class  VarCheck.NameRefInExternsCheck  cannot  be  applied  to  given  types;  [FE]                                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck(currInput));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck(currInput));	  NodeTraversal.traverse(compiler,    varInput,    new    NameRefInExternsCheck());    	non-compiled	[CE]  constructor  NameRefInExternsCheck  in  class  VarCheck.NameRefInExternsCheck  cannot  be  applied  to  given  types;	47	None	replace
87	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  currInput,  new  NameRefInExternsCheck());  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,VarCheck.NameRefInExternsCheck)  [FE]                                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  currInput,  new  NameRefInExternsCheck());  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  currInput,  new  NameRefInExternsCheck());	  NodeTraversal.traverse(compiler,    varInput,    new    NameRefInExternsCheck());    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,VarCheck.NameRefInExternsCheck)	47	None	replace
88	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck(),  currInput);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,VarCheck.NameRefInExternsCheck,CompilerInput)  [FE]                                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck(),  currInput);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck(),  currInput);	  NodeTraversal.traverse(compiler,    varInput,    new    NameRefInExternsCheck());    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,VarCheck.NameRefInExternsCheck,CompilerInput)	47	None	replace
89	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  var.getCompiler();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  var.getCompiler();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  var.getCompiler();	  JSModule    currModule    =    currInput,    varInput.getCompiler();    	non-compiled	[CE]  ';'  expected	60	None	replace
90	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  compiler.getCompiler();  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  compiler.getCompiler();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  compiler.getCompiler();	  JSModule    currModule    =    currInput,    varInput.getCompiler();    	non-compiled	[CE]  ';'  expected	60	None	replace
91	[BUG]  [BUGGY]  JavaModule  currModule  =  varInput.getModule();  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JavaModule  currModule  =  varInput.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JavaModule  currModule  =  varInput.getModule();	  JavaModule    currModule    =    currInput.getModule();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
92	[BUG]  [BUGGY]  JavaModule  currModule  =  curr.getModule();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JavaModule  currModule  =  curr.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JavaModule  currModule  =  curr.getModule();	  JavaModule    currModule    =    currInput.getModule();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
93	[BUG]  [BUGGY]  JavaModule  currModule  =  currInput,  t.getModule();  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JavaModule  currModule  =  currInput,  t.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JavaModule  currModule  =  currInput,  t.getModule();	  JavaModule    currModule    =    currInput.getModule();    	non-compiled	[CE]  ';'  expected	38	None	replace
94	[BUG]  [BUGGY]  JavaModule  currModule  =  currInput,  varInput.getModule();  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JavaModule  currModule  =  currInput,  varInput.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JavaModule  currModule  =  currInput,  varInput.getModule();	  JavaModule    currModule    =    currInput.getModule();    	non-compiled	[CE]  ';'  expected	38	None	replace
95	[BUG]  [BUGGY]  JavaModule  currModule  =  var.getModule();  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JavaModule  currModule  =  var.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JavaModule  currModule  =  var.getModule();	  JavaModule    currModule    =    currInput.getModule();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
96	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  currModule  ||  currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  currModule  ||  currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	18	None	replace
97	[BUG]  [BUGGY]  n  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  [CE]  incompatible  types  [FE]          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  n  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	n  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  incompatible  types	18	None	replace
98	[BUG]  [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  {  compiler.reportCodeChange();  }  [CE]  cannot  find  symbol  currModule  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  {  compiler.reportCodeChange();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	18	None	replace
99	[BUG]  [BUGGY]  JSModule  currModule  =  varInput,  t.getModuleReference();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  varInput,  t.getModuleReference();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  varInput,  t.getModuleReference();	  JSModule    currModule    =    currInput,    t.getModuleReference();    	non-compiled	[CE]  ';'  expected	16	None	replace
100	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  t.getModule();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  t.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  t.getModule();	  JSModule    currModule    =    currInput,    t.getModuleReference();    	non-compiled	[CE]  ';'  expected	16	None	replace
101	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR);  [CE]  cannot  find  symbol  currModule  [FE]          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR);	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    STRICT_MODULE_DEP_ERROR    	non-compiled	[CE]  cannot  find  symbol  currModule	52	None	replace
102	[BUG]  [BUGGY]  JSModule  currModule  =  varInput,  t.getCompiler();  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  varInput,  t.getCompiler();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  varInput,  t.getCompiler();	  JSModule    currModule    =    currInput,    t.getCompiler();    	non-compiled	[CE]  ';'  expected	27	None	replace
103	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  t.getReferenceName();  [CE]  ';'  expected  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  t.getReferenceName();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  t.getReferenceName();	  JSModule    currModule    =    currInput,    t.getCompiler();    	non-compiled	[CE]  ';'  expected	27	None	replace
104	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  currModule);  [CE]  cannot  find  symbol  currModule  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  currModule);	  NodeTraversal.traverse(compiler,    n,    parent,    varModule);    	non-compiled	[CE]  cannot  find  symbol  currModule	13	None	replace
105	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  currInput);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,CompilerInput)  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  currInput);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  currInput);	  NodeTraversal.traverse(compiler,    n,    parent,    varModule);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,CompilerInput)	13	None	replace
106	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  MAXIMIZED_MODULE_DEP_ERROR);  [CE]  cannot  find  symbol  MAXIMIZED_MODULE_DEP_ERROR  [FE]                              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  MAXIMIZED_MODULE_DEP_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  MAXIMIZED_MODULE_DEP_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    varModule);    	non-compiled	[CE]  cannot  find  symbol  MAXIMIZED_MODULE_DEP_ERROR	13	None	replace
107	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  MAXIMUM_REFERENCE_IN_EXTERNS_ERROR);  [CE]  cannot  find  symbol  MAXIMUM_REFERENCE_IN_EXTERNS_ERROR  [FE]                                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  MAXIMUM_REFERENCE_IN_EXTERNS_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  MAXIMUM_REFERENCE_IN_EXTERNS_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    varModule);    	non-compiled	[CE]  cannot  find  symbol  MAXIMUM_REFERENCE_IN_EXTERNS_ERROR	13	None	replace
108	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  sourceModule);  [CE]  cannot  find  symbol  sourceModule  [FE]                                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  sourceModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  sourceModule);	  NodeTraversal.traverse(compiler,    n,    parent,    varModule);    	non-compiled	[CE]  cannot  find  symbol  sourceModule	13	None	replace
109	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  null);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,<null>)  [FE]                                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  null);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  null);	  NodeTraversal.traverse(compiler,    n,    parent,    varModule);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,<null>)	13	None	replace
110	[BUG]  [BUGGY]  JSModule  varModule  =  currInput.getModuleReference();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  varModule  =  currInput.getModuleReference();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  varModule  =  currInput.getModuleReference();	  JSModule    currModule    =    varInput.getModuleReference();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
111	[BUG]  [BUGGY]  JSModule  currModule  =  varInput.getModuleRef();  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  varInput.getModuleRef();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  varInput.getModuleRef();	  JSModule    currModule    =    varInput.getModuleReference();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
112	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currInput,  varInput.getParent();  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  varsToDeclareInExterns  =  currInput,  varInput.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	varsToDeclareInExterns  =  currInput,  varInput.getParent();	  varsToDeclareInExterns    =    currInput.getParent();    	non-compiled	[CE]  ';'  expected	45	None	replace
113	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currInput,  t.getParent();  [CE]  ';'  expected  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  varsToDeclareInExterns  =  currInput,  t.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	varsToDeclareInExterns  =  currInput,  t.getParent();	  varsToDeclareInExterns    =    currInput.getParent();    	non-compiled	[CE]  ';'  expected	45	None	replace
114	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currInput.getNext();  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  varsToDeclareInExterns  =  currInput.getNext();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	varsToDeclareInExterns  =  currInput.getNext();	  varsToDeclareInExterns    =    currInput.getParent();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
115	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currInput.getName();  [CE]  incompatible  types  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  varsToDeclareInExterns  =  currInput.getName();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	varsToDeclareInExterns  =  currInput.getName();	  varsToDeclareInExterns    =    currInput.getParent();    	non-compiled	[CE]  incompatible  types	45	None	replace
116	[BUG]  [BUGGY]  varsToDeclareInExterns  =  curr.getParent();  [CE]  cannot  find  symbol  curr  [FE]                              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  varsToDeclareInExterns  =  curr.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	varsToDeclareInExterns  =  curr.getParent();	  varsToDeclareInExterns    =    currInput.getParent();    	non-compiled	[CE]  cannot  find  symbol  curr	45	None	replace
117	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currInput,  compiler.getParent();  [CE]  ';'  expected  [FE]                                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  varsToDeclareInExterns  =  currInput,  compiler.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	varsToDeclareInExterns  =  currInput,  compiler.getParent();	  varsToDeclareInExterns    =    currInput.getParent();    	non-compiled	[CE]  ';'  expected	45	None	replace
118	[BUG]  [BUGGY]  JSModule  currModule  =  compiler.getModule(currInput);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  compiler.getModule(currInput);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  compiler.getModule(currInput);	  JSModule    currModule    =    compiler.getModule();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
119	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  t.getName();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  t.getName();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  t.getName();	  JSModule    currModule    =    currInput,    t.getParent();    	non-compiled	[CE]  ';'  expected	2	None	replace
120	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  t.getNext();  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  t.getNext();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  t.getNext();	  JSModule    currModule    =    currInput,    t.getParent();    	non-compiled	[CE]  ';'  expected	2	None	replace
121	[BUG]  [BUGGY]  JSModule  currModule  =  varInput,  t.getParent();  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  varInput,  t.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  varInput,  t.getParent();	  JSModule    currModule    =    currInput,    t.getParent();    	non-compiled	[CE]  ';'  expected	2	None	replace
122	[BUG]  [BUGGY]  JSModule  currModule  =  varInput.getModule()  /  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  varInput.getModule()  /  1;  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  varInput.getModule()  /  1;	  JSModule    currModule    =    currInput.getModule()    /    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	6	None	replace
123	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule()  /  2;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule()  /  2;  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule()  /  2;	  JSModule    currModule    =    currInput.getModule()    /    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	6	None	replace
124	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck);  [CE]  cannot  find  symbol  nameRefInExternsCheck  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR,    nameRefInExternsCheck);    	non-compiled	[CE]  cannot  find  symbol  nameRefInExternsCheck	35	None	replace
125	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck);  [CE]  cannot  find  symbol  currModule  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR,    nameRefInExternsCheck);    	non-compiled	[CE]  cannot  find  symbol  currModule	35	None	replace
126	[BUG]  [BUGGY]  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [CE]  no  suitable  method  found  for  make(NodeTraversal,CompilerInput,JSModule,DiagnosticType,JSModule)  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR,    nameRefInExternsCheck);    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,CompilerInput,JSModule,DiagnosticType,JSModule)	35	None	replace
127	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  null);  [CE]  no  suitable  method  found  for  make(NodeTraversal,CompilerInput,JSModule,DiagnosticType,<null>)  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  null);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  null);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR,    nameRefInExternsCheck);    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,CompilerInput,JSModule,DiagnosticType,<null>)	35	None	replace
128	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  [CE]  ')'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR,    nameRefInExternsCheck);    	non-compiled	[CE]  ')'  expected	35	None	replace
129	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  sanityCheck);  [CE]  no  suitable  method  found  for  make(NodeTraversal,CompilerInput,JSModule,DiagnosticType,boolean)  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  sanityCheck);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  sanityCheck);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR,    nameRefInExternsCheck);    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,CompilerInput,JSModule,DiagnosticType,boolean)	35	None	replace
130	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currModule));  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    INVALID_FUNCTION_DECL,    currModule));    	non-compiled	[CE]  ';'  expected	37	None	replace
131	[BUG]  [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currModule));  }  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currModule));  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currModule));  }	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    INVALID_FUNCTION_DECL,    currModule));    	non-compiled	[CE]  ';'  expected	37	None	replace
132	[BUG]  [BUGGY]  if(currInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currModule));  }  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currModule));  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currModule));  }	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    INVALID_FUNCTION_DECL,    currModule));    	non-compiled	[CE]  ';'  expected	37	None	replace
133	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currInput);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currInput);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currInput);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currInput);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	58	None	replace
134	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currInput,  NAME_REFERENCE_IN_EXTERNS_ERROR);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currInput,  NAME_REFERENCE_IN_EXTERNS_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currInput,  NAME_REFERENCE_IN_EXTERNS_ERROR);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currInput);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	58	None	replace
135	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  varInput,  currInput);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  varInput,  currInput);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  varInput,  currInput);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currInput);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	58	None	replace
136	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currInput,  varModule);  [CE]  cannot  find  symbol  varModule  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currInput,  varModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currInput,  varModule);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currInput);    	non-compiled	[CE]  cannot  find  symbol  varModule	58	None	replace
137	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currInput,  UNDEFINED_MODULE_DEP_ERROR);  [CE]  cannot  find  symbol  UNDEFINED_MODULE_DEP_ERROR  [FE]                              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currInput,  UNDEFINED_MODULE_DEP_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currInput,  UNDEFINED_MODULE_DEP_ERROR);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currInput);    	non-compiled	[CE]  cannot  find  symbol  UNDEFINED_MODULE_DEP_ERROR	58	None	replace
138	[BUG]  [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR);    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	54	None	replace
139	[BUG]  [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  cannot  find  symbol  moduleGraph  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(moduleGraph!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR);    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	54	None	replace
140	[BUG]  [BUGGY]  if(scope.isGlobal())  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(scope.isGlobal())  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(scope.isGlobal())  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR);    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	54	None	replace
141	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR);  [CE]  cannot  find  symbol  currModule  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR);	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR);    	non-compiled	[CE]  cannot  find  symbol  currModule	54	None	replace
142	[BUG]  [BUGGY]  if(scope.isGlobal())  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  if(currModule!=  currModule  &&  [CE]  ')'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(scope.isGlobal())  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  if(currModule!=  currModule  &&  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(scope.isGlobal())  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  if(currModule!=  currModule  &&	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR);    	non-compiled	[CE]  ')'  expected	54	None	replace
143	[BUG]  [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  cannot  find  symbol  moduleGraph  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR);    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	54	None	replace
144	[BUG]  [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  if(currModule!=  currModule  &&  [CE]  ')'  expected  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  if(currModule!=  currModule  &&  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(moduleGraph!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  if(currModule!=  currModule  &&	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR);    	non-compiled	[CE]  ')'  expected	54	None	replace
145	[BUG]  [BUGGY]  JSError.JSModule  currModule  =  currInput.getModule();  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.JSModule  currModule  =  currInput.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.JSModule  currModule  =  currInput.getModule();	  JSModule    currModule    =    currOutput.getModule();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
146	[BUG]  [BUGGY]  JSModule  currModule  =  currRefInput.getModule();  [CE]  cannot  find  symbol  currRefInput  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currRefInput.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currRefInput.getModule();	  JSModule    currModule    =    currOutput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currRefInput	7	None	replace
147	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  null));  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  null));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  null));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    null));    	non-compiled	[CE]  ';'  expected	24	None	replace
148	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  null));  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  null));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  null));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    null));    	non-compiled	[CE]  ';'  expected	24	None	replace
149	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  null  [CE]  ')'  expected  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  null  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  null	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    null));    	non-compiled	[CE]  ')'  expected	24	None	replace
150	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nu  [CE]  ')'  expected  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nu  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nu	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    null));    	non-compiled	[CE]  ')'  expected	24	None	replace
151	[BUG]  [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nu  [CE]  ')'  expected  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nu  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nu	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    null));    	non-compiled	[CE]  ')'  expected	24	None	replace
152	[BUG]  [BUGGY]  String  varName  =  currInput.getString()  + ": ";  [CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  String  varName  =  currInput.getString()  + ": ";  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	String  varName  =  currInput.getString()  + ": ";	  String    varName    =    currInput.getString();    	non-compiled	[CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	12	None	replace
153	[BUG]  [BUGGY]  String  varName  =  currInput.getQualifiedName();  [CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  String  varName  =  currInput.getQualifiedName();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	String  varName  =  currInput.getQualifiedName();	  String    varName    =    currInput.getString();    	non-compiled	[CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	12	None	replace
154	[BUG]  [BUGGY]  String  varName  =  currInput.getString()  + "n ";  [CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  String  varName  =  currInput.getString()  + "n ";  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	String  varName  =  currInput.getString()  + "n ";	  String    varName    =    currInput.getString();    	non-compiled	[CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	12	None	replace
155	[BUG]  [BUGGY]  String  varName  =  currInput.getString()  + "_ ";  [CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  String  varName  =  currInput.getString()  + "_ ";  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	String  varName  =  currInput.getString()  + "_ ";	  String    varName    =    currInput.getString();    	non-compiled	[CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	12	None	replace
156	[BUG]  [BUGGY]  String  varName  =  currInput.getString()  + ";n ";  [CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  String  varName  =  currInput.getString()  + ";n ";  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	String  varName  =  currInput.getString()  + ";n ";	  String    varName    =    currInput.getString();    	non-compiled	[CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	12	None	replace
157	[BUG]  [BUGGY]  String  varName  =  currInput.toString();  [CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  String  varName  =  currInput.toString();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	String  varName  =  currInput.toString();	  String    varName    =    currInput.getString();    	non-compiled	[CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	12	None	replace
158	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  curr  [CE]  ';'  expected  [FE]        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  curr  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  curr	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR    	non-compiled	[CE]  ';'  expected	51	None	replace
159	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR));  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR));    	non-compiled	[CE]  ';'  expected	21	None	replace
160	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR));  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR));    	non-compiled	[CE]  ';'  expected	21	None	replace
161	[BUG]  [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR));  }  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR));  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR));  }	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR));    	non-compiled	[CE]  ';'  expected	21	None	replace
162	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currModule));  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR));    	non-compiled	[CE]  ';'  expected	21	None	replace
163	[BUG]  [BUGGY]  CompilerInput  currInput  =  currInput.getInput();  [CE]  variable  currInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  CompilerInput  currInput  =  currInput.getInput();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	CompilerInput  currInput  =  currInput.getInput();	  CompilerInput    varInput    =    currInput.getInput();    	non-compiled	[CE]  variable  currInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	44	None	replace
164	[BUG]  [BUGGY]  CompilerInput  currInput  =  varInput.getInput();  [CE]  variable  currInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  CompilerInput  currInput  =  varInput.getInput();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	CompilerInput  currInput  =  varInput.getInput();	  CompilerInput    varInput    =    currInput.getInput();    	non-compiled	[CE]  variable  currInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	44	None	replace
165	[BUG]  [BUGGY]  CompilerInput  currInput  =  t.getInput();  [CE]  variable  currInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  CompilerInput  currInput  =  t.getInput();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	CompilerInput  currInput  =  t.getInput();	  CompilerInput    varInput    =    currInput.getInput();    	non-compiled	[CE]  variable  currInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	44	None	replace
166	[BUG]  [BUGGY]  CompilerInput  currInput  =  curr.getInput();  [CE]  variable  currInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  CompilerInput  currInput  =  curr.getInput();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	CompilerInput  currInput  =  curr.getInput();	  CompilerInput    varInput    =    currInput.getInput();    	non-compiled	[CE]  variable  currInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	44	None	replace
167	[BUG]  [BUGGY]  CompilerInput  varInput  =  curr.getInput();  [CE]  variable  varInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  CompilerInput  varInput  =  curr.getInput();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	CompilerInput  varInput  =  curr.getInput();	  CompilerInput    varInput    =    currInput.getInput();    	non-compiled	[CE]  variable  varInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	44	None	replace
168	[BUG]  [BUGGY]  CompilerInput  currInput  =  var.getInput();  [CE]  variable  currInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  CompilerInput  currInput  =  var.getInput();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	CompilerInput  currInput  =  var.getInput();	  CompilerInput    varInput    =    currInput.getInput();    	non-compiled	[CE]  variable  currInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	44	None	replace
169	[BUG]  [BUGGY]  JSError  currModule  =  varInput.getModule();  [CE]  incompatible  types  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError  currModule  =  varInput.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError  currModule  =  varInput.getModule();	  JSError    currModule    =    currInput.getModule();    	non-compiled	[CE]  incompatible  types	39	None	replace
170	[BUG]  [BUGGY]  JSError  currModule  =  currInput.getModule(),  moduleGraph);  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError  currModule  =  currInput.getModule(),  moduleGraph);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError  currModule  =  currInput.getModule(),  moduleGraph);	  JSError    currModule    =    currInput.getModule();    	non-compiled	[CE]  ';'  expected	39	None	replace
171	[BUG]  [BUGGY]  JSError  currModule  =  currInput.getModule(),  scope);  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError  currModule  =  currInput.getModule(),  scope);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError  currModule  =  currInput.getModule(),  scope);	  JSError    currModule    =    currInput.getModule();    	non-compiled	[CE]  ';'  expected	39	None	replace
172	[BUG]  [BUGGY]  JSError  currModule  =  currInput.getModule(),  moduleGraph;  [CE]  incompatible  types  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError  currModule  =  currInput.getModule(),  moduleGraph;  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError  currModule  =  currInput.getModule(),  moduleGraph;	  JSError    currModule    =    currInput.getModule();    	non-compiled	[CE]  incompatible  types	39	None	replace
173	[BUG]  [BUGGY]  JSError  currModule  =  curr.getModule();  [CE]  cannot  find  symbol  curr  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError  currModule  =  curr.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError  currModule  =  curr.getModule();	  JSError    currModule    =    currInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  curr	39	None	replace
174	[BUG]  [BUGGY]  JSError  currModule  =  currInput.getModule(),  compiler);  [CE]  ';'  expected  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError  currModule  =  currInput.getModule(),  compiler);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError  currModule  =  currInput.getModule(),  compiler);	  JSError    currModule    =    currInput.getModule();    	non-compiled	[CE]  ';'  expected	39	None	replace
175	[BUG]  [BUGGY]  JSModule  currModule  =  currRefInput.getParent();  [CE]  cannot  find  symbol  currRefInput  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currRefInput.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currRefInput.getParent();	  JSModule    currModule    =    currOutput.getParent();    	non-compiled	[CE]  cannot  find  symbol  currRefInput	31	None	replace
176	[BUG]  [BUGGY]  JSModule  currModule  =  compiler.getModuleReference(currInput);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  compiler.getModuleReference(currInput);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  compiler.getModuleReference(currInput);	  JSModule    currModule    =    compiler.getModuleReference();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
177	[BUG]  [BUGGY]  JSModule  currModule  =  moduleGraph.getModuleReference();  [CE]  cannot  find  symbol  moduleGraph  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  moduleGraph.getModuleReference();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  moduleGraph.getModuleReference();	  JSModule    currModule    =    compiler.getModuleReference();    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	43	None	replace
178	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  [CE]  ')'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    	non-compiled	[CE]  ')'  expected	56	None	replace
179	[BUG]  [BUGGY]  ||  currModule!=  null)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  ||  currModule!=  null)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	||  currModule!=  null)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
180	[BUG]  [BUGGY]  t.report(n,  VOLATED_MODULE_DEP_ERROR,  currModule);  [CE]  cannot  find  symbol  VOLATED_MODULE_DEP_ERROR  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  VOLATED_MODULE_DEP_ERROR,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  VOLATED_MODULE_DEP_ERROR,  currModule);	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    	non-compiled	[CE]  cannot  find  symbol  VOLATED_MODULE_DEP_ERROR	56	None	replace
181	[BUG]  [BUGGY]  JSModule  currModule  =  var.getCompiler();  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  var.getCompiler();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  var.getCompiler();	  JSModule    currModule    =    varInput.getCompiler();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
182	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  scope.getRawParent();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  scope.getRawParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  scope.getRawParent();	  JSModule    currModule    =    currInput,    scope.getParent();    	non-compiled	[CE]  ';'  expected	62	None	replace
183	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  scope.getName();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  scope.getName();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  scope.getName();	  JSModule    currModule    =    currInput,    scope.getParent();    	non-compiled	[CE]  ';'  expected	62	None	replace
184	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  scope.getReferenceName();  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  scope.getReferenceName();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  scope.getReferenceName();	  JSModule    currModule    =    currInput,    scope.getParent();    	non-compiled	[CE]  ';'  expected	62	None	replace
185	[BUG]  [BUGGY]  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currInput));  [CE]  ';'  expected  [FE]                              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currInput));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currInput));	  JSError.make(t,    n,    INVALID_FUNCTION_DECL,    currModule));    	non-compiled	[CE]  ';'  expected	49	None	replace
186	[BUG]  [BUGGY]  JSError.make(t,  n,  UNDEFINED_MODULE_DEP_ERROR,  currModule));  [CE]  ';'  expected  [FE]                                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  n,  UNDEFINED_MODULE_DEP_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  n,  UNDEFINED_MODULE_DEP_ERROR,  currModule));	  JSError.make(t,    n,    INVALID_FUNCTION_DECL,    currModule));    	non-compiled	[CE]  ';'  expected	49	None	replace
187	[BUG]  [BUGGY]  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currModule,  MISSING_MODULE_DEP_ERROR));  [CE]  ';'  expected  [FE]                                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currModule,  MISSING_MODULE_DEP_ERROR));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currModule,  MISSING_MODULE_DEP_ERROR));	  JSError.make(t,    n,    INVALID_FUNCTION_DECL,    currModule));    	non-compiled	[CE]  ';'  expected	49	None	replace
188	[BUG]  [BUGGY]  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currInput,  currModule));  [CE]  ';'  expected  [FE]                                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currInput,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currInput,  currModule));	  JSError.make(t,    n,    INVALID_FUNCTION_DECL,    currModule));    	non-compiled	[CE]  ';'  expected	49	None	replace
189	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  varsToDeclareInExterns);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Set<String>)  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  varsToDeclareInExterns);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  varsToDeclareInExterns);	  NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,Set<String>)	10	None	replace
190	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  UNDEFINED_MODULE_DEP_ERROR);  [CE]  cannot  find  symbol  UNDEFINED_MODULE_DEP_ERROR  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  UNDEFINED_MODULE_DEP_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  UNDEFINED_MODULE_DEP_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  UNDEFINED_MODULE_DEP_ERROR	10	None	replace
191	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  t.getModuleRef();  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  t.getModuleRef();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  t.getModuleRef();	  JSModule    currModule    =    currInput.getModuleRef();    	non-compiled	[CE]  ';'  expected	63	None	replace
192	[BUG]  [BUGGY]  JSModule  currModule  =  curr.getModuleRef();  [CE]  cannot  find  symbol  curr  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  curr.getModuleRef();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  curr.getModuleRef();	  JSModule    currModule    =    currInput.getModuleRef();    	non-compiled	[CE]  cannot  find  symbol  curr	63	None	replace
193	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  STRICT_MODULE_DEP_ERROR);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  STRICT_MODULE_DEP_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  STRICT_MODULE_DEP_ERROR);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	57	None	replace
194	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  varInput);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  varInput);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  varInput);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	57	None	replace
195	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  varModule);  [CE]  cannot  find  symbol  varModule  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  varModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  varModule);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  cannot  find  symbol  varModule	57	None	replace
196	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  varModule);  [CE]  cannot  find  symbol  varModule  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  varModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  varInput,  varModule);	  NodeTraversal.traverse(compiler,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  varModule	48	None	replace
197	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  currInput,  varModule);  [CE]  cannot  find  symbol  varModule  [FE]                              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  currInput,  varModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  currInput,  varModule);	  NodeTraversal.traverse(compiler,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  varModule	48	None	replace
198	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  currModule,  parent);  [CE]  cannot  find  symbol  currModule  [FE]                                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  currModule,  parent);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  varInput,  currModule,  parent);	  NodeTraversal.traverse(compiler,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  currModule	48	None	replace
199	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  currModule,  null);  [CE]  cannot  find  symbol  currModule  [FE]                                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  currModule,  null);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  varInput,  currModule,  null);	  NodeTraversal.traverse(compiler,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  currModule	48	None	replace
200	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  moduleGraph);  [CE]  cannot  find  symbol  moduleGraph  [FE]                                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  moduleGraph);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  varInput,  moduleGraph);	  NodeTraversal.traverse(compiler,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	48	None	replace
201	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  currModule,  compiler);  [CE]  cannot  find  symbol  currModule  [FE]                                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  currModule,  compiler);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  varInput,  currModule,  compiler);	  NodeTraversal.traverse(compiler,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  currModule	48	None	replace
202	[BUG]  [BUGGY]  JSModule  currModule  =  t.getCompiler();  [CE]  incompatible  types  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  t.getCompiler();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  t.getCompiler();	  JSModule    currModule    =    compiler.getCompiler();    	non-compiled	[CE]  incompatible  types	26	None	replace
203	[BUG]  [BUGGY]  JSModule  currModule  =  compiler.getCommonCompiler();  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  compiler.getCommonCompiler();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  compiler.getCommonCompiler();	  JSModule    currModule    =    compiler.getCompiler();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
204	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currModule));  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ';'  expected	22	None	replace
205	[BUG]  [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currModule));  }  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currModule));  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currModule));  }	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ';'  expected	22	None	replace
206	[BUG]  [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currMod  [CE]  ')'  expected  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currMod  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currMod	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ')'  expected	22	None	replace
207	[BUG]  [BUGGY]  if(currModule!=  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currModule));  }  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currModule));  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currModule));  }	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ';'  expected	22	None	replace
208	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule()  *  2;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule()  *  2;  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule()  *  2;	  JSModule    currModule    =    currInput.getModule()    *    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	40	None	replace
209	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule(),  varInput.getModule()  *  1;  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule(),  varInput.getModule()  *  1;  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule(),  varInput.getModule()  *  1;	  JSModule    currModule    =    currInput.getModule()    *    1;    	non-compiled	[CE]  ';'  expected	40	None	replace
210	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  extern,  varInput,  currModule);  [CE]  cannot  find  symbol  extern  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  extern,  varInput,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  extern,  varInput,  currModule);	  NodeTraversal.traverse(compiler,    t,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  extern	46	None	replace
211	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  varModule,  currModule);  [CE]  cannot  find  symbol  varModule  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  varModule,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  varModule,  currModule);	  NodeTraversal.traverse(compiler,    t,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  varModule	46	None	replace
212	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  varInput,  sourceModule);  [CE]  cannot  find  symbol  sourceModule  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  t,  varInput,  sourceModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  t,  varInput,  sourceModule);	  NodeTraversal.traverse(compiler,    t,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  sourceModule	46	None	replace
213	[BUG]  [BUGGY]  JSModule  currModule  =  compiler.getScope();  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  compiler.getScope();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  compiler.getScope();	  JSModule    currModule    =    compiler.getCompiler();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
214	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currInput.getNameRefInExterns();  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  varsToDeclareInExterns  =  currInput.getNameRefInExterns();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	varsToDeclareInExterns  =  currInput.getNameRefInExterns();	  varsToDeclareInExterns    =    currInput.getParent();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
215	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currOutput.getParent();  [CE]  cannot  find  symbol  currOutput  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  varsToDeclareInExterns  =  currOutput.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	varsToDeclareInExterns  =  currOutput.getParent();	  varsToDeclareInExterns    =    currInput.getParent();    	non-compiled	[CE]  cannot  find  symbol  currOutput	45	None	replace
216	[BUG]  [BUGGY]  JSError  currModule  =  compiler.getModule();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError  currModule  =  compiler.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError  currModule  =  compiler.getModule();	  JSError    currModule    =    currInput.getModule();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
217	[BUG]  [BUGGY]  JSError  currModule  =  currRefInExterns.getModule();  [CE]  cannot  find  symbol  currRefInExterns  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError  currModule  =  currRefInExterns.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError  currModule  =  currRefInExterns.getModule();	  JSError    currModule    =    currInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currRefInExterns	39	None	replace
218	[BUG]  [BUGGY]  JSError  currModule  =  currInput.getModule(),  null;  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError  currModule  =  currInput.getModule(),  null;  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError  currModule  =  currInput.getModule(),  null;	  JSError    currModule    =    currInput.getModule();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
219	[BUG]  [BUGGY]  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  MISSING_MODULE_DEP_ERROR,  currModule);  [CE]  cannot  find  symbol  currModule  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  MISSING_MODULE_DEP_ERROR,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  n,  INVALID_FUNCTION_DECL,  MISSING_MODULE_DEP_ERROR,  currModule);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  cannot  find  symbol  currModule	36	None	replace
220	[BUG]  [BUGGY]  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  MISSING_MODULE_DEP_ERROR,  currModule);  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,DiagnosticType,JSModule)  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  MISSING_MODULE_DEP_ERROR,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  MISSING_MODULE_DEP_ERROR,  currModule);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,DiagnosticType,JSModule)	36	None	replace
221	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  MISSING_MODULE_DEP_ERROR,  currModule);  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,DiagnosticType,JSModule)  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  MISSING_MODULE_DEP_ERROR,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  MISSING_MODULE_DEP_ERROR,  currModule);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,DiagnosticType,JSModule)	36	None	replace
222	[BUG]  [BUGGY]  JSModule  currModule  =  compiler.getParent();  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  compiler.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  compiler.getParent();	  JSModule    currModule    =    curr.getParent();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
223	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  MISSING_MODULE_DEP_ERROR);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,DiagnosticType)  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  MISSING_MODULE_DEP_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  MISSING_MODULE_DEP_ERROR);	  NodeTraversal.traverse(compiler,    t,    n,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,DiagnosticType)	14	None	replace
224	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  NODE_REFERENCE_IN_EXTERNS_ERROR);  [CE]  cannot  find  symbol  NODE_REFERENCE_IN_EXTERNS_ERROR  [FE]                              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  NODE_REFERENCE_IN_EXTERNS_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  NODE_REFERENCE_IN_EXTERNS_ERROR);	  NodeTraversal.traverse(compiler,    t,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  NODE_REFERENCE_IN_EXTERNS_ERROR	14	None	replace
225	[BUG]  [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [CE]  cannot  find  symbol  moduleGraph  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR);    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	54	None	replace
226	[BUG]  [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR);    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	54	None	replace
227	[BUG]  [BUGGY]  if(varInput  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR);    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	54	None	replace
228	[BUG]  [BUGGY]  if(varInput  ==  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput  ==  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput  ==  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR);    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	54	None	replace
229	[BUG]  [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  {  t.report(n,  VIOLATED_MODULE_DEP  [CE]  ')'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  {  t.report(n,  VIOLATED_MODULE_DEP  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  {  t.report(n,  VIOLATED_MODULE_DEP	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR);    	non-compiled	[CE]  ')'  expected	54	None	replace
230	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck  [CE]  ')'  expected  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  nameRefInExternsCheck	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ')'  expected	34	None	replace
231	[BUG]  [BUGGY]  JSError  currModule  =  currInput.toModule();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError  currModule  =  currInput.toModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError  currModule  =  currInput.toModule();	  JSModule    currModule    =    curr.toModule();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
232	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  compiler);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,AbstractCompiler)  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  compiler);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  varInput,  compiler);	  NodeTraversal.traverse(compiler,    varInput,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,AbstractCompiler)	48	None	replace
233	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule);  [CE]  cannot  find  symbol  currModule  [FE]                              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  currModule);	  NodeTraversal.traverse(compiler,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  currModule	48	None	replace
234	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  sourceModule);  [CE]  cannot  find  symbol  sourceModule  [FE]                                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  sourceModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  varInput,  sourceModule);	  NodeTraversal.traverse(compiler,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  sourceModule	48	None	replace
235	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  currInput.getModuleReference();  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  currInput.getModuleReference();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  currInput.getModuleReference();	  JSModule    currModule    =    currInput,    varInput.getModuleReference();    	non-compiled	[CE]  ';'  expected	42	None	replace
236	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  currInput.getModule();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  currInput.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  currInput.getModule();	  JSModule    currModule    =    currInput,    varInput.getModuleReference();    	non-compiled	[CE]  ';'  expected	42	None	replace
237	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  INVALID_FUNCTION_DECL));  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  INVALID_FUNCTION_DECL));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  INVALID_FUNCTION_DECL));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR));    	non-compiled	[CE]  ';'  expected	21	None	replace
238	[BUG]  [BUGGY]  if(currModule!=  null  ||  currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  null  ||  currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  null  ||  currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    JSModule    varModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	20	None	replace
239	[BUG]  [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    JSModule    varModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	20	None	replace
240	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  null  &&  currModule!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  null  &&  currModule!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    JSModule    varModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	20	None	replace
241	[BUG]  [BUGGY]  if(currModule!=  currModule)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  currModule)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  currModule)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    STRICT_MODULE_DEP_ERROR    	non-compiled	[CE]  cannot  find  symbol  currModule	52	None	replace
242	[BUG]  [BUGGY]  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule);  [CE]  cannot  find  symbol  currModule  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule);	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    STRICT_MODULE_DEP_ERROR    	non-compiled	[CE]  cannot  find  symbol  currModule	52	None	replace
243	[BUG]  [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  VIOLATED_MODULE  [CE]  ')'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  VIOLATED_MODULE  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  VIOLATED_MODULE	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    STRICT_MODULE_DEP_ERROR    	non-compiled	[CE]  ')'  expected	52	None	replace
244	[BUG]  [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  VIOLATED  [CE]  ')'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  VIOLATED  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  VIOLATED	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    STRICT_MODULE_DEP_ERROR    	non-compiled	[CE]  ')'  expected	52	None	replace
245	[BUG]  [BUGGY]  CompilerInput  varInput  =  currInput.getInputParent();  [CE]  variable  varInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  CompilerInput  varInput  =  currInput.getInputParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	CompilerInput  varInput  =  currInput.getInputParent();	  CompilerInput    varInput    =    currInput.getInput();    	non-compiled	[CE]  variable  varInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	44	None	replace
246	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  compiler);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,AbstractCompiler)  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  compiler);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  compiler);	  NodeTraversal.traverse(compiler,    n,    parent,    varModule);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,AbstractCompiler)	13	None	replace
247	[BUG]  [BUGGY]  if(currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	18	None	replace
248	[BUG]  [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	56	None	replace
249	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  null  &&  currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  null  &&  currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	19	None	replace
250	[BUG]  [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR));  }  [CE]  ';'  expected  [FE]          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR));  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR));  }	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR));    	non-compiled	[CE]  ';'  expected	33	None	replace
251	[BUG]  [BUGGY]  Node  externs  =  var.getParent();  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  Node  externs  =  var.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	Node  externs  =  var.getParent();	  Node    externs    =    varInput.getParent();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
252	[BUG]  [BUGGY]  Node  externs  =  t.getParent();  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  Node  externs  =  t.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	Node  externs  =  t.getParent();	  Node    externs    =    varInput.getParent();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
253	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule);  [CE]  cannot  find  symbol  currModule  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  cannot  find  symbol  currModule	57	None	replace
254	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  MISSING_MODULE_DEP_ERROR);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  MISSING_MODULE_DEP_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  MISSING_MODULE_DEP_ERROR);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	57	None	replace
255	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [CE]  cannot  find  symbol  currModule  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  cannot  find  symbol  currModule	57	None	replace
256	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  INVALID_FUNCTION_DECL,  null));  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  INVALID_FUNCTION_DECL,  null));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  INVALID_FUNCTION_DECL,  null));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    null));    	non-compiled	[CE]  ';'  expected	24	None	replace
257	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTER,  null));  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTER,  null));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTER,  null));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    null));    	non-compiled	[CE]  ';'  expected	24	None	replace
258	[BUG]  [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  [CE]  ')'  expected  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    null));    	non-compiled	[CE]  ')'  expected	24	None	replace
259	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  INVALID_FUNCTION_DECL,  nameRefInExternsCheck));  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  INVALID_FUNCTION_DECL,  nameRefInExternsCheck));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  INVALID_FUNCTION_DECL,  nameRefInExternsCheck));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ';'  expected	23	None	replace
260	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  NON_GLOBAL_MODULE_DEP_ERROR,  nameRefInExternsCheck));  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  NON_GLOBAL_MODULE_DEP_ERROR,  nameRefInExternsCheck));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  NON_GLOBAL_MODULE_DEP_ERROR,  nameRefInExternsCheck));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ';'  expected	23	None	replace
261	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExternsCheck)  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExternsCheck)  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  nameRefInExternsCheck)	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ';'  expected	23	None	replace
262	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  varInput.getModuleRef();  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  varInput.getModuleRef();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  varInput.getModuleRef();	  JSModule    currModule    =    currInput.getModuleRef();    	non-compiled	[CE]  ';'  expected	63	None	replace
263	[BUG]  [BUGGY]  JSModule  currModule  =  compiler.getModuleRef();  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  compiler.getModuleRef();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  compiler.getModuleRef();	  JSModule    currModule    =    currInput.getModuleRef();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
264	[BUG]  [BUGGY]  JavaModule  currModule  =  compiler.getModule();  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JavaModule  currModule  =  compiler.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JavaModule  currModule  =  compiler.getModule();	  JavaModule    currModule    =    currInput.getModule();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
265	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  t.getSourceName();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  t.getSourceName();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  t.getSourceName();	  JSModule    currModule    =    currInput,    t.getParent();    	non-compiled	[CE]  ';'  expected	2	None	replace
266	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  varInput.getReferenceName();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  varInput.getReferenceName();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  varInput.getReferenceName();	  JSModule    currModule    =    currInput,    varInput.getParent();    	non-compiled	[CE]  ';'  expected	1	None	replace
267	[BUG]  [BUGGY]  JSError.make(t,  n,  STRING_MODULE_DEP_ERROR,  currModule));  [CE]  ';'  expected  [FE]                              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  n,  STRING_MODULE_DEP_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  n,  STRING_MODULE_DEP_ERROR,  currModule));	  JSError.make(t,    n,    INVALID_FUNCTION_DECL,    currModule));    	non-compiled	[CE]  ';'  expected	49	None	replace
268	[BUG]  [BUGGY]  JSError.make(t,  n,  VAR_IN_EXTERNS_ERROR,  currModule));  [CE]  ';'  expected  [FE]                                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  n,  VAR_IN_EXTERNS_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  n,  VAR_IN_EXTERNS_ERROR,  currModule));	  JSError.make(t,    n,    INVALID_FUNCTION_DECL,    currModule));    	non-compiled	[CE]  ';'  expected	49	None	replace
269	[BUG]  [BUGGY]  if(currInput  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currModule));  }  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currInput  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currModule));  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currInput  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  INVALID_FUNCTION_DECL,  currModule));  }	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    INVALID_FUNCTION_DECL,    currModule));    	non-compiled	[CE]  ';'  expected	37	None	replace
270	[BUG]  [BUGGY]  String  varName  =  varInput.getString();  [CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  String  varName  =  varInput.getString();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	String  varName  =  varInput.getString();	  String    varName    =    currInput.getString();    	non-compiled	[CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	12	None	replace
271	[BUG]  [BUGGY]  String  varName  =  currInput.getString()  +  1;  [CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  String  varName  =  currInput.getString()  +  1;  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	String  varName  =  currInput.getString()  +  1;	  String    varName    =    currInput.getString();    	non-compiled	[CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	12	None	replace
272	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currInput);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currInput);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	58	None	replace
273	[BUG]  [BUGGY]  t.report(n,  INVALID_FUNCTION_DECL,  MISSING_MODULE_DEP_ERROR,  currInput);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  INVALID_FUNCTION_DECL,  MISSING_MODULE_DEP_ERROR,  currInput);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  INVALID_FUNCTION_DECL,  MISSING_MODULE_DEP_ERROR,  currInput);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currInput);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	58	None	replace
274	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  scope.getDeclaringModule();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  scope.getDeclaringModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  scope.getDeclaringModule();	  JSModule    currModule    =    currInput,    scope.getParent();    	non-compiled	[CE]  ';'  expected	62	None	replace
275	[BUG]  [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  {  t.report(n,  MISSING_MODULE  [CE]  ')'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  {  t.report(n,  MISSING_MODULE  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  {  t.report(n,  MISSING_MODULE	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    	non-compiled	[CE]  ')'  expected	55	None	replace
276	[BUG]  [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  {  t.report(n,  STRICT_MODU  [CE]  ')'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  {  t.report(n,  STRICT_MODU  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  {  t.report(n,  STRICT_MODU	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    	non-compiled	[CE]  ')'  expected	55	None	replace
277	[BUG]  [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  {  t.report(n,  VIOLATED_MODULE  [CE]  ')'  expected  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  {  t.report(n,  VIOLATED_MODULE  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule.getModule();  }  else  {  t.report(n,  VIOLATED_MODULE	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    	non-compiled	[CE]  ')'  expected	55	None	replace
278	[BUG]  [BUGGY]  JSModule  currModule  =  sourceFile.getModule()  +  1;  [CE]  cannot  find  symbol  sourceFile  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  sourceFile.getModule()  +  1;  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  sourceFile.getModule()  +  1;	  JSModule    currModule    =    varInput.getModule()    +    1;    	non-compiled	[CE]  cannot  find  symbol  sourceFile	5	None	replace
279	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  compiler.getModule();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  compiler.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  compiler.getModule();	  JSModule    currModule    =    currInput,    varInput.getCompiler();    	non-compiled	[CE]  ';'  expected	60	None	replace
280	[BUG]  [BUGGY]  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  strictExternCheck);  [CE]  no  suitable  method  found  for  make(NodeTraversal,CompilerInput,JSModule,DiagnosticType,boolean)  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  strictExternCheck);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  strictExternCheck);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR,    nameRefInExternsCheck);    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,CompilerInput,JSModule,DiagnosticType,boolean)	35	None	replace
281	[BUG]  [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  VIOLATED_MODULE_DEP  [CE]  ')'  expected  [FE]        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  VIOLATED_MODULE_DEP  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  VIOLATED_MODULE_DEP	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR    	non-compiled	[CE]  ')'  expected	51	None	replace
282	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule()  *  4;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule()  *  4;  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule()  *  4;	  JSModule    currModule    =    currInput.getModule()    *    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	40	None	replace
283	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  INVALID_FUNCTION_DECL,  currModule));  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  INVALID_FUNCTION_DECL,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  INVALID_FUNCTION_DECL,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ';'  expected	22	None	replace
284	[BUG]  [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currModul  [CE]  ')'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currModul  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  currModul	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ')'  expected	22	None	replace
285	[BUG]  [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  MISSING_MODULE  [CE]  ')'  expected  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  MISSING_MODULE  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  MISSING_MODULE	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR    	non-compiled	[CE]  ')'  expected	53	None	replace
286	[BUG]  [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  STRICT_MODULE  [CE]  ')'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  STRICT_MODULE  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  STRICT_MODULE	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR    	non-compiled	[CE]  ')'  expected	53	None	replace
287	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [CE]  ';'  expected  [FE]        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ';'  expected	32	None	replace
288	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  STRICT_MODULE_DEP_ERROR,  currModule));  [CE]  ';'  expected  [FE]          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  STRICT_MODULE_DEP_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  n,  STRICT_MODULE_DEP_ERROR,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ';'  expected	32	None	replace
289	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  currInput.toModule();  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  currInput.toModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  currInput.toModule();	  JSModule    currModule    =    currInput,    varInput.toModule();    	non-compiled	[CE]  ';'  expected	50	None	replace
290	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck(),  n);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,VarCheck.NameRefInExternsCheck,Node)  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck(),  n);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  varInput,  new  NameRefInExternsCheck(),  n);	  NodeTraversal.traverse(compiler,    varInput,    new    NameRefInExternsCheck());    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,VarCheck.NameRefInExternsCheck,Node)	47	None	replace
291	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  varInput,  new  NameRefInExternsCheck());  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,NodeTraversal,CompilerInput,VarCheck.NameRefInExternsCheck)  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  t,  varInput,  new  NameRefInExternsCheck());  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  t,  varInput,  new  NameRefInExternsCheck());	  NodeTraversal.traverse(compiler,    varInput,    new    NameRefInExternsCheck());    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,NodeTraversal,CompilerInput,VarCheck.NameRefInExternsCheck)	47	None	replace
292	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  NAME_REFERENCE_IN_EXTERNS_ERROR));  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  NAME_REFERENCE_IN_EXTERNS_ERROR));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  NAME_REFERENCE_IN_EXTERNS_ERROR));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR));    	non-compiled	[CE]  ';'  expected	21	None	replace
293	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  scope));  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  scope));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  scope));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR));    	non-compiled	[CE]  ';'  expected	21	None	replace
294	[BUG]  [BUGGY]  JSModule  currModule  =  curr.getModule()  /  1;  [CE]  cannot  find  symbol  curr  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  curr.getModule()  /  1;  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  curr.getModule()  /  1;	  JSModule    currModule    =    currInput.getModule()    *    1;    	non-compiled	[CE]  cannot  find  symbol  curr	40	None	replace
295	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currInput,  varInput);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currInput,  varInput);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currInput,  varInput);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currInput);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	58	None	replace
296	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currInput,  UNDEFINED_EXTERNS_ERROR);  [CE]  cannot  find  symbol  UNDEFINED_EXTERNS_ERROR  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currInput,  UNDEFINED_EXTERNS_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currInput,  UNDEFINED_EXTERNS_ERROR);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currInput);    	non-compiled	[CE]  cannot  find  symbol  UNDEFINED_EXTERNS_ERROR	58	None	replace
297	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  STRICT_MODULE_DEP_ERROR,  currInput);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  STRICT_MODULE_DEP_ERROR,  currInput);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  STRICT_MODULE_DEP_ERROR,  currInput);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currInput);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	58	None	replace
298	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  varInput,  null);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,NodeTraversal,CompilerInput,<null>)  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  t,  varInput,  null);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  t,  varInput,  null);	  NodeTraversal.traverse(compiler,    t,    varInput,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,NodeTraversal,CompilerInput,<null>)	46	None	replace
299	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  sourceFile,  varModule);  [CE]  cannot  find  symbol  sourceFile  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  t,  sourceFile,  varModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  t,  sourceFile,  varModule);	  NodeTraversal.traverse(compiler,    t,    varInput,    currModule);    	non-compiled	[CE]  cannot  find  symbol  sourceFile	46	None	replace
300	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  varInput.getDeclaringModule();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  varInput.getDeclaringModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  varInput.getDeclaringModule();	  JSModule    currModule    =    currInput,    varInput.getCompiler();    	non-compiled	[CE]  ';'  expected	60	None	replace
301	[BUG]  [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  if(currModule!=  currModule  &&  [CE]  ')'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  if(currModule!=  currModule  &&  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  if(currModule!=  currModule  &&	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR);    	non-compiled	[CE]  ')'  expected	54	None	replace
302	[BUG]  [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  if(currModule!=  currModul  [CE]  ')'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  if(currModule!=  currModul  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  if(currModule!=  currModul	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR);    	non-compiled	[CE]  ')'  expected	54	None	replace
303	[BUG]  [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  if(currModule!=  currModule  &&  curr  [CE]  ')'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  if(currModule!=  currModule  &&  curr  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  if(currModule!=  currModule  &&  curr	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR);    	non-compiled	[CE]  ')'  expected	54	None	replace
304	[BUG]  [BUGGY]  JSError.make(t,  n,  VOLATED_MODULE_DEP_ERROR,  currModule);  [CE]  cannot  find  symbol  VOLATED_MODULE_DEP_ERROR  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  n,  VOLATED_MODULE_DEP_ERROR,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  n,  VOLATED_MODULE_DEP_ERROR,  currModule);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  cannot  find  symbol  VOLATED_MODULE_DEP_ERROR	36	None	replace
305	[BUG]  [BUGGY]  Jünror.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule);  [CE]  cannot  find  symbol  currModule  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  Jünror.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	Jünror.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  cannot  find  symbol  currModule	36	None	replace
306	[BUG]  [BUGGY]  if(currModule!=  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  }  [CE]  ';'  expected  [FE]        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  }	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ';'  expected	32	None	replace
307	[BUG]  [BUGGY]  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));  [CE]  ';'  expected  [FE]          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currInput));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ';'  expected	32	None	replace
308	[BUG]  [BUGGY]  if(currModule!=  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSError.make(t,  n,  MISSING_MODULE_DEP_ERROR,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ';'  expected	32	None	replace
309	[BUG]  [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  STRICT_MODULE  [CE]  ')'  expected  [FE]          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  STRICT_MODULE  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  STRICT_MODULE	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    STRICT_MODULE_DEP_ERROR    	non-compiled	[CE]  ')'  expected	52	None	replace
310	[BUG]  [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  VIOLATED  [CE]  ')'  expected  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  VIOLATED  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(moduleGraph!=  null)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  t.report(n,  VIOLATED	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    STRICT_MODULE_DEP_ERROR    	non-compiled	[CE]  ')'  expected	52	None	replace
311	[BUG]  [BUGGY]  JSModule  varModule  =  curr.getModule();  [CE]  cannot  find  symbol  curr  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  varModule  =  curr.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  varModule  =  curr.getModule();	  JSModule    varModule    =    currInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  curr	11	None	replace
312	[BUG]  [BUGGY]  JSError.make(t,  n,  VAR_MODULE_DEP_ERROR,  currModule));  [CE]  ';'  expected  [FE]                              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  n,  VAR_MODULE_DEP_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  n,  VAR_MODULE_DEP_ERROR,  currModule));	  JSError.make(t,    n,    INVALID_FUNCTION_DECL,    currModule));    	non-compiled	[CE]  ';'  expected	49	None	replace
313	[BUG]  [BUGGY]  JSModule  currModule  =  currClass.getModule();  [CE]  cannot  find  symbol  currClass  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currClass.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currClass.getModule();	  JSModule    currModule    =    currRef.getModule();    	non-compiled	[CE]  cannot  find  symbol  currClass	61	None	replace
314	[BUG]  [BUGGY]  JSModule  currModule  =  currConfig.getModule();  [CE]  cannot  find  symbol  currConfig  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currConfig.getModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currConfig.getModule();	  JSModule    currModule    =    currRef.getModule();    	non-compiled	[CE]  cannot  find  symbol  currConfig	61	None	replace
315	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule));  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    n,    INVALID_FUNCTION_DECL,    currModule));    	non-compiled	[CE]  ';'  expected	37	None	replace
316	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  strictExternCheck));  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  strictExternCheck));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  strictExternCheck));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    nameRefInExternsCheck));    	non-compiled	[CE]  ';'  expected	23	None	replace
317	[BUG]  [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule);  [CE]  cannot  find  symbol  DUPLICATED_MODULE_DEP_ERROR  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule);	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR    	non-compiled	[CE]  cannot  find  symbol  DUPLICATED_MODULE_DEP_ERROR	53	None	replace
318	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  t.getModuleDeclaration();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  t.getModuleDeclaration();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  t.getModuleDeclaration();	  JSModule    currModule    =    currInput,    t.getModuleReference();    	non-compiled	[CE]  ';'  expected	16	None	replace
319	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  MAXIMUM_MODULE_DEP_ERROR);  [CE]  cannot  find  symbol  MAXIMUM_MODULE_DEP_ERROR  [FE]                          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  MAXIMUM_MODULE_DEP_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  MAXIMUM_MODULE_DEP_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    varModule);    	non-compiled	[CE]  cannot  find  symbol  MAXIMUM_MODULE_DEP_ERROR	13	None	replace
320	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  MAXIMUM_VAR_ERROR);  [CE]  cannot  find  symbol  MAXIMUM_VAR_ERROR  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  MAXIMUM_VAR_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  MAXIMUM_VAR_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    varModule);    	non-compiled	[CE]  cannot  find  symbol  MAXIMUM_VAR_ERROR	13	None	replace
321	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  NAME_REFERENCE_IN_EXTER));  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  NAME_REFERENCE_IN_EXTER));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  MISSING_MODULE_DEP_ERROR,  NAME_REFERENCE_IN_EXTER));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    null));    	non-compiled	[CE]  ';'  expected	24	None	replace
322	[BUG]  [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  [CE]  ')'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  DUPLICATED_MODULE_DEP_ERROR,	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    	non-compiled	[CE]  ')'  expected	55	None	replace
323	[BUG]  [BUGGY]  t.report(n,  NON_GLOBAL_MODULE_DEP_ERROR,  [CE]  ')'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  t.report(n,  NON_GLOBAL_MODULE_DEP_ERROR,  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	t.report(n,  NON_GLOBAL_MODULE_DEP_ERROR,	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    	non-compiled	[CE]  ')'  expected	55	None	replace
324	[BUG]  [BUGGY]  n.getLineno(),  n.getLineno());  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  n.getLineno(),  n.getLineno());  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	n.getLineno(),  n.getLineno());	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    else    if(currModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    	non-compiled	[CE]  ';'  expected	55	None	replace
325	[BUG]  [BUGGY]  JSModule  currModule  =  currinput.getParent();  [CE]  cannot  find  symbol  currinput  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currinput.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currinput.getParent();	  JSModule    currModule    =    currOutput.getParent();    	non-compiled	[CE]  cannot  find  symbol  currinput	31	None	replace
326	[BUG]  [BUGGY]  Node  externs  =  varInput,  currInput.getParent();  [CE]  ';'  expected  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  Node  externs  =  varInput,  currInput.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	Node  externs  =  varInput,  currInput.getParent();	  Node    externs    =    varInput.getParent();    	non-compiled	[CE]  ';'  expected	59	None	replace
327	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  varInput.getRawParent();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  varInput.getRawParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  varInput.getRawParent();	  JSModule    currModule    =    currInput,    varInput.getParent();    	non-compiled	[CE]  ';'  expected	1	None	replace
328	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  varInput.getRootNode();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  varInput.getRootNode();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  varInput.getRootNode();	  JSModule    currModule    =    currInput,    varInput.getParent();    	non-compiled	[CE]  ';'  expected	1	None	replace
329	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  moduleGraph.getModuleReference();  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  moduleGraph.getModuleReference();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  moduleGraph.getModuleReference();	  JSModule    currModule    =    currInput,    varInput.getModuleReference();    	non-compiled	[CE]  ';'  expected	42	None	replace
330	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_MODULE_DEP_ERROR);  [CE]  cannot  find  symbol  INVALID_MODULE_DEP_ERROR  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_MODULE_DEP_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  INVALID_MODULE_DEP_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  INVALID_MODULE_DEP_ERROR	10	None	replace
331	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,VarCheck)  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  this);	  NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,VarCheck)	10	None	replace
332	[BUG]  [BUGGY]  JSModule  currModule  =  currRef.getParent();  [CE]  cannot  find  symbol  currRef  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currRef.getParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currRef.getParent();	  JSModule    currModule    =    curr.getParent();    	non-compiled	[CE]  cannot  find  symbol  currRef	4	None	replace
333	[BUG]  [BUGGY]  if(currModule  ==  currModule)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule  ==  currModule)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule  ==  currModule)  {  JSModule  currModule  =  currInput.getModule();  JSModule  currModule  =  currInput.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    JSModule    varModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	20	None	replace
334	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  varInput  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  currModule  &&  varInput  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  currModule  &&  varInput  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    JSModule    varModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	20	None	replace
335	[BUG]  [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  varModule  =  currInput.getModule();  }  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  varModule  =  currInput.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput!=  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  else  {  varModule  =  currInput.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    JSModule    varModule    =    varInput.getModule();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	20	None	replace
336	[BUG]  [BUGGY]  if(varInput  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(varInput  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(varInput  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    JSModule    varModule    =    varInput.getModule();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	20	None	replace
337	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  scope.getRootNode();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  scope.getRootNode();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  scope.getRootNode();	  JSModule    currModule    =    currInput,    scope.getParent();    	non-compiled	[CE]  ';'  expected	62	None	replace
338	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  scope.getNameNode();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  scope.getNameNode();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  scope.getNameNode();	  JSModule    currModule    =    currInput,    scope.getParent();    	non-compiled	[CE]  ';'  expected	62	None	replace
339	[BUG]  [BUGGY]  CompilerInput  currInput  =  n.getInput();  [CE]  variable  currInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                    RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  CompilerInput  currInput  =  n.getInput();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	CompilerInput  currInput  =  n.getInput();	  CompilerInput    varInput    =    currInput.getInput();    	non-compiled	[CE]  variable  currInput  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	44	None	replace
340	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  MISSING_MODULE_DEP_ERROR));  [CE]  ';'  expected  [FE]          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  MISSING_MODULE_DEP_ERROR));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  MISSING_MODULE_DEP_ERROR));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR));    	non-compiled	[CE]  ';'  expected	33	None	replace
341	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR));    	non-compiled	[CE]  ';'  expected	33	None	replace
342	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  scope));  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  scope));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  scope));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR));    	non-compiled	[CE]  ';'  expected	33	None	replace
343	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  null));  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  null));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  null));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR));    	non-compiled	[CE]  ';'  expected	33	None	replace
344	[BUG]  [BUGGY]  if(currModule!=  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currInput.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	18	None	replace
345	[BUG]  [BUGGY]  if(currModule  ==  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule;  }  [CE]  cannot  find  symbol  currModule  [FE]          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule  ==  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule;  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule  ==  currModule)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule;  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	18	None	replace
346	[BUG]  [BUGGY]  if(currModule  ==  currModule  ||  currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule;  }  [CE]  cannot  find  symbol  currModule  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule  ==  currModule  ||  currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule;  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule  ==  currModule  ||  currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule;  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	18	None	replace
347	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule;  }  [CE]  cannot  find  symbol  currModule  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  currModule  ||  currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule;  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  currModule  ||  currModule  ==  null)  {  JSModule  currModule  =  varInput.getModule();  JSModule  currModule  =  currModule;  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	18	None	replace
348	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  STRICT_MODULE_DEP_ERROR);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,DiagnosticType)  [FE]                            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  STRICT_MODULE_DEP_ERROR);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  STRICT_MODULE_DEP_ERROR);	  NodeTraversal.traverse(compiler,    t,    n,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,DiagnosticType)	14	None	replace
349	[BUG]  [BUGGY]  JSModule  currModule  =  currOutput.toModule();  [CE]  cannot  find  symbol  currOutput  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currOutput.toModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currOutput.toModule();	  JSModule    currModule    =    curr.toModule();    	non-compiled	[CE]  cannot  find  symbol  currOutput	30	None	replace
350	[BUG]  [BUGGY]  JSModule  currModule  =  moduleGraph.toModule();  [CE]  cannot  find  symbol  moduleGraph  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  moduleGraph.toModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  moduleGraph.toModule();	  JSModule    currModule    =    curr.toModule();    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	30	None	replace
351	[BUG]  [BUGGY]  if(currModule  ==  currModule)  {  JSModule  currModule  =  currInput.getModule();  }  else  {  currModule  =  currInput.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]          RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule  ==  currModule)  {  JSModule  currModule  =  currInput.getModule();  }  else  {  currModule  =  currInput.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule  ==  currModule)  {  JSModule  currModule  =  currInput.getModule();  }  else  {  currModule  =  currInput.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	19	None	replace
352	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  currInput  ==  varInput)  {  JSModule  currModule  =  currInput.getModule();  }  else  {  currModule  =  currInput.getModule();  }  [CE]  cannot  find  symbol  currModule  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  if(currModule!=  currModule  &&  currInput  ==  varInput)  {  JSModule  currModule  =  currInput.getModule();  }  else  {  currModule  =  currInput.getModule();  }  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	if(currModule!=  currModule  &&  currInput  ==  varInput)  {  JSModule  currModule  =  currInput.getModule();  }  else  {  currModule  =  currInput.getModule();  }	  JSModule    currModule    =    varInput.getModule();    JSModule    currModule    =    varInput.getModule();    }    JSModule    currModule    =    varInput.getModule();    	non-compiled	[CE]  cannot  find  symbol  currModule	19	None	replace
353	[BUG]  [BUGGY]  JSError  currModule  =  currInput.getModule(),  compiler.getModuleGraph());  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError  currModule  =  currInput.getModule(),  compiler.getModuleGraph());  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError  currModule  =  currInput.getModule(),  compiler.getModuleGraph());	  JSError    currModule    =    currInput.getModule();    	non-compiled	[CE]  ';'  expected	39	None	replace
354	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [CE]  no  suitable  method  found  for  make(NodeTraversal,CompilerInput,JSModule,DiagnosticType,JSModule)  [FE]              RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    NAME_REFERENCE_IN_EXTERNS_ERROR,    nameRefInExternsCheck);    	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,CompilerInput,JSModule,DiagnosticType,JSModule)	35	None	replace
355	[BUG]  [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE,  currModule));  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSError.make(t,  varInput,  currModule,  NAME_REFERENCE,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ';'  expected	22	None	replace
356	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE,  currModule));  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE,  currModule));  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput.getModule();  JSError.make(t,  varInput,  currModule,  NAME_REFERENCE,  currModule));	  JSModule    currModule    =    varInput.getModule();    JSError.make(t,    varInput,    currModule,    MISSING_MODULE_DEP_ERROR,    currModule));    	non-compiled	[CE]  ';'  expected	22	None	replace
357	[BUG]  [BUGGY]  String  varName  =  currInput.getLocalName();  [CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  String  varName  =  currInput.getLocalName();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	String  varName  =  currInput.getLocalName();	  String    varName    =    currInput.getString();    	non-compiled	[CE]  variable  varName  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	12	None	replace
358	[BUG]  [BUGGY]  JSModule  currModule  =  currOutput.getCompiler();  [CE]  cannot  find  symbol  currOutput  [FE]                        RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currOutput.getCompiler();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currOutput.getCompiler();	  JSModule    currModule    =    curr.getCompiler();    	non-compiled	[CE]  cannot  find  symbol  currOutput	28	None	replace
359	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  t.getRawParent();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  t.getRawParent();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  t.getRawParent();	  JSModule    currModule    =    currInput,    t.getParent();    	non-compiled	[CE]  ';'  expected	2	None	replace
360	[BUG]  [BUGGY]  JSModule  currModule  =  currRef.getModuleReference();  [CE]  cannot  find  symbol  currRef  [FE]                  RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currRef.getModuleReference();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currRef.getModuleReference();	  JSModule    currModule    =    curr.getModuleReference();    	non-compiled	[CE]  cannot  find  symbol  currRef	17	None	replace
361	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currInput.declareInExterns();  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  varsToDeclareInExterns  =  currInput.declareInExterns();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	varsToDeclareInExterns  =  currInput.declareInExterns();	  varsToDeclareInExterns    =    currInput.getParent();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
362	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  t.getDeclaringModule();  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  t.getDeclaringModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  t.getDeclaringModule();	  JSModule    currModule    =    currInput,    t.getCompiler();    	non-compiled	[CE]  ';'  expected	27	None	replace
363	[BUG]  [BUGGY]  JSModule  currModule  =  currInput,  moduleGraph.toModule();  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      }  CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }        [BUGGY]  JSModule  currModule  =  currInput,  moduleGraph.toModule();  [BUGGY]      JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();  if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	174	174	5	replace	JSModule  currModule  =  currInput,  moduleGraph.toModule();	  JSModule    currModule    =    currInput,    varInput.toModule();    	non-compiled	[CE]  ';'  expected	50	None	replace
