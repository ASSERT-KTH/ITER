bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Normalize(compiler,  true)  {  [CE]  <identifier>  expected  [FE]        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true)  {	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]          RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();	  Normalize(compiler,    false)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
3	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler);  [CE]  illegal  start  of  type  [FE]            RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler);	  Normalize(compiler,    false)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
4	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  false)  {  [CE]  illegal  start  of  type  [FE]              RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler,  false)  {	  Normalize(compiler,    false)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
5	[BUG]  [BUGGY]  this.hasOkDuplicateDeclaration  =  compiler.hasOkDuplicateDeclaration(false)||  compiler.hasOkDuplicateDeclaration(false)||  compiler.hasOkDuplicateDeclaration(false))  {  [CE]  illegal  start  of  type  [FE]                RuntimeException    [CONTEXT]      [BUGGY]  this.hasOkDuplicateDeclaration  =  compiler.hasOkDuplicateDeclaration(false)||  compiler.hasOkDuplicateDeclaration(false)||  compiler.hasOkDuplicateDeclaration(false))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.hasOkDuplicateDeclaration  =  compiler.hasOkDuplicateDeclaration(false)||  compiler.hasOkDuplicateDeclaration(false)||  compiler.hasOkDuplicateDeclaration(false))  {	  Normalize(compiler,    false)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
6	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  false);  [CE]  illegal  start  of  type  [FE]                  RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  false);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler,  false);	  Normalize(compiler,    false)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
7	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations();  [CE]  illegal  start  of  type  [FE]                    RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations();	  Normalize(compiler,    false)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
8	[BUG]  [BUGGY]  Validate.notNull(compiler);  [CE]  <identifier>  expected  [FE]                      RuntimeException    [CONTEXT]      [BUGGY]  Validate.notNull(compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Validate.notNull(compiler);	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
9	[BUG]  [BUGGY]  normalize(compiler,  false)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  false)  {	  Normalize(compiler,    false)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
10	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  for(AbstractCompiler  compiler  :  constantMap.keySet())  {  compiler.addChangeListener(this);  [CE]  illegal  start  of  type  [FE]                          RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  for(AbstractCompiler  compiler  :  constantMap.keySet())  {  compiler.addChangeListener(this);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  for(AbstractCompiler  compiler  :  constantMap.keySet())  {  compiler.addChangeListener(this);	  Normalize(compiler,    false)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
11	[BUG]  [BUGGY]  this.hasOkDuplicateDeclaration  =  compiler.hasOkDuplicateDeclaration(false)||  compiler.hasOkDuplicateDeclaration(false)||  compiler.hasOkDuplicateDeclaration(false));  [CE]  illegal  start  of  type  [FE]                            RuntimeException    [CONTEXT]      [BUGGY]  this.hasOkDuplicateDeclaration  =  compiler.hasOkDuplicateDeclaration(false)||  compiler.hasOkDuplicateDeclaration(false)||  compiler.hasOkDuplicateDeclaration(false));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.hasOkDuplicateDeclaration  =  compiler.hasOkDuplicateDeclaration(false)||  compiler.hasOkDuplicateDeclaration(false)||  compiler.hasOkDuplicateDeclaration(false));	  Normalize(compiler,    false)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
12	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator()  [CE]  <identifier>  expected  [FE]                              RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator()	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
13	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().hasNext();  [CE]  <identifier>  expected  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().hasNext();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().hasNext();	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
14	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  for(AbstractCompiler  compiler  :  constantMap.keySet())  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  type  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  for(AbstractCompiler  compiler  :  constantMap.keySet())  {  compiler.reportCodeChange();  }  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  for(AbstractCompiler  compiler  :  constantMap.keySet())  {  compiler.reportCodeChange();  }	  Normalize(compiler,    false)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
15	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next())  {  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next())  {	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
16	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator())  {  [CE]  <identifier>  expected  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator())  {	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
17	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator());  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator());  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator());	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
18	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  for(AbstractCompiler  compiler  :  constantMap.keySet())  {  compiler  =  compiler.getOkDuplicateDeclarations();  this.assertOnChange  =  assertOnChange;  }  [CE]  illegal  start  of  type  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  for(AbstractCompiler  compiler  :  constantMap.keySet())  {  compiler  =  compiler.getOkDuplicateDeclarations();  this.assertOnChange  =  assertOnChange;  }  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  for(AbstractCompiler  compiler  :  constantMap.keySet())  {  compiler  =  compiler.getOkDuplicateDeclarations();  this.assertOnChange  =  assertOnChange;  }	  Normalize(compiler,    false)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
19	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().hasNext();  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().hasNext();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().hasNext();	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
20	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().hasNext();  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().hasNext();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().hasNext();	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
21	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().trim()  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().trim()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().trim()	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
22	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().to  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().to  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().to	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
23	[BUG]  [BUGGY]  GenericDeclaration  <?>  compiler  =  compiler.getGenericDeclaration();  [CE]  illegal  start  of  type  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  GenericDeclaration  <?>  compiler  =  compiler.getGenericDeclaration();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	GenericDeclaration  <?>  compiler  =  compiler.getGenericDeclaration();	  Normalize(compiler,    false)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
24	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().toString()  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().toString()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().toString()	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
25	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().find  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().find  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().find	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
26	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next());  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next());  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next());	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
27	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  for(AbstractCompiler  compiler  :  constantMap.keySet())  {  compiler.addChangeListener(this);  }  [CE]  illegal  start  of  type  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  for(AbstractCompiler  compiler  :  constantMap.keySet())  {  compiler.addChangeListener(this);  }  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  for(AbstractCompiler  compiler  :  constantMap.keySet())  {  compiler.addChangeListener(this);  }	  Normalize(compiler,    false)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
28	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().assertOnChange;  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().assertOnChange;  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().assertOnChange;	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
29	[BUG]  [BUGGY]  Normalize(compiler,  false,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  this.checkUserDeclarations)  {	  Normalize(compiler,    false)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
30	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
31	[BUG]  [BUGGY]  Normalize(compiler,  true,  assertOnChange,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  assertOnChange,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  assertOnChange,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
32	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
33	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
34	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  hasOkDuplicateDeclaration)  {  [CE]  illegal  start  of  type  [FE]                    RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
35	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  verifyOnChange,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
36	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  false,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  false,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  false,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
37	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  assertOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
38	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  hasOkDuplicateDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                            RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
39	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  hasOkDuplicateDeclaration);  [CE]  illegal  start  of  type  [FE]                              RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  hasOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  hasOkDuplicateDeclaration);	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
40	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclaration),  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclaration),  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclaration),  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
41	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations),  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations),  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclarations),  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
42	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
43	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations),  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations),  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations),  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
44	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
45	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  assertOnChange,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
46	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
47	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  assertOnChange,  hasOkDuplicateDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  assertOnChange,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  assertOnChange,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
48	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  validateOnChange,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  validateOnChange,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  validateOnChange,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
49	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  null,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  null,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  null,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
50	[BUG]  [BUGGY]  Serialize(compiler,  assertOnChange,  hasOkDuplicateDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  assertOnChange,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  assertOnChange,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
51	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations),  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations),  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations),  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
52	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  hasOkDuplicateDeclaration);  [CE]  illegal  start  of  type  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  hasOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  hasOkDuplicateDeclaration);	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
53	[BUG]  [BUGGY]  Normalize(compiler,  statement,  assertOnChange,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  statement,  assertOnChange,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  statement,  assertOnChange,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
54	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  validateOnChange)  {  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  validateOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  validateOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
55	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclaration,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclaration,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclaration,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
56	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  result,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  result,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  result,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
57	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclaration),  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclaration),  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclaration),  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
58	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations),  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations),  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations),  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
59	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclaration,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclaration,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclaration,  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
60	[BUG]  [BUGGY]  AssertionError(compiler,  assertOnChange,  hasOkDuplicateDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  assertOnChange,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  assertOnChange,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
61	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclaration),  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclaration),  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclaration),  this.checkUserDeclarations);	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
62	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  findUserDeclaration(),  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  findUserDeclaration(),  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  findUserDeclaration(),  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
63	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclaration,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclaration,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclaration,  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
64	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  hasOkDuplicateDeclaration)  {  [CE]  illegal  start  of  type  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
65	[BUG]  [BUGGY]  Standardize(compiler,  boolean  assertOnChange,  checkUserDeclarations)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  boolean  assertOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  boolean  assertOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
66	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclaration),  true)  {  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclaration),  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclaration),  true)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
67	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  assertOnChange,  checkUserDeclarations)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  assertOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  assertOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
68	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  CheckUserDeclaration.class)  {  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  CheckUserDeclaration.class)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  CheckUserDeclaration.class)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
69	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclaration),  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclaration),  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclaration),  this.checkUserDeclarations);	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
70	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  false)  {  [CE]  <identifier>  expected  [FE]                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  false)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
71	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  true)  {  [CE]  <identifier>  expected  [FE]                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  true)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
72	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  constantMap)  {  [CE]  <identifier>  expected  [FE]                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  constantMap)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  constantMap)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
73	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isVerifyConstants)  {  [CE]  <identifier>  expected  [FE]                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isVerifyConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isVerifyConstants)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
74	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  0)  {  [CE]  <identifier>  expected  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  0)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  0)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
75	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  this.checkUserDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
76	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
77	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  haveOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  haveOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  haveOkDuplicateDeclaration)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
78	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations),  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations),  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations),  this.hasOkDuplicateDeclaration)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
79	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  CONVERT_WHILE_TO_FOR)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
80	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkCheckUserDeclarations,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkCheckUserDeclarations,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkCheckUserDeclarations,  hasOkDuplicateDeclaration)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
81	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkDeclarations)  {  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
82	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  null)  {  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  null)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  null)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
83	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkConstants)  {  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkConstants)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
84	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkStatements)  {  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkStatements)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkStatements)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
85	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isEnabled)  {  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isEnabled)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isEnabled)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
86	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isOkDuplicateDeclaration)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
87	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isStatement)  {  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isStatement)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isStatement)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
88	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  validateOnChange)  {  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  validateOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  validateOnChange)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
89	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  false,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  false,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  false,  this.checkUserDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
90	[BUG]  [BUGGY]  Normalize(compiler,  true,  assertOnChange,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  assertOnChange,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  assertOnChange,  this.checkUserDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
91	[BUG]  [BUGGY]  Normalize(compiler,!assertOnChange,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,!assertOnChange,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,!assertOnChange,  this.checkUserDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
92	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkOkDuplicateDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
93	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isEmpty)  {  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isEmpty)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isEmpty)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
94	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  flags)  {  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  flags)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  flags)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
95	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isStatic)  {  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isStatic)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isStatic)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
96	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isVarArgs)  {  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isVarArgs)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isVarArgs)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
97	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isConvert_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isConvert_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isConvert_WHILE_TO_FOR)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
98	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  parent)  {  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  parent)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  parent)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
99	[BUG]  [BUGGY]  Normalize(compiler,  statement,  assertOnChange,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  statement,  assertOnChange,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  statement,  assertOnChange,  this.checkUserDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
100	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  new  HashSet  <  AbstractCompiler>())  {  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  new  HashSet  <  AbstractCompiler>())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  new  HashSet  <  AbstractCompiler>())  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
101	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkBooleanDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkBooleanDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkBooleanDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
102	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isConverT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isConverT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isConverT_WHILE_TO_FOR)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
103	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  parser)  {  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  parser)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  parser)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
104	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkNotUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkNotUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkNotUserDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
105	[BUG]  [BUGGY]  Normalize(Compiler  compiler,  this.checkUserDeclarations,  assertOnChange)  {  [CE]  illegal  start  of  type  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(Compiler  compiler,  this.checkUserDeclarations,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(Compiler  compiler,  this.checkUserDeclarations,  assertOnChange)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
106	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkMissingDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkMissingDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkMissingDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
107	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkDuplicateDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
108	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isFunctionDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isFunctionDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isFunctionDeclaration)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
109	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  nodes)  {  [CE]  <identifier>  expected  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  nodes)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  nodes)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
110	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkEmptyDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkEmptyDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkEmptyDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
111	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkLocalDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkLocalDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkLocalDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
112	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
113	[BUG]  [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
114	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
115	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
116	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
117	[BUG]  [BUGGY]  Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
118	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
119	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
120	[BUG]  [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  new  ArrayList  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  new  ArrayList  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ArrayList  <  AbstractCompiler>  constantMap  =  new  ArrayList  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
121	[BUG]  [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
122	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iter  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iter  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iter	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
123	[BUG]  [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
124	[BUG]  [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  illegal  start  of  type  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
125	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
126	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
127	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
128	[BUG]  [BUGGY]  MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
129	[BUG]  [BUGGY]  Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
130	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator()  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator()	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
131	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
132	[BUG]  [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
133	[BUG]  [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  new  HashSet  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  new  HashSet  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	HashSet  <  AbstractCompiler>  constantMap  =  new  HashSet  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
134	[BUG]  [BUGGY]  Iterator  <  Object>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Iterator  <  Object>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Iterator  <  Object>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
135	[BUG]  [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Collections.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Collections.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ArrayList  <  AbstractCompiler>  constantMap  =  Collections.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
136	[BUG]  [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
137	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
138	[BUG]  [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Lists.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Lists.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ArrayList  <  AbstractCompiler>  constantMap  =  Lists.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
139	[BUG]  [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
140	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iter  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iter  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iter	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
141	[BUG]  [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
142	[BUG]  [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
143	[BUG]  [BUGGY]  AbstractCompiler  <?>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  AbstractCompiler  <?>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AbstractCompiler  <?>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
144	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
145	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Iterator  <  AbstractCompiler>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Iterator  <  AbstractCompiler>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
146	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().get  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().get  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().get	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
147	[BUG]  [BUGGY]  Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
148	[BUG]  [BUGGY]  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
149	[BUG]  [BUGGY]  this.assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  illegal  start  of  type  [FE]                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  this.assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
150	[BUG]  [BUGGY]  MutableSet  <  AbstractCompiler>  constantMap  =  new  MutableSet  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  MutableSet  <  AbstractCompiler>  constantMap  =  new  MutableSet  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	MutableSet  <  AbstractCompiler>  constantMap  =  new  MutableSet  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
151	[BUG]  [BUGGY]  Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [CE]  <identifier>  expected  [FE]                                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
152	[BUG]  [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator()  [CE]  <identifier>  expected  [FE]                                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator()	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
153	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().it  [CE]  <identifier>  expected  [FE]                                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().it  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().it	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
154	[BUG]  [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	15	None	replace
155	[BUG]  [BUGGY]  normalize(compiler,  boolean  assertOnChange,  false)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  boolean  assertOnChange,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  boolean  assertOnChange,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
156	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  null)  {  [CE]  <identifier>  expected  [FE]                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  null)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  null)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
157	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true,  false)  {  [CE]  <identifier>  expected  [FE]                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  true,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
158	[BUG]  [BUGGY]  normalize(compiler,  boolean  assertOnChange,  true)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  boolean  assertOnChange,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  boolean  assertOnChange,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
159	[BUG]  [BUGGY]  Standardize(compiler,  boolean  assertOnChange,  false)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                          RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  boolean  assertOnChange,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  boolean  assertOnChange,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
160	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  true,  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
161	[BUG]  [BUGGY]  Serialize(compiler,  boolean  assertOnChange,  false)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                              RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  boolean  assertOnChange,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  boolean  assertOnChange,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
162	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isEmpty(false))  {  [CE]  <identifier>  expected  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isEmpty(false))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isEmpty(false))  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
163	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  true,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
164	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isBooleanValue(false))  {  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isBooleanValue(false))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isBooleanValue(false))  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
165	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  null,  false)  {  [CE]  <identifier>  expected  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  null,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  null,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
166	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true,  null)  {  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true,  null)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  true,  null)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
167	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  false)  {  [CE]  illegal  start  of  type  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
168	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange),  false)  {  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange),  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange),  false)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
169	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isEmpty(true))  {  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isEmpty(true))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isEmpty(true))  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
170	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isBooleanValue(true))  {  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isBooleanValue(true))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isBooleanValue(true))  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
171	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  false)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
172	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true),  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true),  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  true),  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
173	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true),  this.checkUserDeclarations  =  checkUserDeclarations;  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true),  this.checkUserDeclarations  =  checkUserDeclarations;  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  true),  this.checkUserDeclarations  =  checkUserDeclarations;	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
174	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true),  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true),  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  true),  this.checkUserDeclarations);	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
175	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  true)  {  [CE]  illegal  start  of  type  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
176	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFalse(false))  {  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFalse(false))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFalse(false))  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
177	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFalse(this.checkUserDeclarations))  {  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFalse(this.checkUserDeclarations))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFalse(this.checkUserDeclarations))  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
178	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertonChange,  false)  {  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertonChange,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertonChange,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
179	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  FALSE)  {  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  FALSE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  FALSE)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
180	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true),  this.checkUserDeclarations  =  false;  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true),  this.checkUserDeclarations  =  false;  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  true),  this.checkUserDeclarations  =  false;	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
181	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.toBooleanObjectCase(false))  {  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.toBooleanObjectCase(false))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.toBooleanObjectCase(false))  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
182	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFunctionDeclaration(false))  {  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFunctionDeclaration(false))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFunctionDeclaration(false))  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
183	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  false)  {  [CE]  illegal  start  of  type  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
184	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isBooleanValueSupported(false))  {  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isBooleanValueSupported(false))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isBooleanValueSupported(false))  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
185	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  true,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
186	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.safeNegate(false))  {  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.safeNegate(false))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.safeNegate(false))  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
187	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true),  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  true),  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  true),  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
188	[BUG]  [BUGGY]  Normalize(compiler,  this.assertOnChange,  true)  {  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.assertOnChange,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.assertOnChange,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
189	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isBooleanValues())  {  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isBooleanValues())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isBooleanValues())  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
190	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFunctionDeclaration(assertOnChange))  {  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFunctionDeclaration(assertOnChange))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFunctionDeclaration(assertOnChange))  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
191	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.toBooleanObject(false))  {  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.toBooleanObject(false))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.toBooleanObject(false))  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
192	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isBooleanPrimitive(false))  {  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isBooleanPrimitive(false))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isBooleanPrimitive(false))  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
193	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFalse(true))  {  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFalse(true))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFalse(true))  {	  Normalize(compiler,    boolean    assertOnChange,    true)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
194	[BUG]  [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
195	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iter  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iter  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iter	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
196	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator()  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator()	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
197	[BUG]  [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
198	[BUG]  [BUGGY]  Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
199	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
200	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
201	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
202	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().re  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().re  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().re	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
203	[BUG]  [BUGGY]  Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
204	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next()  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next()	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
205	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().e  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().e  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().e	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
206	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().first().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().first().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().first().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
207	[BUG]  [BUGGY]  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
208	[BUG]  [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  new  ArrayList  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  new  ArrayList  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ArrayList  <  AbstractCompiler>  constantMap  =  new  ArrayList  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
209	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().t  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().t  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().t	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().    	non-compiled	[CE]  <identifier>  expected	21	None	replace
210	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().    	non-compiled	[CE]  <identifier>  expected	30	None	replace
211	[BUG]  [BUGGY]  ensureOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  ensureOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ensureOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().    	non-compiled	[CE]  <identifier>  expected	30	None	replace
212	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().    	non-compiled	[CE]  <identifier>  expected	30	None	replace
213	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  <identifier>  expected  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
214	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [CE]  <identifier>  expected  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
215	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
216	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  <identifier>  expected  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
217	[BUG]  [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
218	[BUG]  [BUGGY]  Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  <identifier>  expected  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
219	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
220	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
221	[BUG]  [BUGGY]  Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
222	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
223	[BUG]  [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
224	[BUG]  [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
225	[BUG]  [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
226	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
227	[BUG]  [BUGGY]  Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
228	[BUG]  [BUGGY]  Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  ';'  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  ';'  expected	13	None	replace
229	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
230	[BUG]  [BUGGY]  MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
231	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  ';'  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Iterator  <  AbstractCompiler>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Iterator  <  AbstractCompiler>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  ';'  expected	13	None	replace
232	[BUG]  [BUGGY]  MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
233	[BUG]  [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
234	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().n  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().n  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().n	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
235	[BUG]  [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
236	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
237	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().first().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().first().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().first().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
238	[BUG]  [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  new  ArrayList  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  new  ArrayList  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ArrayList  <  AbstractCompiler>  constantMap  =  new  ArrayList  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
239	[BUG]  [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [CE]  illegal  start  of  type  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
240	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
241	[BUG]  [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
242	[BUG]  [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  new  ArrayList  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  new  ArrayList  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ArrayList  <  AbstractCompiler>  constantMap  =  new  ArrayList  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
243	[BUG]  [BUGGY]  AbstractCompiler  <?>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  AbstractCompiler  <?>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AbstractCompiler  <?>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
244	[BUG]  [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
245	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getRe  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getRe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getRe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
246	[BUG]  [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
247	[BUG]  [BUGGY]  Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
248	[BUG]  [BUGGY]  Iterator  <  AbstractCompiler>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Iterator  <  AbstractCompiler>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Iterator  <  AbstractCompiler>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
249	[BUG]  [BUGGY]  this.assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  illegal  start  of  type  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  this.assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
250	[BUG]  [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ArrayList  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
251	[BUG]  [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Collections.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [CE]  <identifier>  expected  [FE]                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Collections.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ArrayList  <  AbstractCompiler>  constantMap  =  Collections.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
252	[BUG]  [BUGGY]  MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get  [CE]  <identifier>  expected  [FE]                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
253	[BUG]  [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  illegal  start  of  type  [FE]                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
254	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()  [CE]  <identifier>  expected  [FE]                                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
255	[BUG]  [BUGGY]  Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collection  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
256	[BUG]  [BUGGY]  Iterator  <  Object>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Iterator  <  Object>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Iterator  <  Object>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
257	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [CE]  <identifier>  expected  [FE]                                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
258	[BUG]  [BUGGY]  MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
259	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().re  [CE]  <identifier>  expected  [FE]                                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().re  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().re	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().    	non-compiled	[CE]  <identifier>  expected	13	None	replace
260	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkUsersOverVars)  {  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  checkUsersOverVars)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
261	[BUG]  [BUGGY]  Normalize(compiler,  true,  assertOnChange,  checkUsersOverVars)  {  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  assertOnChange,  checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  assertOnChange,  checkUsersOverVars)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
262	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  checkUsersOverVars)  {  [CE]  illegal  start  of  type  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  checkUsersOverVars)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
263	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
264	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUsersOverVars,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUsersOverVars,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUsersOverVars,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
265	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
266	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  checkUsersOverVars);  [CE]  illegal  start  of  type  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  checkUsersOverVars);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  checkUsersOverVars);	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
267	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
268	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  checkUsersOverVars)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  checkUsersOverVars)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
269	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkHasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkHasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkHasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
270	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
271	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
272	[BUG]  [BUGGY]  Normalize(compiler,  checkUsersOverVars,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  checkUsersOverVars,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  checkUsersOverVars,  assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
273	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  false)  {  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
274	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConstantsOverVars)  {  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConstantsOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkConstantsOverVars)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
275	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  true)  {  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
276	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkHasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkHasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkHasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
277	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkStatements)  {  [CE]  <identifier>  expected  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkStatements)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkStatements)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
278	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkPermissionsOverVars)  {  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkPermissionsOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkPermissionsOverVars)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
279	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkLocalDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkLocalDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkLocalDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
280	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
281	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConstants)  {  [CE]  <identifier>  expected  [FE]                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkConstants)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
282	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUsersOverVars,  true)  {  [CE]  <identifier>  expected  [FE]                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUsersOverVars,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUsersOverVars,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
283	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUsersOverVars,  false)  {  [CE]  <identifier>  expected  [FE]                                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUsersOverVars,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUsersOverVars,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
284	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  isVerifyConstants)  {  [CE]  <identifier>  expected  [FE]                                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  isVerifyConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  isVerifyConstants)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
285	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkNodeDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkNodeDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkNodeDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
286	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkAllAnnotations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkAllAnnotations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkAllAnnotations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
287	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConstantAnnotations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConstantAnnotations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkConstantAnnotations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
288	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConstantDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConstantDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkConstantDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
289	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  checkUsersOverVars,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  checkUsersOverVars,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  checkUsersOverVars,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
290	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkConstantsOverVars)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkConstantsOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkConstantsOverVars)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
291	[BUG]  [BUGGY]  Normalize(compiler,  validateOnChange,  checkUsersOverVars)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  validateOnChange,  checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  validateOnChange,  checkUsersOverVars)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
292	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUsersOverVars,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUsersOverVars,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUsersOverVars,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
293	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
294	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkLocalVars)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkLocalVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkLocalVars)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
295	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  ensureOnChange,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  ensureOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  ensureOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
296	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkEmptyDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkEmptyDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkEmptyDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
297	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  isDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  isDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUsersOverVars,  isDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
298	[BUG]  [BUGGY]  Normalize(compiler,  false,  checkUsersOverVars)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  checkUsersOverVars)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
299	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclaration,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclaration,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclaration,  assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
300	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
301	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  this.checkUserDeclaration)  {  [CE]  illegal  start  of  type  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  this.checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  this.checkUserDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
302	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
303	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
304	[BUG]  [BUGGY]  Normalize(compiler,  false,  this.checkUserDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  this.checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  this.checkUserDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
305	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  this.checkUserDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  this.checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  this.checkUserDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
306	[BUG]  [BUGGY]  Normalize(compiler,  true,  assertOnChange,  this.checkUserDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  assertOnChange,  this.checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  assertOnChange,  this.checkUserDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
307	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this.checkUserDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
308	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  true)  {  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
309	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  false)  {  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
310	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  this.checkUserDeclaration);  [CE]  illegal  start  of  type  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  this.checkUserDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  this.checkUserDeclaration);	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
311	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration),  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration),  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclaration),  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
312	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  false)  {  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
313	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  true)  {  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
314	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
315	[BUG]  [BUGGY]  Normalize(compiler,  true,  this.checkUserDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  this.checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  this.checkUserDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
316	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
317	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  false)  {  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
318	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  0)  {  [CE]  <identifier>  expected  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  0)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  0)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
319	[BUG]  [BUGGY]  Normalize(compiler,!assertOnChange,  this.checkUserDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,!assertOnChange,  this.checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,!assertOnChange,  this.checkUserDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
320	[BUG]  [BUGGY]  Serialize(compiler,  assertOnChange,  this.checkUserDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  assertOnChange,  this.checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  assertOnChange,  this.checkUserDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
321	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration),  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration),  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration),  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
322	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  false,  this.checkUserDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  false,  this.checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  false,  this.checkUserDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
323	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  true)  {  [CE]  <identifier>  expected  [FE]                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
324	[BUG]  [BUGGY]  Normalize(compiler,  flags,  assertOnChange,  this.checkUserDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  flags,  assertOnChange,  this.checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  flags,  assertOnChange,  this.checkUserDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
325	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
326	[BUG]  [BUGGY]  Standardize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  hasOkDuplicateDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
327	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  null)  {  [CE]  <identifier>  expected  [FE]                                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  null)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  null)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
328	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  isVerifyConstants)  {  [CE]  <identifier>  expected  [FE]                                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  isVerifyConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  isVerifyConstants)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
329	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration),  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration),  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration),  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
330	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  isVerifyConstants)  {  [CE]  <identifier>  expected  [FE]                                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  isVerifyConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  isVerifyConstants)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
331	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  this.checkUserDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  this.checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false,  this.checkUserDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
332	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
333	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
334	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkLocalDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkLocalDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkLocalDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
335	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  null)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  null)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  null)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
336	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  constantMap)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  constantMap)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclaration,  constantMap)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
337	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  constantMap)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  constantMap)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclaration,  constantMap)  {	  Normalize(compiler,    boolean    assertOnChange,    this.checkUserDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
338	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations,  assertOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
339	[BUG]  [BUGGY]  Normalize(compiler,  this.hasOkDuplicateDeclaration,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.hasOkDuplicateDeclaration,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.hasOkDuplicateDeclaration,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
340	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                          RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
341	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration);  [CE]  illegal  start  of  type  [FE]                            RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration);	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
342	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
343	[BUG]  [BUGGY]  Normalize(compiler,  false,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
344	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
345	[BUG]  [BUGGY]  Normalize(compiler,  checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
346	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
347	[BUG]  [BUGGY]  Normalize(compiler,  true,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
348	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  illegal  start  of  type  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
349	[BUG]  [BUGGY]  Standardize(compiler,  assertOnChange,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  assertOnChange,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  assertOnChange,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
350	[BUG]  [BUGGY]  Serialize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
351	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  false,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  false,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  false,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
352	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.assertOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.assertOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.assertOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
353	[BUG]  [BUGGY]  Normalize(compiler,  0L,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  0L,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  0L,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
354	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration);  [CE]  illegal  start  of  type  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration);	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
355	[BUG]  [BUGGY]  Normalize(compiler,  hasOkDuplicateDeclaration,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  hasOkDuplicateDeclaration,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  hasOkDuplicateDeclaration,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
356	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  true,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  true,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  true,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
357	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  false)  {  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  false)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
358	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
359	[BUG]  [BUGGY]  Normalize(compiler,  validateOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  validateOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  validateOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
360	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  true)  {  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  true)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
361	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
362	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
363	[BUG]  [BUGGY]  Normalize(compiler,  ignoreOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  ignoreOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  ignoreOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
364	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  this.checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
365	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  illegal  start  of  type  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
366	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration),  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration),  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration),  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
367	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration),  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration),  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration),  this.checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
368	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration,  verifyOnChange)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
369	[BUG]  [BUGGY]  Normalize(compiler,  buildOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  buildOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  buildOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
370	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  compiler,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  compiler,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  compiler,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
371	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  this.checkUserDeclarations);  [CE]  illegal  start  of  type  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
372	[BUG]  [BUGGY]  Normalize(compiler,  statement,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  statement,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  statement,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
373	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this.checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
374	[BUG]  [BUGGY]  AssertionError(compiler,  this.hasOkDuplicateDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
375	[BUG]  [BUGGY]  Normalize(compiler,  null,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  null,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  null,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
376	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange);  [CE]  illegal  start  of  type  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange);	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
377	[BUG]  [BUGGY]  super(compiler,  assertOnChange)  {  [CE]  illegal  start  of  type  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
378	[BUG]  [BUGGY]  AssertionError(compiler,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
379	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarationsOverVars(compiler,  assertOnChange);  [CE]  illegal  start  of  type  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarationsOverVars(compiler,  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarationsOverVars(compiler,  assertOnChange);	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
380	[BUG]  [BUGGY]  this.compiler  =  compiler;  [CE]  illegal  start  of  type  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  this.compiler  =  compiler;  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.compiler  =  compiler;	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
381	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  0)  {  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  0)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  0)  {	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
382	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  isVerifyConstants)  {  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  isVerifyConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  isVerifyConstants)  {	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
383	[BUG]  [BUGGY]  Serialize(compiler,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
384	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations.size())  {  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations.size())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclarations.size())  {	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
385	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange)  {  [CE]  illegal  start  of  type  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
386	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclaration(compiler,  assertOnChange);  [CE]  illegal  start  of  type  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclaration(compiler,  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclaration(compiler,  assertOnChange);	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
387	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  super.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  super.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  super.checkUserDeclarations);	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
388	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Preconditions.checkState(compiler!=  null);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Preconditions.checkState(compiler!=  null);	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
389	[BUG]  [BUGGY]  super(compiler);  [CE]  illegal  start  of  type  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  super(compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler);	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
390	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkStatementsOverVars)  {  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkStatementsOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkStatementsOverVars)  {	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
391	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
392	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarationsOverVars(compiler);  [CE]  illegal  start  of  type  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarationsOverVars(compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarationsOverVars(compiler);	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
393	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  super.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  super.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  super.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
394	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
395	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]              RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
396	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  [CE]  ';'  expected  [FE]                RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  ';'  expected	85	None	replace
397	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  [CE]  ';'  expected  [FE]                  RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  ';'  expected	85	None	replace
398	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiajungiajungiajungiajungiajungiajungiajungiajungiajungiajungiajungiajungiajungiajungi  [CE]  <identifier>  expected  [FE]                    RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiajungiajungiajungiajungiajungiajungiajungiajungiajungiajungiajungiajungiajungiajungi  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiajungiajungiajungiajungiajungiajungiajungiajungiajungiajungiajungiajungiajungiajungi	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
399	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  [CE]  ';'  expected  [FE]                      RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit  linistit	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  ';'  expected	85	None	replace
400	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  [CE]  ';'  expected  [FE]                        RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  ';'  expected	85	None	replace
401	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]                          RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
402	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler,  compiler,  [CE]  <identifier>  expected  [FE]                            RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler,  compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler,  compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
403	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPolicy();  [CE]  invalid  method  declaration;  return  type  required  [FE]                              RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPolicy();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPolicy();	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
404	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler);  [CE]  <identifier>  expected  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler);	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
405	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  compiler,  [CE]  invalid  method  declaration;  return  type  required  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
406	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler,  compiler);  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler,  compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler,  compiler);	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
407	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  compiler,  [CE]  invalid  method  declaration;  return  type  required  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
408	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPolicy();  [CE]  invalid  method  declaration;  return  type  required  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPolicy();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPolicy();	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
409	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  [CE]  invalid  method  declaration;  return  type  required  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
410	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compiler,  [CE]  invalid  method  declaration;  return  type  required  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
411	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosMethod(compiler,  compiler  [CE]  invalid  method  declaration;  return  type  required  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosMethod(compiler,  compiler  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosMethod(compiler,  compiler	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
412	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler,  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
413	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler);	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
414	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
415	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  FontMetrics(compiler,  compiler,  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  FontMetrics(compiler,  compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  FontMetrics(compiler,  compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
416	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler);	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
417	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  FontMetrics(compiler);  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  FontMetrics(compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  FontMetrics(compiler);	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
418	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  linistit(compiler,  compiler,  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  linistit(compiler,  compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  linistit(compiler,  compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
419	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  linistit(compiler,  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  linistit(compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  linistit(compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
420	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  linistit(compiler);  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  linistit(compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  linistit(compiler);	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
421	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPredicate(compiler,  compiler,  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPredicate(compiler,  compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPredicate(compiler,  compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
422	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compiler);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compiler);	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
423	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti();  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti();	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
424	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPredicates(compiler,  compiler,  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPredicates(compiler,  compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPredicates(compiler,  compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
425	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compiler,  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
426	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti);  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti);	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
427	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compiler,  compiler,  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compiler,  compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compiler,  compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
428	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Standardize(compiler,  compiler,  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Standardize(compiler,  compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Standardize(compiler,  compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
429	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti();  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti();	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
430	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiOverVar(compiler,  compiler,  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiOverVar(compiler,  compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiOverVar(compiler,  compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
431	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler,  compiler;  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler,  compiler;  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler,  compiler;	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
432	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compilerError(comp  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compilerError(comp  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compilerError(comp	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
433	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  false,  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  false,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  false,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
434	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  false,  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  false,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(compiler,  false,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
435	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler,  compiler,  compiler);  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler,  compiler,  compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  Normalize(compiler,  compiler,  compiler);	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
436	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPredicates(compiler,  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPredicates(compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPredicates(compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
437	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compiler);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiPosition(compiler);	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
438	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  FontMetrics(compiler,  compiler);  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  FontMetrics(compiler,  compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  FontMetrics(compiler,  compiler);	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
439	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiOverVars(compiler);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiOverVars(compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiOverVars(compiler);	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
440	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  PropertyDeclaration(compiler,  compiler,  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  PropertyDeclaration(compiler,  compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  PropertyDeclaration(compiler,  compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
441	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiCategory(compiler,  compiler,  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiCategory(compiler,  compiler,  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetiCategory(compiler,  compiler,	  Normalize(compiler,    assertOnChange);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
442	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  this)  {  [CE]  <identifier>  expected  [FE]              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  this)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  this)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
443	[BUG]  [BUGGY]  Normalize(compiler,  true,  assertOnChange,  this)  {  [CE]  <identifier>  expected  [FE]                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  assertOnChange,  this)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  assertOnChange,  this)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
444	[BUG]  [BUGGY]  Normalize(compiler,  this,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this,  assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
445	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  null)  {  [CE]  <identifier>  expected  [FE]                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  null)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  null)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
446	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  NON_GLOBAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  NON_GLOBAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  NON_GLOBAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
447	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  UnsupportedOperationException.class)  {  [CE]  <identifier>  expected  [FE]                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  UnsupportedOperationException.class)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  UnsupportedOperationException.class)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
448	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  isEnabled)  {  [CE]  <identifier>  expected  [FE]                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  isEnabled)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  isEnabled)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
449	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkStatements)  {  [CE]  <identifier>  expected  [FE]                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkStatements)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkStatements)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
450	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  FALSE_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  FALSE_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  FALSE_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
451	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
452	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.FALSE)  {  [CE]  <identifier>  expected  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.FALSE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.FALSE)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
453	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  ignore)  {  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  ignore)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  ignore)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
454	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  set)  {  [CE]  <identifier>  expected  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  set)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  set)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
455	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isEmpty(assertOnChange))  {  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isEmpty(assertOnChange))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isEmpty(assertOnChange))  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
456	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  UNKNOWN_EXPR_RESULT)  {  [CE]  <identifier>  expected  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  UNKNOWN_EXPR_RESULT)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  UNKNOWN_EXPR_RESULT)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
457	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  predicate)  {  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  predicate)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  predicate)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
458	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  isFunctionDeclaration)  {  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  isFunctionDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  isFunctionDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
459	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  HashSet  <  String>emptySet())  {  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  HashSet  <  String>emptySet())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  HashSet  <  String>emptySet())  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
460	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFunctionDeclaration(this))  {  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFunctionDeclaration(this))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanUtils.isFunctionDeclaration(this))  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
461	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  DEFAULT_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  DEFAULT_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  DEFAULT_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
462	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  Boolean.valueOf(this.checkUserDeclarations))  {  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  Boolean.valueOf(this.checkUserDeclarations))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  Boolean.valueOf(this.checkUserDeclarations))  {	  Normalize(compiler,    boolean    assertOnChange,    this)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
463	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]          RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
464	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  this.checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
465	[BUG]  [BUGGY]  AssertionError(compiler,  this.checkUserDeclarations,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  this.checkUserDeclarations,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  this.checkUserDeclarations,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
466	[BUG]  [BUGGY]  Standardize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
467	[BUG]  [BUGGY]  Serialize(compiler,  assertOnChange,  this.checkUserDeclarations)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  assertOnChange,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  assertOnChange,  this.checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
468	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.assertOnChange,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.assertOnChange,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.assertOnChange,  this.checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
469	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  this.checkUserDeclarations)  {  [CE]  illegal  start  of  type  [FE]                      RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  this.checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
470	[BUG]  [BUGGY]  Standardize(compiler,  this.checkUserDeclarations,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  this.checkUserDeclarations,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  this.checkUserDeclarations,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
471	[BUG]  [BUGGY]  Normalize(compiler,  true,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  this.checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
472	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkStatements,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkStatements,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkStatements,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
473	[BUG]  [BUGGY]  Normalize(compiler,  0L,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  0L,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  0L,  this.checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
474	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
475	[BUG]  [BUGGY]  Normalize(compiler,  validateOnChange,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  validateOnChange,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  validateOnChange,  this.checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
476	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  false)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  false)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
477	[BUG]  [BUGGY]  normalize(compiler,  this.checkUserDeclarations,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.checkUserDeclarations,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.checkUserDeclarations,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
478	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  true)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  true)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
479	[BUG]  [BUGGY]  Serialize(compiler,  this.checkUserDeclarations,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  this.checkUserDeclarations,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  this.checkUserDeclarations,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
480	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  assertOnChange,  this.checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
481	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.validateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.validateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.validateDeclarations)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
482	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  this.checkUserDeclarations));  [CE]  illegal  start  of  type  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  this.checkUserDeclarations));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  this.checkUserDeclarations));	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
483	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  new  HashSet  <  String>())  {  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  new  HashSet  <  String>())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  new  HashSet  <  String>())  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
484	[BUG]  [BUGGY]  Normalize(compiler,  checkUserDeclarations,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  checkUserDeclarations,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  checkUserDeclarations,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
485	[BUG]  [BUGGY]  Preconditions.checkState(this.checkUserDeclarations!=  null);  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Preconditions.checkState(this.checkUserDeclarations!=  null);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Preconditions.checkState(this.checkUserDeclarations!=  null);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
486	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
487	[BUG]  [BUGGY]  Normalize(compiler,  verifyOnChange,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  verifyOnChange,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  verifyOnChange,  assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
488	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  false)  {  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
489	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  false)  {  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  verifyOnChange,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
490	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
491	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations,  assertOnChange,  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
492	[BUG]  [BUGGY]  Normalize(compiler,  true,  assertOnChange,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  assertOnChange,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  assertOnChange,  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
493	[BUG]  [BUGGY]  Normalize(compiler,  boolean  verifyOnChange,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  verifyOnChange,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  verifyOnChange,  assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
494	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  verifyOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
495	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  verifyOnChange)  {  [CE]  illegal  start  of  type  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
496	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  verifyOnChange,  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
497	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
498	[BUG]  [BUGGY]  Normalize(compiler,  validateOnChange,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  validateOnChange,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  validateOnChange,  assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
499	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
500	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  verifyOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
501	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
502	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  true)  {  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
503	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  isVerifyConstants)  {  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  isVerifyConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  isVerifyConstants)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
504	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  verifyOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
505	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
506	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  validateOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  validateOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  validateOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
507	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
508	[BUG]  [BUGGY]  Normalize(compiler,  false,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
509	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations),  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations),  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations),  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
510	[BUG]  [BUGGY]  Normalize(compiler,  checkUserDeclarations,  assertOnChange,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  checkUserDeclarations,  assertOnChange,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  checkUserDeclarations,  assertOnChange,  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
511	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  true)  {  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  verifyOnChange,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
512	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations),  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations),  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations),  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
513	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  this.hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  this.hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  this.hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
514	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  validateOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  validateOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  validateOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
515	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclarations,  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
516	[BUG]  [BUGGY]  Normalize(compiler,  verifyOnChange,  boolean  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  verifyOnChange,  boolean  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  verifyOnChange,  boolean  assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
517	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
518	[BUG]  [BUGGY]  Normalize(compiler,  boolean  checkOnChange,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  checkOnChange,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  checkOnChange,  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
519	[BUG]  [BUGGY]  Normalize(compiler,  boolean  validateOnChange,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  validateOnChange,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  validateOnChange,  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
520	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  0)  {  [CE]  <identifier>  expected  [FE]                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  0)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  verifyOnChange,  0)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
521	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  null)  {  [CE]  <identifier>  expected  [FE]                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  null)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  null)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
522	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.validateOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.validateOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.validateOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
523	[BUG]  [BUGGY]  normalize(compiler,  this.assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
524	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  checkUserDeclarations)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  checkUserDeclarations)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
525	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
526	[BUG]  [BUGGY]  normalize(compiler,  this.checkUserDeclaration,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.checkUserDeclaration,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.checkUserDeclaration,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
527	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this.checkUserDeclarations);	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
528	[BUG]  [BUGGY]  normalize(compiler,  compiler,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  compiler,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  compiler,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
529	[BUG]  [BUGGY]  normalize(compiler,  this.hasOkDuplicateDeclaration,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.hasOkDuplicateDeclaration,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.hasOkDuplicateDeclaration,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
530	[BUG]  [BUGGY]  normalize(compiler,  checkUserDeclarations,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  checkUserDeclarations,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  checkUserDeclarations,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
531	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  checkUserDeclarations);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  checkUserDeclarations);	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
532	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this.assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this.assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this.assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
533	[BUG]  [BUGGY]  normalize(compiler,  this.checkStatements,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.checkStatements,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.checkStatements,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
534	[BUG]  [BUGGY]  normalize(compiler,  this.compiler,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.compiler,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.compiler,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
535	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  this.checkUserDeclarations,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  this.checkUserDeclarations,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  this.checkUserDeclarations,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
536	[BUG]  [BUGGY]  normalize(compiler,  this.checkConstants,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.checkConstants,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.checkConstants,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
537	[BUG]  [BUGGY]  normalize(compiler,  this.assertOnChange),  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.assertOnChange),  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.assertOnChange),  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
538	[BUG]  [BUGGY]  normalize(compiler,  this.checkDeclaration,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.checkDeclaration,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.checkDeclaration,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
539	[BUG]  [BUGGY]  normalize(compiler,  this.checkUserDeclarations);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.checkUserDeclarations);	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
540	[BUG]  [BUGGY]  normalize(compiler,  this.registry,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.registry,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.registry,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
541	[BUG]  [BUGGY]  normalize(compiler,  this.checkStatementsOverVars,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.checkStatementsOverVars,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.checkStatementsOverVars,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
542	[BUG]  [BUGGY]  normalize(compiler,  this.checkUserDeclarations)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.checkUserDeclarations)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
543	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this.checkStatementsOverVars)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this.checkStatementsOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this.checkStatementsOverVars)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
544	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  checkUserDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  checkUserDeclaration)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
545	[BUG]  [BUGGY]  normalize(compiler,  this.node,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.node,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.node,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
546	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  checkUserDeclarations.size())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  checkUserDeclarations.size())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  checkUserDeclarations.size())  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
547	[BUG]  [BUGGY]  normalize(compiler,  this.checkUserDeclarations),  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.checkUserDeclarations),  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.checkUserDeclarations),  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
548	[BUG]  [BUGGY]  parser.normalize(compiler,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  parser.normalize(compiler,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	parser.normalize(compiler,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
549	[BUG]  [BUGGY]  normalize(compiler,  this.checkPermissions,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.checkPermissions,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.checkPermissions,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
550	[BUG]  [BUGGY]  normalize(compiler,  this.statement,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.statement,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.statement,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
551	[BUG]  [BUGGY]  normalize(compiler,  false,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  false,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  false,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
552	[BUG]  [BUGGY]  normalize(compiler,  this.declaration,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.declaration,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.declaration,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
553	[BUG]  [BUGGY]  normalize(compiler,  this.checkUsers,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.checkUsers,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.checkUsers,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
554	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  this.assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  this.assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  this.assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
555	[BUG]  [BUGGY]  normalize(compiler,  this.assertOnChange,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.assertOnChange,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.assertOnChange,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
556	[BUG]  [BUGGY]  normalize(compiler,  testConstants,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  testConstants,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  testConstants,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
557	[BUG]  [BUGGY]  normalize(compiler,  type,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  type,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  type,  assertOnChange)  {	  normalize(compiler,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
558	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
559	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
560	[BUG]  [BUGGY]  Normalize(compiler,  true,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  assertOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
561	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
562	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations),  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations),  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations),  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
563	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
564	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration),  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration),  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration),  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
565	[BUG]  [BUGGY]  Normalize(compiler,  flags,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  flags,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  flags,  assertOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
566	[BUG]  [BUGGY]  Standardize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
567	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
568	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration);  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration);	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
569	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
570	[BUG]  [BUGGY]  Normalize(compiler,!assertOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,!assertOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,!assertOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
571	[BUG]  [BUGGY]  Normalize(compiler,  this.hasOkDuplicateDeclaration,  boolean  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.hasOkDuplicateDeclaration,  boolean  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.hasOkDuplicateDeclaration,  boolean  assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
572	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration),  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration),  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration),  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
573	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  null,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  null,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  null,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
574	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration,  false)  {  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
575	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration),  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration),  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration),  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
576	[BUG]  [BUGGY]  Normalize(compiler,!this.hasOkDuplicateDeclaration,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,!this.hasOkDuplicateDeclaration,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,!this.hasOkDuplicateDeclaration,  assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
577	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration),  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration),  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration),  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
578	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.hasOkDuplicateDeclaration,  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    this.hasOkDuplicateDeclaration)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
579	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false,  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
580	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  true)  {  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
581	[BUG]  [BUGGY]  Standardize(compiler,  boolean  assertOnChange,  true)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  boolean  assertOnChange,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  boolean  assertOnChange,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
582	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
583	[BUG]  [BUGGY]  Normalize(compiler,  this.assertOnChange,  false)  {  [CE]  <identifier>  expected  [FE]                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.assertOnChange,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.assertOnChange,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
584	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false,  this.checkUserDeclarations);	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
585	[BUG]  [BUGGY]  Normalize(compiler,  true,  assertOnChange,  false)  {  [CE]  <identifier>  expected  [FE]                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  assertOnChange,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  assertOnChange,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
586	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  null)  {  [CE]  <identifier>  expected  [FE]                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  null)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false,  null)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
587	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
588	[BUG]  [BUGGY]  Normalize(compiler,  true,  false)  {  [CE]  <identifier>  expected  [FE]                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
589	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  false)  {  [CE]  <identifier>  expected  [FE]                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
590	[BUG]  [BUGGY]  Serialize(compiler,  boolean  assertOnChange,  true)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  boolean  assertOnChange,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  boolean  assertOnChange,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
591	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  true)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
592	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  isVerifyConstants)  {  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  isVerifyConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false,  isVerifyConstants)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
593	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  this.hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  this.hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false,  this.hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
594	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  isEnabled)  {  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  isEnabled)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false,  isEnabled)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
595	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  true)  {  [CE]  illegal  start  of  type  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
596	[BUG]  [BUGGY]  Synchronize(compiler,  boolean  assertOnChange,  true)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Synchronize(compiler,  boolean  assertOnChange,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Synchronize(compiler,  boolean  assertOnChange,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
597	[BUG]  [BUGGY]  Normalize(compiler,  String.valueOf(assertOnChange),  false)  {  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  String.valueOf(assertOnChange),  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  String.valueOf(assertOnChange),  false)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
598	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false),  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false),  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false),  this.checkUserDeclarations);	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
599	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  this.assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  this.assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false,  this.assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
600	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  constantMap)  {  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  constantMap)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false,  constantMap)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
601	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
602	[BUG]  [BUGGY]  SuperClassize(compiler,  boolean  assertOnChange,  true)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  SuperClassize(compiler,  boolean  assertOnChange,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	SuperClassize(compiler,  boolean  assertOnChange,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
603	[BUG]  [BUGGY]  Generalize(compiler,  boolean  assertOnChange,  true)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Generalize(compiler,  boolean  assertOnChange,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Generalize(compiler,  boolean  assertOnChange,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
604	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  false,  checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  false,  checkUserDeclarations);	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
605	[BUG]  [BUGGY]  Normalize(compiler,  flags,  assertOnChange,  false)  {  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  flags,  assertOnChange,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  flags,  assertOnChange,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    false)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
606	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  illegal  start  of  type  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
607	[BUG]  [BUGGY]  Normalize(compiler,  false,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
608	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  false,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  false,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  false,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
609	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
610	[BUG]  [BUGGY]  Normalize(compiler,  true,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
611	[BUG]  [BUGGY]  Serialize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
612	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR);  [CE]  illegal  start  of  type  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR);	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
613	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  true)  {  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
614	[BUG]  [BUGGY]  AssertionError(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
615	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  MAKE_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  MAKE_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  MAKE_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
616	[BUG]  [BUGGY]  Normalize(compiler,  true,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
617	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  false)  {  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
618	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
619	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  MAKE_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  MAKE_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  MAKE_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
620	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  null,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  null,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  null,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
621	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  0,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  0,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  0,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
622	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
623	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
624	[BUG]  [BUGGY]  Normalize(compiler,  false,  true,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  true,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  true,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
625	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  IntegerConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  IntegerConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  IntegerConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
626	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  MAKE_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  MAKE_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  MAKE_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
627	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
628	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  true,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  true,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  true,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
629	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
630	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  true)  {  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
631	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  false)  {  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
632	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  this.assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  this.assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  this.assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
633	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  IntegerConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  IntegerConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  IntegerConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
634	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Integer.toString(Constants.DEFAULT_CONVERT_WHILE_TO_FOR),  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Integer.toString(Constants.DEFAULT_CONVERT_WHILE_TO_FOR),  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Integer.toString(Constants.DEFAULT_CONVERT_WHILE_TO_FOR),  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
635	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
636	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
637	[BUG]  [BUGGY]  Normalize(compiler,  true,  false,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  false,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  false,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
638	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  MAKE_LOCAL_NAMES_UNIQUE,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  MAKE_LOCAL_NAMES_UNIQUE,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  MAKE_LOCAL_NAMES_UNIQUE,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
639	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
640	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Integer.MIN_VALUE,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Integer.MIN_VALUE,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Integer.MIN_VALUE,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
641	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
642	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  this.assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  this.assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  this.assertOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
643	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  0)  {  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  0)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  0)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
644	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR),  true)  {  [CE]  <identifier>  expected  [FE]                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR),  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR),  true)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
645	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  MAKE_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  MAKE_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  MAKE_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
646	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
647	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Integer.toString(Constants.DEFAULT_CONVERT_WHILE_TO_FOR))  {  [CE]  <identifier>  expected  [FE]                                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Integer.toString(Constants.DEFAULT_CONVERT_WHILE_TO_FOR))  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Integer.toString(Constants.DEFAULT_CONVERT_WHILE_TO_FOR))  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
648	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR),  false)  {  [CE]  <identifier>  expected  [FE]                                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR),  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR),  false)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
649	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  validateOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  validateOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR,  validateOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    BooleanConstants.DEFAULT_CONVERT_WHILE_TO_FOR)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
650	[BUG]  [BUGGY]  Iterator  <  String>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Iterator  <  String>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Iterator  <  String>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().re    	non-compiled	[CE]  <identifier>  expected	42	None	replace
651	[BUG]  [BUGGY]  AbstractCompiler  <?>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  AbstractCompiler  <?>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AbstractCompiler  <?>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().re    	non-compiled	[CE]  <identifier>  expected	42	None	replace
652	[BUG]  [BUGGY]  Iterator  <  Node>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Iterator  <  Node>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Iterator  <  Node>  constantMap  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().re    	non-compiled	[CE]  <identifier>  expected	42	None	replace
653	[BUG]  [BUGGY]  ensureOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  ensureOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ensureOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().re    	non-compiled	[CE]  <identifier>  expected	42	None	replace
654	[BUG]  [BUGGY]  Collections.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Collections.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collections.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().re    	non-compiled	[CE]  <identifier>  expected	42	None	replace
655	[BUG]  [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().re    	non-compiled	[CE]  <identifier>  expected	42	None	replace
656	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange),  [CE]  <identifier>  expected  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations,  assertOnChange),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
657	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange)  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange)  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations,  assertOnChange)	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
658	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  [CE]  <identifier>  expected  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
659	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration),  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
660	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration));  [CE]  <identifier>  expected  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration));	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
661	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration),  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
662	[BUG]  [BUGGY]  Normalize(compiler,  false,  this.checkUserDeclarations),  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  this.checkUserDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  this.checkUserDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
663	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations),  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this.checkUserDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
664	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclarations),  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
665	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  false));  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  false));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  false));	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
666	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkDeclarations),  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
667	[BUG]  [BUGGY]  super.assertOnChange,  assertOnChange,  this.checkUserDeclarations);  [CE]  illegal  start  of  type  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  super.assertOnChange,  assertOnChange,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super.assertOnChange,  assertOnChange,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
668	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  false,  this.checkUserDeclarations),  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  false,  this.checkUserDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  false,  this.checkUserDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
669	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  true));  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  true));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  true));	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
670	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations));  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this.checkUserDeclarations));	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
671	[BUG]  [BUGGY]  AssertionError(compiler,  this.checkUserDeclarations),  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  this.checkUserDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  this.checkUserDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
672	[BUG]  [BUGGY]  Serialize(compiler,  assertOnChange,  this.checkUserDeclarations),  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  assertOnChange,  this.checkUserDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  assertOnChange,  this.checkUserDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
673	[BUG]  [BUGGY]  Normalize(compiler,  true,  this.checkUserDeclarations),  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  this.checkUserDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  this.checkUserDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
674	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations));  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations));	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
675	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration)	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
676	[BUG]  [BUGGY]  Normalize(compiler,  0L,  this.checkUserDeclarations),  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  0L,  this.checkUserDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  0L,  this.checkUserDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
677	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange));  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations,  assertOnChange));	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
678	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.assertOnChange,  this.checkUserDeclarations)  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.assertOnChange,  this.checkUserDeclarations)  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.assertOnChange,  this.checkUserDeclarations)	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
679	[BUG]  [BUGGY]  AssertionError.make(compiler,  this.checkUserDeclarations),  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  AssertionError.make(compiler,  this.checkUserDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError.make(compiler,  this.checkUserDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
680	[BUG]  [BUGGY]  Standardize(compiler,  this.checkUserDeclarations,  assertOnChange),  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  this.checkUserDeclarations,  assertOnChange),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  this.checkUserDeclarations,  assertOnChange),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
681	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkStatements),  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkStatements),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkStatements),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
682	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
683	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  this.checkUserDeclarations),  [CE]  illegal  start  of  type  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  this.checkUserDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  this.checkUserDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
684	[BUG]  [BUGGY]  Compiler.getInstance(),  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Compiler.getInstance(),  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Compiler.getInstance(),  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
685	[BUG]  [BUGGY]  Normalize(compiler,  validateOnChange,  this.checkUserDeclarations),  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  validateOnChange,  this.checkUserDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  validateOnChange,  this.checkUserDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
686	[BUG]  [BUGGY]  Serialize(compiler,  assertOnChange,  this.checkUserDeclarations));  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  assertOnChange,  this.checkUserDeclarations));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  assertOnChange,  this.checkUserDeclarations));	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
687	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  true,  this.checkUserDeclarations),  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  true,  this.checkUserDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  true,  this.checkUserDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
688	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  this.checkUserDeclarations),  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  this.checkUserDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  this.checkUserDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
689	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange);  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations,  assertOnChange);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
690	[BUG]  [BUGGY]  Synchronize(compiler,  assertOnChange,  this.checkUserDeclarations),  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Synchronize(compiler,  assertOnChange,  this.checkUserDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Synchronize(compiler,  assertOnChange,  this.checkUserDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
691	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations)  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations)  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations)	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
692	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkLocalDeclarations),  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkLocalDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkLocalDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
693	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration));  [CE]  <identifier>  expected  [FE]                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclaration));	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
694	[BUG]  [BUGGY]  Synchronize(compiler,  assertOnChange,  this.checkUserDeclarations));  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Synchronize(compiler,  assertOnChange,  this.checkUserDeclarations));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Synchronize(compiler,  assertOnChange,  this.checkUserDeclarations));	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
695	[BUG]  [BUGGY]  Normalize(compiler,  assertNotNull,  this.checkUserDeclarations),  [CE]  <identifier>  expected  [FE]                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertNotNull,  this.checkUserDeclarations),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertNotNull,  this.checkUserDeclarations),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
696	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkStatements)  [CE]  <identifier>  expected  [FE]                                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkStatements)  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkStatements)	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
697	[BUG]  [BUGGY]  this.checkUserDeclarations,  assertOnChange);  [CE]  illegal  start  of  type  [FE]                                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations,  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations,  assertOnChange);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
698	[BUG]  [BUGGY]  Standardize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration)	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
699	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkConstants),  [CE]  <identifier>  expected  [FE]                                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkConstants),  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkConstants),	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
700	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  false,  this.checkUserDeclarations)  [CE]  <identifier>  expected  [FE]                                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  false,  this.checkUserDeclarations)  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  false,  this.checkUserDeclarations)	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
701	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  haveOkDuplicateDeclaration)  [CE]  <identifier>  expected  [FE]                                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  haveOkDuplicateDeclaration)  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  haveOkDuplicateDeclaration)	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations),    	non-compiled	[CE]  <identifier>  expected	96	None	replace
702	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
703	[BUG]  [BUGGY]  Normalize(compiler,  DEFAULT_LOCAL_NAMES_UNIQUE,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  DEFAULT_LOCAL_NAMES_UNIQUE,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  DEFAULT_LOCAL_NAMES_UNIQUE,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
704	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  false)  {  [CE]  <identifier>  expected  [FE]                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  false)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
705	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  true)  {  [CE]  <identifier>  expected  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  true)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
706	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE);  [CE]  illegal  start  of  type  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE);	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
707	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  this.checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
708	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
709	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  verifyOnChange)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
710	[BUG]  [BUGGY]  Serialize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
711	[BUG]  [BUGGY]  Normalize(compiler,  DEFAULT_WHILE_TO_FOR,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  DEFAULT_WHILE_TO_FOR,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  DEFAULT_WHILE_TO_FOR,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
712	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
713	[BUG]  [BUGGY]  Normalize(compiler,  this.assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
714	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
715	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
716	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  validateOnChange)  {  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  validateOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  validateOnChange)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
717	[BUG]  [BUGGY]  AssertionError(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
718	[BUG]  [BUGGY]  Normalize(compiler,  false,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
719	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
720	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  0)  {  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  0)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  0)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
721	[BUG]  [BUGGY]  Normalize(compiler,  0L,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  0L,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  0L,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
722	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_WHILE_TO_FOR)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
723	[BUG]  [BUGGY]  AssertionError(compiler,  DEFAULT_LOCAL_NAMES_UNIQUE,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  DEFAULT_LOCAL_NAMES_UNIQUE,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  DEFAULT_LOCAL_NAMES_UNIQUE,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
724	[BUG]  [BUGGY]  Standardize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  checkUserDeclarations)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
725	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  illegal  start  of  type  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
726	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
727	[BUG]  [BUGGY]  Normalize(compiler,  validateOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  validateOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  validateOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
728	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  checkUserDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  checkUserDeclaration)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
729	[BUG]  [BUGGY]  Normalize(compiler,  DEFAULT_LOCAL_NAMES_UNIQUE,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  DEFAULT_LOCAL_NAMES_UNIQUE,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  DEFAULT_LOCAL_NAMES_UNIQUE,  checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
730	[BUG]  [BUGGY]  Normalize(compiler,  checkUserDeclarations,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  checkUserDeclarations,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  checkUserDeclarations,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
731	[BUG]  [BUGGY]  Normalize(compiler,  true,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
732	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  ensureOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  ensureOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  ensureOnChange)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
733	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
734	[BUG]  [BUGGY]  final  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  final  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
735	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  MAKE_LOCAL_NAMES_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  MAKE_LOCAL_NAMES_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  MAKE_LOCAL_NAMES_FOR)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
736	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  MAKE_LOCAL_NAMES_WARNING)  {  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  MAKE_LOCAL_NAMES_WARNING)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  MAKE_LOCAL_NAMES_WARNING)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
737	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  ignoreUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  ignoreUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  ignoreUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
738	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
739	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  this.checkUserDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  this.checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  this.checkUserDeclaration)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
740	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  MAKE_LOCAL_NAMES_VAR)  {  [CE]  <identifier>  expected  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  MAKE_LOCAL_NAMES_VAR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  MAKE_LOCAL_NAMES_VAR)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
741	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  deprecated)  {  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  deprecated)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  deprecated)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
742	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  constantMap)  {  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  constantMap)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  constantMap)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
743	[BUG]  [BUGGY]  validate(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  validate(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	validate(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
744	[BUG]  [BUGGY]  Normalize(compiler,  true,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
745	[BUG]  [BUGGY]  Standardize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  false)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  false)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
746	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  parser)  {  [CE]  <identifier>  expected  [FE]                                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  parser)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  parser)  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
747	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  findUserDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  findUserDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE,  findUserDeclarations())  {	  Normalize(compiler,    assertOnChange,    DEFAULT_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
748	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  checkUserDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
749	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkConstants)  {  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkConstants)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
750	[BUG]  [BUGGY]  Normalize(compiler,  true,  assertOnChange,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  assertOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  assertOnChange,  checkUserDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
751	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkCheckUserDeclarations,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkCheckUserDeclarations,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkCheckUserDeclarations,  hasOkDuplicateDeclaration)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
752	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  false)  {  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclarations,  false)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
753	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
754	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkStatements)  {  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkStatements)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkStatements)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
755	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkOkDuplicateDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
756	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkHasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkHasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkHasOkDuplicateDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
757	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  true)  {  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclarations,  true)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
758	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  false,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  false,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  false,  checkUserDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
759	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkLocalDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkLocalDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkLocalDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
760	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  assertOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
761	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  checkConstants)  {  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  checkConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  assertOnChange,  checkConstants)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
762	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  isVerifyConstants)  {  [CE]  <identifier>  expected  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  isVerifyConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclarations,  isVerifyConstants)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
763	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  null,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  null,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  null,  checkUserDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
764	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  verifyOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
765	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  checkDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  checkDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  assertOnChange,  checkDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
766	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkEmptyDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkEmptyDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkEmptyDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
767	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkConstantDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkConstantDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkConstantDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
768	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkNodeDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkNodeDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkNodeDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
769	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  0)  {  [CE]  <identifier>  expected  [FE]                                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  0)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclarations,  0)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
770	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkHandlerDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkHandlerDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkHandlerDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
771	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkVars)  {  [CE]  <identifier>  expected  [FE]                                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkVars)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
772	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkLocaleDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkLocaleDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkLocaleDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
773	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  false)  {  [CE]  <identifier>  expected  [FE]                                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  false)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
774	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkMissingDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkMissingDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkMissingDeclarations)  {	  Normalize(Compiler    compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
775	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUsersOverVars,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUsersOverVars,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUsersOverVars,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
776	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  this.checkUsersOverVars);  [CE]  illegal  start  of  type  [FE]                      RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  this.checkUsersOverVars);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  this.checkUsersOverVars);	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
777	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  this.checkUsersOverVars)  {  [CE]  illegal  start  of  type  [FE]                        RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  this.checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  this.checkUsersOverVars)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
778	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
779	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUsersOverVars)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                            RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this.checkUsersOverVars)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
780	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  this.checkUsersOverVars)  {  [CE]  <identifier>  expected  [FE]                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  this.checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  this.checkUsersOverVars)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
781	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  false)  {  [CE]  <identifier>  expected  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  false)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
782	[BUG]  [BUGGY]  AssertionError(compiler,  this.checkUsersOverVars,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  this.checkUsersOverVars,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  this.checkUsersOverVars,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
783	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  true)  {  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  true)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
784	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  this.checkUsersOverVars));  [CE]  illegal  start  of  type  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  this.checkUsersOverVars));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  this.checkUsersOverVars));	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
785	[BUG]  [BUGGY]  Standardize(compiler,  this.checkUsersOverVars,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  this.checkUsersOverVars,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  this.checkUsersOverVars,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
786	[BUG]  [BUGGY]  Serialize(compiler,  assertOnChange,  this.checkUsersOverVars)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  assertOnChange,  this.checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  assertOnChange,  this.checkUsersOverVars)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
787	[BUG]  [BUGGY]  this.checkUsersOverVars  =  checkUserDeclarations(compiler,  assertOnChange,  this.checkUsersOverVars)  {  [CE]  illegal  start  of  type  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  this.checkUsersOverVars  =  checkUserDeclarations(compiler,  assertOnChange,  this.checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUsersOverVars  =  checkUserDeclarations(compiler,  assertOnChange,  this.checkUsersOverVars)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
788	[BUG]  [BUGGY]  normalize(compiler,  this.checkUsersOverVars,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.checkUsersOverVars,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.checkUsersOverVars,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
789	[BUG]  [BUGGY]  Normalize(compiler,  false,  this.checkUsersOverVars)  {  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  this.checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  this.checkUsersOverVars)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
790	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  0)  {  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  0)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  0)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
791	[BUG]  [BUGGY]  Serialize(compiler,  this.checkUsersOverVars,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  this.checkUsersOverVars,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  this.checkUsersOverVars,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
792	[BUG]  [BUGGY]  this.checkUsersOverVars  =  assertOnChange;  [CE]  illegal  start  of  type  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  this.checkUsersOverVars  =  assertOnChange;  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUsersOverVars  =  assertOnChange;	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
793	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  false,  this.checkUsersOverVars)  {  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  false,  this.checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  false,  this.checkUsersOverVars)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
794	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
795	[BUG]  [BUGGY]  this.checkUsersOverVars  =  checkUserDeclarations(compiler,  assertOnChange,  this.checkUsersOverVars);  [CE]  illegal  start  of  type  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  this.checkUsersOverVars  =  checkUserDeclarations(compiler,  assertOnChange,  this.checkUsersOverVars);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUsersOverVars  =  checkUserDeclarations(compiler,  assertOnChange,  this.checkUsersOverVars);	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
796	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  null)  {  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  null)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  null)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
797	[BUG]  [BUGGY]  Normalize(compiler,  validateOnChange,  this.checkUsersOverVars)  {  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  validateOnChange,  this.checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  validateOnChange,  this.checkUsersOverVars)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
798	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  isVerifyConstants)  {  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  isVerifyConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  isVerifyConstants)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
799	[BUG]  [BUGGY]  Normalize(compiler,  0L,  this.checkUsersOverVars)  {  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  0L,  this.checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  0L,  this.checkUsersOverVars)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
800	[BUG]  [BUGGY]  Normalize(compiler,  true,  this.checkUsersOverVars)  {  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  this.checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  this.checkUsersOverVars)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
801	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  this.checkUsersOverVars)  {  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  this.checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  assertOnChange,  this.checkUsersOverVars)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
802	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars),  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars),  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUsersOverVars),  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
803	[BUG]  [BUGGY]  this.compiler  =  compiler.createParser(this.checkUsersOverVars,  assertOnChange);  [CE]  illegal  start  of  type  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  this.compiler  =  compiler.createParser(this.checkUsersOverVars,  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.compiler  =  compiler.createParser(this.checkUsersOverVars,  assertOnChange);	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
804	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  validateOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  validateOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  validateOnChange)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
805	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  isDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  isDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  isDeclaration)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
806	[BUG]  [BUGGY]  (compiler,  assertOnChange,  this.checkUsersOverVars));  [CE]  illegal  start  of  type  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  (compiler,  assertOnChange,  this.checkUsersOverVars));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	(compiler,  assertOnChange,  this.checkUsersOverVars));	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
807	[BUG]  [BUGGY]  Superclass(compiler,  assertOnChange,  this.checkUsersOverVars)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Superclass(compiler,  assertOnChange,  this.checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Superclass(compiler,  assertOnChange,  this.checkUsersOverVars)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
808	[BUG]  [BUGGY]  Preconditions.checkState(this.checkUsersOverVars!=  assertOnChange);  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Preconditions.checkState(this.checkUsersOverVars!=  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Preconditions.checkState(this.checkUsersOverVars!=  assertOnChange);	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
809	[BUG]  [BUGGY]  super(compiler,  false,  this.checkUsersOverVars)  {  [CE]  illegal  start  of  type  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  false,  this.checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  false,  this.checkUsersOverVars)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
810	[BUG]  [BUGGY]  Preconditions.checkState(this.checkUsersOverVars  ==  assertOnChange);  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Preconditions.checkState(this.checkUsersOverVars  ==  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Preconditions.checkState(this.checkUsersOverVars  ==  assertOnChange);	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
811	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  verifyOnChange)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
812	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.propagateConstantAnnotationsOverVars)  {  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.propagateConstantAnnotationsOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.propagateConstantAnnotationsOverVars)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
813	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
814	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkConstantsOverVars)  {  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkConstantsOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkConstantsOverVars)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
815	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  constantMap)  {  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  constantMap)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUsersOverVars,  constantMap)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
816	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUsersOverVars),  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUsersOverVars),  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUsersOverVars),  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
817	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUsersOverVars,  failOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUsersOverVars,  failOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUsersOverVars,  failOnChange)  {	  Normalize(compiler,    assertOnChange,    this.checkUsersOverVars)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
818	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkDeclarations())  {  [CE]  <identifier>  expected  [FE]                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
819	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations(),  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations(),  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclarations(),  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
820	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkStatements())  {  [CE]  <identifier>  expected  [FE]                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkStatements())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkStatements())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
821	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations(),  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations(),  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations(),  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
822	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkDeclarations())  {  [CE]  <identifier>  expected  [FE]                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
823	[BUG]  [BUGGY]  Normalize(compiler,  false,  checkUserDeclarations())  {  [CE]  <identifier>  expected  [FE]                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  checkUserDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  checkUserDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
824	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConstantDeclarations())  {  [CE]  <identifier>  expected  [FE]                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConstantDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkConstantDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
825	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkLocalDeclarations())  {  [CE]  <identifier>  expected  [FE]                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkLocalDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkLocalDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
826	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkOkDuplicateDeclarations())  {  [CE]  <identifier>  expected  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkOkDuplicateDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkOkDuplicateDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
827	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConstants())  {  [CE]  <identifier>  expected  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConstants())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkConstants())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
828	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkStatements())  {  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkStatements())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkStatements())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
829	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkHasOkDuplicateDeclarations())  {  [CE]  <identifier>  expected  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkHasOkDuplicateDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkHasOkDuplicateDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
830	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkUserDeclarations())  {  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkUserDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  checkUserDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
831	[BUG]  [BUGGY]  Normalize(compiler,  true,  checkUserDeclarations())  {  [CE]  <identifier>  expected  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  checkUserDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  checkUserDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
832	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkConstantDeclarations())  {  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkConstantDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkConstantDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
833	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkConstants())  {  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkConstants())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkConstants())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
834	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
835	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkNodeDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkNodeDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkNodeDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
836	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkPermissions())  {  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkPermissions())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkPermissions())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
837	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkLocalDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkLocalDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkLocalDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
838	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  checkUserDeclarations())  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  checkUserDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  checkUserDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
839	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkEmptyDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkEmptyDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkEmptyDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
840	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkHasOkDuplicateDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkHasOkDuplicateDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkHasOkDuplicateDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
841	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConstantAnnotations())  {  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConstantAnnotations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkConstantAnnotations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
842	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkOkDuplicateDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkOkDuplicateDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkOkDuplicateDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
843	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkAllAnnotations())  {  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkAllAnnotations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkAllAnnotations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
844	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkStatementDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkStatementDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkStatementDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
845	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkNoDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkNoDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkNoDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
846	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations()),  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations()),  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations()),  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
847	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations());  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations());  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclarations());	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
848	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConversationDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConversationDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkConversationDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
849	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkAllDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkAllDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkAllDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
850	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkReturnStatements())  {  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkReturnStatements())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkReturnStatements())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
851	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkOkDuplicateDeclaration())  {  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkOkDuplicateDeclaration())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkOkDuplicateDeclaration())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
852	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkHasOkDuplicateDeclaration())  {  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkHasOkDuplicateDeclaration())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkHasOkDuplicateDeclaration())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
853	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkVarDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkVarDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkVarDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
854	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConverts())  {  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConverts())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkConverts())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
855	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkMatchingDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkMatchingDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkMatchingDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
856	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations(),  false)  {  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations(),  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations(),  false)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
857	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations(),  true)  {  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations(),  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclarations(),  true)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
858	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkCauseDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkCauseDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkCauseDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
859	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkRequiresDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkRequiresDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkRequiresDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
860	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations());  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations());  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations());	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
861	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkInitializingDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkInitializingDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkInitializingDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
862	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations(),  true)  {  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations(),  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations(),  true)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
863	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConditions())  {  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkConditions())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkConditions())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
864	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkStructureDeclarations())  {  [CE]  <identifier>  expected  [FE]                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkStructureDeclarations())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkStructureDeclarations())  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations())    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
865	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
866	[BUG]  [BUGGY]  Normalize(compiler,  false,  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
867	[BUG]  [BUGGY]  AssertionError(compiler,  this.checkUserDeclarations,  assertOnChange);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  this.checkUserDeclarations,  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  this.checkUserDeclarations,  assertOnChange);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
868	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclarations);  [CE]  <identifier>  expected  [FE]                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.hasOkDuplicateDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
869	[BUG]  [BUGGY]  Serialize(compiler,  assertOnChange,  this.checkUserDeclarations);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  assertOnChange,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  assertOnChange,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
870	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
871	[BUG]  [BUGGY]  Generalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Generalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Generalize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
872	[BUG]  [BUGGY]  Standardize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
873	[BUG]  [BUGGY]  Normalize(compiler,  true,  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
874	[BUG]  [BUGGY]  Normalize(compiler,  checkUserDeclarations,  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  checkUserDeclarations,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  checkUserDeclarations,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
875	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  false);  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  false);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  false);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
876	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  false,  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  false,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  false,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
877	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  true);  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  true);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  true);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
878	[BUG]  [BUGGY]  Standardize(compiler,  this.checkUserDeclarations,  assertOnChange);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  this.checkUserDeclarations,  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  this.checkUserDeclarations,  assertOnChange);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
879	[BUG]  [BUGGY]  VerifyConstants(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  VerifyConstants(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	VerifyConstants(compiler,  assertOnChange,  this.checkUserDeclarations,  hasOkDuplicateDeclaration);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
880	[BUG]  [BUGGY]  Normalize(compiler,  validateOnChange,  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  validateOnChange,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  validateOnChange,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
881	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  false);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  false);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
882	[BUG]  [BUGGY]  Normalize(compiler,  0L,  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  0L,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  0L,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
883	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkDeclarations);  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
884	[BUG]  [BUGGY]  Synchronize(compiler,  this.checkUserDeclarations,  assertOnChange);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Synchronize(compiler,  this.checkUserDeclarations,  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Synchronize(compiler,  this.checkUserDeclarations,  assertOnChange);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
885	[BUG]  [BUGGY]  VerifyConstants(compiler,  assertOnChange,  this.checkUserDeclarations);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  VerifyConstants(compiler,  assertOnChange,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	VerifyConstants(compiler,  assertOnChange,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
886	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isVerifyConstants);  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isVerifyConstants);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isVerifyConstants);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
887	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  haveOkDuplicateDeclaration);  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  haveOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  haveOkDuplicateDeclaration);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
888	[BUG]  [BUGGY]  validate(compiler,  assertOnChange,  this.checkUserDeclarations);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  validate(compiler,  assertOnChange,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	validate(compiler,  assertOnChange,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
889	[BUG]  [BUGGY]  Normalize(compiler,  this.checkConstants,  assertOnChange,  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkConstants,  assertOnChange,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkConstants,  assertOnChange,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
890	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  true);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  true);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
891	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkStatements);  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkStatements);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkStatements);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
892	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkDeclarations,  hasOkDuplicateDeclaration);  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkDeclarations,  hasOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkDeclarations,  hasOkDuplicateDeclaration);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
893	[BUG]  [BUGGY]  normalize(compiler,  this.checkUserDeclarations,  assertOnChange);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  this.checkUserDeclarations,  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  this.checkUserDeclarations,  assertOnChange);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
894	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isOkDuplicateDeclaration);  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  isOkDuplicateDeclaration);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
895	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  0);  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  0);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  0);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
896	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkConstants);  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkConstants);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkConstants);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
897	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
898	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkStatements,  hasOkDuplicateDeclaration);  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkStatements,  hasOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkStatements,  hasOkDuplicateDeclaration);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
899	[BUG]  [BUGGY]  Preconditions.checkState(this.checkUserDeclarations!=  assertOnChange);  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Preconditions.checkState(this.checkUserDeclarations!=  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Preconditions.checkState(this.checkUserDeclarations!=  assertOnChange);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
900	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.validateDeclarations);  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.validateDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.validateDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
901	[BUG]  [BUGGY]  Generalize(compiler,  this.checkUserDeclarations,  assertOnChange);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Generalize(compiler,  this.checkUserDeclarations,  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Generalize(compiler,  this.checkUserDeclarations,  assertOnChange);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
902	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,!hasOkDuplicateDeclaration);  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,!hasOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,!hasOkDuplicateDeclaration);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
903	[BUG]  [BUGGY]  AssertionError(compiler,  this.checkUserDeclarations);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
904	[BUG]  [BUGGY]  Serialize(compiler,  this.checkUserDeclarations,  assertOnChange);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  this.checkUserDeclarations,  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  this.checkUserDeclarations,  assertOnChange);	  Normalize(compiler,    assertOnChange,    this.checkUserDeclarations);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
905	[BUG]  [BUGGY]  Normalize(compiler,  checkUserDeclarations,  Preconditions.checkNotNull(compiler));  [CE]  <identifier>  expected  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  checkUserDeclarations,  Preconditions.checkNotNull(compiler));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  checkUserDeclarations,  Preconditions.checkNotNull(compiler));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
906	[BUG]  [BUGGY]  Normalize(compiler,  false,  Preconditions.checkNotNull(compiler));  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  Preconditions.checkNotNull(compiler));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  Preconditions.checkNotNull(compiler));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
907	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(hasOkDuplicateDeclaration));  [CE]  <identifier>  expected  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(hasOkDuplicateDeclaration));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(hasOkDuplicateDeclaration));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
908	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(!hasOkDuplicateDeclaration));  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(!hasOkDuplicateDeclaration));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(!hasOkDuplicateDeclaration));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
909	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  Preconditions.checkNotNull(compiler));  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  Preconditions.checkNotNull(compiler));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations,  Preconditions.checkNotNull(compiler));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
910	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(converter));  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(converter));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(converter));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
911	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(!Convert_WHILE_TO_FOR));  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(!Convert_WHILE_TO_FOR));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(!Convert_WHILE_TO_FOR));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
912	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations));  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
913	[BUG]  [BUGGY]  Normalize(compiler,  validateOnChange,  Preconditions.checkNotNull(compiler));  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  validateOnChange,  Preconditions.checkNotNull(compiler));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  validateOnChange,  Preconditions.checkNotNull(compiler));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
914	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(Convert_WHILE_TO_FOR));  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(Convert_WHILE_TO_FOR));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(Convert_WHILE_TO_FOR));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
915	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(assertOnChange));  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(assertOnChange));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(assertOnChange));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
916	[BUG]  [BUGGY]  Normalize(compiler,  0L,  Preconditions.checkNotNull(compiler));  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  0L,  Preconditions.checkNotNull(compiler));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  0L,  Preconditions.checkNotNull(compiler));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
917	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkStateNotNull(compiler));  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkStateNotNull(compiler));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkStateNotNull(compiler));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
918	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(this.checkUserDeclarations));  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(this.checkUserDeclarations));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(this.checkUserDeclarations));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
919	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(true));  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(true));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(true));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
920	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(assertOnChange));  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(assertOnChange));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(assertOnChange));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
921	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  true,  Preconditions.checkNotNull(compiler));  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  true,  Preconditions.checkNotNull(compiler));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  true,  Preconditions.checkNotNull(compiler));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
922	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(compiler),  checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(compiler),  checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(compiler),  checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
923	[BUG]  [BUGGY]  Normalize(compiler,  true,  Preconditions.checkNotNull(compiler));  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  Preconditions.checkNotNull(compiler));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  Preconditions.checkNotNull(compiler));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
924	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  Preconditions.checkNotNull(assertOnChange));  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  Preconditions.checkNotNull(assertOnChange));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  Preconditions.checkNotNull(assertOnChange));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
925	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(false));  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(false));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(false));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
926	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
927	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler);  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Preconditions.checkNotNull(compiler);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Preconditions.checkNotNull(compiler);	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
928	[BUG]  [BUGGY]  AssertionError(compiler,  assertOnChange,  Preconditions.checkNotNull(assertOnChange));  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  assertOnChange,  Preconditions.checkNotNull(assertOnChange));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  assertOnChange,  Preconditions.checkNotNull(assertOnChange));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
929	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(!Convert_WHILE_TO_FOR  ||  assertOnChange));  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(!Convert_WHILE_TO_FOR  ||  assertOnChange));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(!Convert_WHILE_TO_FOR  ||  assertOnChange));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
930	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations),  true);  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations),  true);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations),  true);	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
931	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(this.assertOnChange));  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(this.assertOnChange));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(this.assertOnChange));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
932	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(compiler),  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(compiler),  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(compiler),  this.checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
933	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(compiler),  false);  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(compiler),  false);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(compiler),  false);	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
934	[BUG]  [BUGGY]  Normalize(compiler,  verifyOnChange,  Preconditions.checkNotNull(compiler));  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  verifyOnChange,  Preconditions.checkNotNull(compiler));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  verifyOnChange,  Preconditions.checkNotNull(compiler));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
935	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(!Convert_WHILE_TO_FOR),  false);  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(!Convert_WHILE_TO_FOR),  false);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(!Convert_WHILE_TO_FOR),  false);	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
936	[BUG]  [BUGGY]  AssertionError(compiler,  assertOnChange,  Preconditions.checkNotNull(compiler));  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  assertOnChange,  Preconditions.checkNotNull(compiler));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  assertOnChange,  Preconditions.checkNotNull(compiler));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
937	[BUG]  [BUGGY]  AssertionError(compiler,  assertOnChange,  Preconditions.checkNotNull(exampleOnChange));  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  assertOnChange,  Preconditions.checkNotNull(exampleOnChange));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  assertOnChange,  Preconditions.checkNotNull(exampleOnChange));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
938	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(compiler),  true);  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(compiler),  true);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkNotNull(compiler),  true);	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
939	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations),  false);  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations),  false);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations),  false);	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
940	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  Preconditions.checkNotNull(explicitOnChange));  [CE]  <identifier>  expected  [FE]                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  Preconditions.checkNotNull(explicitOnChange));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  Preconditions.checkNotNull(explicitOnChange));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
941	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(!Convert_WHILE_TO_FOR),  true);  [CE]  <identifier>  expected  [FE]                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(!Convert_WHILE_TO_FOR),  true);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(!Convert_WHILE_TO_FOR),  true);	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
942	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(Convert_WHILE_TO_FOR,  assertOnChange));  [CE]  <identifier>  expected  [FE]                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(Convert_WHILE_TO_FOR,  assertOnChange));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(Convert_WHILE_TO_FOR,  assertOnChange));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
943	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations).isEmpty());  [CE]  <identifier>  expected  [FE]                                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations).isEmpty());  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations).isEmpty());	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
944	[BUG]  [BUGGY]  Normalize(compiler,  assertNull,  Preconditions.checkNotNull(compiler));  [CE]  <identifier>  expected  [FE]                                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertNull,  Preconditions.checkNotNull(compiler));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertNull,  Preconditions.checkNotNull(compiler));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
945	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(Convert_WHILE_TO_FOR  ||  assertOnChange));  [CE]  <identifier>  expected  [FE]                                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(Convert_WHILE_TO_FOR  ||  assertOnChange));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(Convert_WHILE_TO_FOR  ||  assertOnChange));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
946	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(!hasOkDuplicateDeclarations));  [CE]  <identifier>  expected  [FE]                                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(!hasOkDuplicateDeclarations));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(!hasOkDuplicateDeclarations));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
947	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations  ||  checkUserDeclarations));  [CE]  <identifier>  expected  [FE]                                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations  ||  checkUserDeclarations));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations  ||  checkUserDeclarations));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
948	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(hasOkDuplicateDeclarations));  [CE]  <identifier>  expected  [FE]                                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(hasOkDuplicateDeclarations));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(hasOkDuplicateDeclarations));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
949	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations "));  [CE]  <identifier>  expected  [FE]                                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations "));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  Preconditions.checkState(this.checkUserDeclarations "));	  Normalize(compiler,    assertOnChange,    Preconditions.checkNotNull(compiler));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
950	[BUG]  [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get  [CE]  illegal  start  of  type  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().get	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
951	[BUG]  [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().n  [CE]  illegal  start  of  type  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().n  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().n	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
952	[BUG]  [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()    	non-compiled	[CE]  <identifier>  expected	38	None	replace
953	[BUG]  [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()  [CE]  illegal  start  of  type  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
954	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().get().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().get().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().get().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()    	non-compiled	[CE]  <identifier>  expected	38	None	replace
955	[BUG]  [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  illegal  start  of  type  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
956	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().first().getDeclarations().iterator().next().getDe  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().first().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().first().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next()    	non-compiled	[CE]  <identifier>  expected	38	None	replace
957	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().get    	non-compiled	[CE]  <identifier>  expected	31	None	replace
958	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().first().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().first().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().first().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().get    	non-compiled	[CE]  <identifier>  expected	31	None	replace
959	[BUG]  [BUGGY]  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().get    	non-compiled	[CE]  <identifier>  expected	31	None	replace
960	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().get    	non-compiled	[CE]  <identifier>  expected	31	None	replace
961	[BUG]  [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [CE]  illegal  start  of  type  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().get    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
962	[BUG]  [BUGGY]  Constants.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  illegal  start  of  type  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Constants.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Constants.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().get    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
963	[BUG]  [BUGGY]  Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [CE]  ';'  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().get    	non-compiled	[CE]  ';'  expected	31	None	replace
964	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().get().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().get().iterator().next().iterator().next().iterator().next().iterator().next().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().get().iterator().next().iterator().next().iterator().next().iterator().next().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().get    	non-compiled	[CE]  <identifier>  expected	31	None	replace
965	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().get    	non-compiled	[CE]  <identifier>  expected	31	None	replace
966	[BUG]  [BUGGY]  MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	MutableSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().n	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().get    	non-compiled	[CE]  <identifier>  expected	31	None	replace
967	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next().get    	non-compiled	[CE]  <identifier>  expected	31	None	replace
968	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  false);  [CE]  <identifier>  expected  [FE]                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  false);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  false);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
969	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this,  hasOkDuplicateDeclaration);  [CE]  <identifier>  expected  [FE]                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this,  hasOkDuplicateDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this,  hasOkDuplicateDeclaration);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
970	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this,  checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this,  checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this,  checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
971	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  null);  [CE]  <identifier>  expected  [FE]                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  null);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  null);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
972	[BUG]  [BUGGY]  Normalize(compiler,  this,  assertOnChange);  [CE]  <identifier>  expected  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this,  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this,  assertOnChange);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
973	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this,  false);  [CE]  <identifier>  expected  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this,  false);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this,  false);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
974	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.assertOnChange  =  assertOnChange;  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.assertOnChange  =  assertOnChange;  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.assertOnChange  =  assertOnChange;	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
975	[BUG]  [BUGGY]  VerifyConstants(compiler,  assertOnChange,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  VerifyConstants(compiler,  assertOnChange,  false);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	VerifyConstants(compiler,  assertOnChange,  false);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
976	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this,  true);  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this,  true);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this,  true);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
977	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  this);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  this);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
978	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this,  hasOkDuplicateDeclarations);  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this,  hasOkDuplicateDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this,  hasOkDuplicateDeclarations);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
979	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.validate(compiler,  assertOnChange,  constantMap);  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.validate(compiler,  assertOnChange,  constantMap);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.validate(compiler,  assertOnChange,  constantMap);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
980	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  true);  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  true);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  true);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
981	[BUG]  [BUGGY]  VerifyConstants(compiler,  assertOnChange,  checkUserDeclarations);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  VerifyConstants(compiler,  assertOnChange,  checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	VerifyConstants(compiler,  assertOnChange,  checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
982	[BUG]  [BUGGY]  AssertionError(compiler,  assertOnChange,  checkUserDeclarations);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  assertOnChange,  checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  assertOnChange,  checkUserDeclarations);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
983	[BUG]  [BUGGY]  AssertionError(compiler,  assertOnChange,  this);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  assertOnChange,  this);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  assertOnChange,  this);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
984	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getValue();  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getValue();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getValue();	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
985	[BUG]  [BUGGY]  AssertionError(compiler,  assertOnChange,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  assertOnChange,  null);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  assertOnChange,  null);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
986	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  false);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  false);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
987	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this,  isVerifyConstants);  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this,  isVerifyConstants);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this,  isVerifyConstants);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
988	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this,  constantMap);  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this,  constantMap);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this,  constantMap);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
989	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.entrySet().iterator().next().getValue();  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.entrySet().iterator().next().getValue();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.entrySet().iterator().next().getValue();	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
990	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet(compiler);  compiler.assertOnChange  =  assertOnChange;  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet(compiler);  compiler.assertOnChange  =  assertOnChange;  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet(compiler);  compiler.assertOnChange  =  assertOnChange;	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
991	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE);  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
992	[BUG]  [BUGGY]  AssertionError(compiler,  assertOnChange,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  assertOnChange,  false);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  assertOnChange,  false);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
993	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.assertOnChange  =  true;  [CE]  <identifier>  expected  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.assertOnChange  =  true;  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.assertOnChange  =  true;	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
994	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration);  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclaration);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
995	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange);  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  verifyOnChange);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
996	[BUG]  [BUGGY]  Normalize(compiler,  checkUserDeclarations,  this);  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  checkUserDeclarations,  this);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  checkUserDeclarations,  this);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
997	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclaration);  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclaration);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclaration);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
998	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next();  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next();	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
999	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().getValue();  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().getValue();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().getValue();	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
1000	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.reportCodeChange();  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.reportCodeChange();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.reportCodeChange();	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
1001	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this,  null);  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this,  null);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this,  null);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
1002	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.setIndexedProblems(compiler.getIndexedProblems());  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.setIndexedProblems(compiler.getIndexedProblems());  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.setIndexedProblems(compiler.getIndexedProblems());	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
1003	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().hasNext();  [CE]  <identifier>  expected  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().hasNext();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().hasNext();	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
1004	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.addDeclaration(compiler,  assertOnChange,  constantMap);  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.addDeclaration(compiler,  assertOnChange,  constantMap);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.addDeclaration(compiler,  assertOnChange,  constantMap);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
1005	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_NAMES_UNIQUE);  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  DEFAULT_NAMES_UNIQUE);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  DEFAULT_NAMES_UNIQUE);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
1006	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.setIndexedProperties(compiler.getIndexedProperties());  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.setIndexedProperties(compiler.getIndexedProperties());  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler.setIndexedProperties(compiler.getIndexedProperties());	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
1007	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet(compiler,  assertOnChange);  [CE]  illegal  start  of  type  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet(compiler,  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet(compiler,  assertOnChange);	  Normalize(compiler,    assertOnChange,    this);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
1008	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  checkUserDeclarations);  [CE]  illegal  start  of  type  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  checkUserDeclarations);	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
1009	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1010	[BUG]  [BUGGY]  Normalize(compiler,  false,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1011	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  true)  {  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1012	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  checkUserDeclarations)  {  [CE]  illegal  start  of  type  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
1013	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  isVerifyConstants)  {  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  isVerifyConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  isVerifyConstants)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1014	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkVars)  {  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkVars)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1015	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  checkOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  checkOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  verifyOnChange,  checkOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1016	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkHandlerDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkHandlerDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkHandlerDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1017	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  ensureOnChange,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  ensureOnChange,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  ensureOnChange,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1018	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  isEmptyDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  isEmptyDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  isEmptyDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1019	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkHashedDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkHashedDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkHashedDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1020	[BUG]  [BUGGY]  Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()  [CE]  ';'  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Iterator  <?>  constantMap  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()    	non-compiled	[CE]  ';'  expected	27	None	replace
1021	[BUG]  [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator()  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator()	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()    	non-compiled	[CE]  <identifier>  expected	27	None	replace
1022	[BUG]  [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iter  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iter  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	final  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iter	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()    	non-compiled	[CE]  <identifier>  expected	27	None	replace
1023	[BUG]  [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [CE]  illegal  start  of  type  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
1024	[BUG]  [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator()  [CE]  illegal  start  of  type  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Collections.  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator()	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
1025	[BUG]  [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	HashSet  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()    	non-compiled	[CE]  <identifier>  expected	27	None	replace
1026	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.values().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().iterator().next().iterator().next().iterator().next().iterator().next()    	non-compiled	[CE]  <identifier>  expected	27	None	replace
1027	[BUG]  [BUGGY]  Normalize(compiler,  this.assertOnChange,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.assertOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.assertOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1028	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  assertOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1029	[BUG]  [BUGGY]  Normalize(compiler,  validateOnChange,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  validateOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  validateOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1030	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
1031	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1032	[BUG]  [BUGGY]  this(compiler,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [CE]  illegal  start  of  type  [FE]                            RuntimeException    [CONTEXT]      [BUGGY]  this(compiler,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this(compiler,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
1033	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1034	[BUG]  [BUGGY]  Normalize(compiler,  verifyOnChange,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  verifyOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  verifyOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1035	[BUG]  [BUGGY]  Serialize(compiler,  assertOnChange,  checkUserDeclarations)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  assertOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  assertOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
1036	[BUG]  [BUGGY]  Normalize(compiler,  0L,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  0L,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  0L,  checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1037	[BUG]  [BUGGY]  Normalize(compiler,  true,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1038	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  assertOnChange,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1039	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  checkUserDeclarations),  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  checkUserDeclarations),  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  assertOnChange,  checkUserDeclarations),  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1040	[BUG]  [BUGGY]  Normalize(compiler,  buildOnChange,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  buildOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  buildOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1041	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  this.hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  this.hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  assertOnChange,  this.hasOkDuplicateDeclarations)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1042	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  verifyOnChange,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  assertOnChange,  verifyOnChange,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  assertOnChange,  verifyOnChange,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    assertOnChange,    checkUserDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1043	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1044	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1045	[BUG]  [BUGGY]  Normalize(compiler,  true,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1046	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE);  [CE]  illegal  start  of  type  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE);	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
1047	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1048	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  LAST_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  LAST_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations,  LAST_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1049	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
1050	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1051	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  true)  {  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1052	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  DEFAULT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1053	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1054	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  false)  {  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1055	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  CONVERT_WHILE_TO_FOR)  {  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  CONVERT_WHILE_TO_FOR)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  CONVERT_WHILE_TO_FOR)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1056	[BUG]  [BUGGY]  Serialize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
1057	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  LAST_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  LAST_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  LAST_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1058	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1059	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  false)  {  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1060	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  LAST_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  LAST_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations,  LAST_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1061	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  STRICT_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  STRICT_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  STRICT_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1062	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1063	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations),  LAST_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations),  LAST_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  this.checkUserDeclarations),  LAST_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1064	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  true)  {  [CE]  <identifier>  expected  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1065	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1066	[BUG]  [BUGGY]  Serialize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
1067	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  READ_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  READ_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  READ_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1068	[BUG]  [BUGGY]  AssertionError(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
1069	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [CE]  illegal  start  of  type  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
1070	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  VAR_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  VAR_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  VAR_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1071	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  VARIABLE_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  VARIABLE_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  VARIABLE_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1072	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  0)  {  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  0)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  0)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1073	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  validateOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  validateOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  validateOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1074	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  verifyOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1075	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [CE]  <identifier>  expected  [FE]                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1076	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  this.hasOkDuplicateDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  this.hasOkDuplicateDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  this.hasOkDuplicateDeclaration)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1077	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  checkUserDeclarations);	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1078	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  validateOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  validateOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  LAST_LOCAL_NAMES_UNIQUE,  validateOnChange)  {	  Normalize(compiler,    boolean    assertOnChange,    LAST_LOCAL_NAMES_UNIQUE)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1079	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1080	[BUG]  [BUGGY]  Normalize(compiler,  true,  assertOnChange,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  assertOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  assertOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1081	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  hasOkDuplicateDeclarations);  [CE]  illegal  start  of  type  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  hasOkDuplicateDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  hasOkDuplicateDeclarations);	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
1082	[BUG]  [BUGGY]  normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
1083	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1084	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  hasOkDuplicateDeclarations);  [CE]  illegal  start  of  type  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  hasOkDuplicateDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  hasOkDuplicateDeclarations);	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
1085	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  verifyOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1086	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  assertOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations,  assertOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1087	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1088	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclarations,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclarations,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclarations,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1089	[BUG]  [BUGGY]  Serialize(compiler,  assertOnChange,  hasOkDuplicateDeclarations)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  assertOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  assertOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
1090	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1091	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  hasOkDuplicateDeclarations)  {  [CE]  illegal  start  of  type  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
1092	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations),  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUserDeclarations),  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUserDeclarations),  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1093	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations,  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1094	[BUG]  [BUGGY]  Normalize(compiler,!assertOnChange,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,!assertOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,!assertOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1095	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations),  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations),  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUserDeclarations),  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1096	[BUG]  [BUGGY]  Normalize(compiler,  flags,  assertOnChange,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  flags,  assertOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  flags,  assertOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1097	[BUG]  [BUGGY]  Normalize(compiler,  statement,  assertOnChange,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  statement,  assertOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  statement,  assertOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1098	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  false,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  false,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  false,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1099	[BUG]  [BUGGY]  AssertionError(compiler,  assertOnChange,  hasOkDuplicateDeclarations)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  assertOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  assertOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
1100	[BUG]  [BUGGY]  Normalize(compiler,  int  assertOnChange,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  int  assertOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  int  assertOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1101	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  CheckUserDeclarations.class)  {  [CE]  <identifier>  expected  [FE]                                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  CheckUserDeclarations.class)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  CheckUserDeclarations.class)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1102	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations,  false)  {  [CE]  <identifier>  expected  [FE]                                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations,  false)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1103	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclarations,  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclarations,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  hasOkDuplicateDeclarations,  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1104	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  checkUsers,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  checkUsers,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  checkUsers,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1105	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUsers,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  checkUsers,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  checkUsers,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1106	[BUG]  [BUGGY]  Normalize(compiler,  false,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1107	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  CheckUserDeclarations.class)  {  [CE]  <identifier>  expected  [FE]                                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  CheckUserDeclarations.class)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  CheckUserDeclarations.class)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1108	[BUG]  [BUGGY]  AssertionError(compiler,  assertOnChange,  checkUserDeclarations)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  assertOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  assertOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
1109	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations,  true)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations,  true)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1110	[BUG]  [BUGGY]  Standardize(compiler,  assertOnChange,  checkUserDeclarations)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  assertOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  assertOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
1111	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  validateOnChange,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  validateOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  validateOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1112	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations),  this.checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations),  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  hasOkDuplicateDeclarations),  this.checkUserDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1113	[BUG]  [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  CheckUserDeclaration.class)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  boolean  assertOnChange,  CheckUserDeclaration.class)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  boolean  assertOnChange,  CheckUserDeclaration.class)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1114	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  hasOkDuplicateDeclarations)  {  [CE]  illegal  start  of  type  [FE]                                                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
1115	[BUG]  [BUGGY]  Normalize(compiler,  validateOnChange,  hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  validateOnChange,  hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  validateOnChange,  hasOkDuplicateDeclarations)  {	  Normalize(compiler,    boolean    assertOnChange,    hasOkDuplicateDeclarations)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1116	[BUG]  [BUGGY]  List  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  List  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	List  <  AbstractCompiler>  constantMap  =  Sets.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().hasNext();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1117	[BUG]  [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  new  HashSet  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  HashSet  <  AbstractCompiler>  constantMap  =  new  HashSet  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	HashSet  <  AbstractCompiler>  constantMap  =  new  HashSet  <  AbstractCompiler>();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().hasNext();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1118	[BUG]  [BUGGY]  Preconditions.checkState(constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Preconditions.checkState(constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Preconditions.checkState(constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().hasNext();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1119	[BUG]  [BUGGY]  Unit  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Unit  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Unit  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().hasNext();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1120	[BUG]  [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Collections.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  ArrayList  <  AbstractCompiler>  constantMap  =  Collections.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	ArrayList  <  AbstractCompiler>  constantMap  =  Collections.newArrayList();  assertOnChange  =  constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDe	  Set    <    AbstractCompiler>    constantMap    =    Sets.newHashSet();    assertOnChange    =    constantMap.keySet().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().next().getDeclarations().iterator().hasNext();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1121	[BUG]  [BUGGY]  Normalize(compiler,  false,  this.checkUserDeclarations,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  this.checkUserDeclarations,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  this.checkUserDeclarations,  assertOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1122	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  false,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  false,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations,  false,  assertOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1123	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  checkUserDeclarations);	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1124	[BUG]  [BUGGY]  Normalize(compiler,  false,  this.assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  this.assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  this.assertOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1125	[BUG]  [BUGGY]  Standardize(compiler,  true,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  true,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  true,  assertOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
1126	[BUG]  [BUGGY]  super(compiler,  false,  assertOnChange);  [CE]  illegal  start  of  type  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  false,  assertOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  false,  assertOnChange);	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
1127	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  true)  {  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  true)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1128	[BUG]  [BUGGY]  Normalize(compiler,  false,  true)  {  [CE]  <identifier>  expected  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  true)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1129	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkUserDeclarations.size())  {  [CE]  <identifier>  expected  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkUserDeclarations.size())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  checkUserDeclarations.size())  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1130	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  this.checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  this.checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  this.checkUserDeclarations);	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1131	[BUG]  [BUGGY]  AssertionError(compiler,  false,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                        RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  false,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  false,  assertOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
1132	[BUG]  [BUGGY]  Standardize(compiler,  false,  assertOnChange,  checkUserDeclarations)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Standardize(compiler,  false,  assertOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Standardize(compiler,  false,  assertOnChange,  checkUserDeclarations)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
1133	[BUG]  [BUGGY]  Serialize(compiler,  false,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  false,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  false,  assertOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
1134	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkUserDeclaration)  {  [CE]  <identifier>  expected  [FE]                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkUserDeclaration)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  checkUserDeclaration)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1135	[BUG]  [BUGGY]  Normalize(compiler,  false,  null,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  null,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  null,  assertOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1136	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  isVerifyConstants)  {  [CE]  <identifier>  expected  [FE]                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  isVerifyConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  isVerifyConstants)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1137	[BUG]  [BUGGY]  AssertionFailure(compiler,  false,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  AssertionFailure(compiler,  false,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionFailure(compiler,  false,  assertOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
1138	[BUG]  [BUGGY]  Synchronize(compiler,  false,  assertOnChange,  this.checkUserDeclarations)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Synchronize(compiler,  false,  assertOnChange,  this.checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Synchronize(compiler,  false,  assertOnChange,  this.checkUserDeclarations)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
1139	[BUG]  [BUGGY]  super(compiler,  false,  assertOnChange)  {  [CE]  illegal  start  of  type  [FE]                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  false,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  false,  assertOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
1140	[BUG]  [BUGGY]  super(compiler,  true,  assertOnChange)  {  [CE]  illegal  start  of  type  [FE]                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  true,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  true,  assertOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
1141	[BUG]  [BUGGY]  AssertionError(compiler,  true,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  true,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  true,  assertOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
1142	[BUG]  [BUGGY]  normalize(compiler,  true,  assertOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  normalize(compiler,  true,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	normalize(compiler,  true,  assertOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
1143	[BUG]  [BUGGY]  Normalize(compiler,  null,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  null,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  null,  assertOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1144	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkUserDeclarations.isEmpty())  {  [CE]  <identifier>  expected  [FE]                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkUserDeclarations.isEmpty())  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  checkUserDeclarations.isEmpty())  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1145	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  this.checkUsersOverVars)  {  [CE]  <identifier>  expected  [FE]                                                                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  this.checkUsersOverVars)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  this.checkUsersOverVars)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1146	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  0)  {  [CE]  <identifier>  expected  [FE]                                                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  0)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  0)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1147	[BUG]  [BUGGY]  Normalize(compiler,  false,!assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,!assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,!assertOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1148	[BUG]  [BUGGY]  Normalize(compiler,  true,  failOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  true,  failOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  true,  failOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1149	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkVerticalDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  checkVerticalDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  checkVerticalDeclarations)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1150	[BUG]  [BUGGY]  Normalize(compiler,  false,  checkUserDeclarations,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  checkUserDeclarations,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  checkUserDeclarations,  assertOnChange)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1151	[BUG]  [BUGGY]  Normalize(compiler,  false,  assertOnChange,  this.hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  false,  assertOnChange,  this.hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  false,  assertOnChange,  this.hasOkDuplicateDeclarations)  {	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1152	[BUG]  [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler  =  compiler.getParameterMap();  [CE]  <identifier>  expected  [FE]                                                                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler  =  compiler.getParameterMap();  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Set  <  AbstractCompiler>  constantMap  =  Sets.newHashSet();  compiler  =  compiler.getParameterMap();	  Normalize(compiler,    false,    assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
1153	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations,  verifyOnChange)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
1154	[BUG]  [BUGGY]  Normalize(compiler,  checkUserDeclarations,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  checkUserDeclarations,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  checkUserDeclarations,  verifyOnChange)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
1155	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  verifyOnChange);  [CE]  illegal  start  of  type  [FE]                                    RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  verifyOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  verifyOnChange);	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1156	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  verifyOnChange)  {  [CE]  illegal  start  of  type  [FE]                                      RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler,  assertOnChange,  verifyOnChange)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1157	[BUG]  [BUGGY]  Normalize(compiler,  this.assertOnChange,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                        RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.assertOnChange,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.assertOnChange,  verifyOnChange)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
1158	[BUG]  [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                          RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  compiler,  assertOnChange,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  compiler,  assertOnChange,  verifyOnChange)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
1159	[BUG]  [BUGGY]  Normalize(compiler,  this.validateOnChange,  assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.validateOnChange,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.validateOnChange,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
1160	[BUG]  [BUGGY]  Normalize(compiler,  validateOnChange,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  validateOnChange,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  validateOnChange,  verifyOnChange)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
1161	[BUG]  [BUGGY]  Normalize(compiler,  this.validateOnChange,  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.validateOnChange,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.validateOnChange,  verifyOnChange)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
1162	[BUG]  [BUGGY]  super(compiler,  verifyOnChange,  assertOnChange)  {  [CE]  illegal  start  of  type  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  verifyOnChange,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  verifyOnChange,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1163	[BUG]  [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  verifyOnChange,  assertOnChange)  {  [CE]  illegal  start  of  type  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  this.checkUserDeclarations  =  checkUserDeclarations(compiler,  verifyOnChange,  assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	this.checkUserDeclarations  =  checkUserDeclarations(compiler,  verifyOnChange,  assertOnChange)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1164	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations),  verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.checkUserDeclarations),  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.checkUserDeclarations),  verifyOnChange)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
1165	[BUG]  [BUGGY]  AssertionError(compiler,  assertOnChange,  verifyOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                        RuntimeException    [CONTEXT]      [BUGGY]  AssertionError(compiler,  assertOnChange,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	AssertionError(compiler,  assertOnChange,  verifyOnChange)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
1166	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  verifyOnChange));  [CE]  illegal  start  of  type  [FE]                                                          RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  verifyOnChange));  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  verifyOnChange));	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1167	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  isVerifyConstants)  {  [CE]  <identifier>  expected  [FE]                                                            RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  isVerifyConstants)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  verifyOnChange,  isVerifyConstants)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
1168	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  this.hasOkDuplicateDeclarations)  {  [CE]  <identifier>  expected  [FE]                                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  verifyOnChange,  this.hasOkDuplicateDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  verifyOnChange,  this.hasOkDuplicateDeclarations)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
1169	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.validateOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.validateOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.validateOnChange)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
1170	[BUG]  [BUGGY]  Serialize(compiler,  assertOnChange,  verifyOnChange)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                                                                  RuntimeException    [CONTEXT]      [BUGGY]  Serialize(compiler,  assertOnChange,  verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Serialize(compiler,  assertOnChange,  verifyOnChange)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
1171	[BUG]  [BUGGY]  super(compiler,  assertOnChange,  verifyOnChange);  [CE]  illegal  start  of  type  [FE]                                                                    RuntimeException    [CONTEXT]      [BUGGY]  super(compiler,  assertOnChange,  verifyOnChange);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	super(compiler,  assertOnChange,  verifyOnChange);	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1172	[BUG]  [BUGGY]  Normalize(compiler,  assertOnChange,  this.verifyOnChange)  {  [CE]  <identifier>  expected  [FE]                                                                      RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  assertOnChange,  this.verifyOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  assertOnChange,  this.verifyOnChange)  {	  Normalize(compiler,    assertOnChange,    verifyOnChange)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
1173	[BUG]  [BUGGY]  Normalize(compiler,!assertOnChange,  checkUserDeclarations)  {  [CE]  <identifier>  expected  [FE]                                              RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,!assertOnChange,  checkUserDeclarations)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,!assertOnChange,  checkUserDeclarations)  {	  Normalize(compiler,!assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
1174	[BUG]  [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,!assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,  this.checkUserDeclarations,!assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,  this.checkUserDeclarations,!assertOnChange)  {	  Normalize(compiler,!assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
1175	[BUG]  [BUGGY]  Normalize(compiler,!this.assertOnChange)  {  [CE]  <identifier>  expected  [FE]                                                  RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,!this.assertOnChange)  {  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,!this.assertOnChange)  {	  Normalize(compiler,!assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
1176	[BUG]  [BUGGY]  Normalize(compiler,!assertOnChange,  checkUserDeclarations);  [CE]  <identifier>  expected  [FE]                                                    RuntimeException    [CONTEXT]      [BUGGY]  Normalize(compiler,!assertOnChange,  checkUserDeclarations);  [BUGGY]    this.compiler  =  compiler;  this.assertOnChange  =  assertOnChange;    }  [CLASS]  Normalize  PropagateConstantAnnotationsOverVars  VerifyConstants  NormalizeStatements  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler,boolean)  AbstractCompiler  compiler  boolean  assertOnChange  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  Set  hasOkDuplicateDeclaration  Map  constantMap  DiagnosticType  CATCH_BLOCK_VAR_ERROR  	projects/Closure79/src/com/google/javascript/jscomp/Normalize.java	0.1889822365046136	77	77	1	replace	Normalize(compiler,!assertOnChange,  checkUserDeclarations);	  Normalize(compiler,!assertOnChange)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
