projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertFalse)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEqualsOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNoChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externes,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,exprs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,externs)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,externals)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,root)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externs)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externals)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root.traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcomp=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,t);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).path(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externs)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,exprs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,t);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,forbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,findOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertonChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,false)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs.traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root.traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations.traverse(root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,extern);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,externs)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,externals)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,root)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,root)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs.cloneTree())).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root,false)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externals)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,t);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_VAR_ERROR)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,getOkDuplicateDeclaration())).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_NAMES_UNIQUE)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,0)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNoChanges)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,false)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(compiler);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,t);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNoChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOffset)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEmpty)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNull)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNotNull)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEquals)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseValues(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(compiler!=null){newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertFalse)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(extterns,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(extras,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs)).traverseRoots(root,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externes);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).Traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).straverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,node);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),externs.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root);compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs);compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,MAKE_LOCAL_NAMES_UNIQUE)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(verifyOnChange){newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,t);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNoChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertFalse)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs).traverseRoots(compiler,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externes);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(prototype);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(converter);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externes);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseGlobals(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),compiler).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externes)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal[]t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,interns);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEqualsOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseValues(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange,forbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBEEN_LOCAL_NAMES_UNIQUE)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,onChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),constantMap.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),constantMap.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations.traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,HashMap.class);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,MAKE_LOCAL_NAMES_VAR_ERROR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertVars)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,Root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),t.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,stateOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).straverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),.traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),t.traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations).traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations).traverse(externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkConstants).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkForbidChanges).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations).traverse(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,externals,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,externals,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,externs,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations.traverse(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations.traverse(root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations.traverse(root),forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkForbidChanges.traverse(root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkDeclarations.traverse(root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations.traverse(root)));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkNodeDeclarations.traverse(root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externs.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),externs.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs.traverseRoots(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),internals.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(null,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,true)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,false)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,false)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,false)).traverseRoots(externs,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,true)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,false)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,false)).traverseRoots(externs,externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,false)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverse(root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverse(root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkForbidChanges)).traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverse(root,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,assertOnChange)).traverse(root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertNull)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNonChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(converter,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(interns,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,checkUserDeclarations,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations,forbidChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,verifyOnChange,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatement(compiler,newNormalizeStatements(compiler,checkUserDeclarations,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),root).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,renamer,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,renamer,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,this,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,this,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,verifyUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internal,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(converter,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,parent,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).plot(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(root,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,internal)).plot(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,internal)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,internal)).plot(externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).plot(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).straverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).straverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).straverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).straverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,verifyOnChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externs)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externals)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,FORbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,FORbidChanges)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseValues(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseValues(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseValues(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseValues(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseValues(externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseValues(externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEmpty)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertEmpty)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEmpty)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEmpty)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,verifyOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,assertOnChange,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,assertOnChange,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,assertOnChange,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,externals,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange),root);compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOkDuplicateDeclaration)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkHasOkDuplicateDeclaration)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkVars)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkLocalDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(parent,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,parent,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externs)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,externs)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,internal)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externals)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,verifyOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,verifyOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,verifyOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,false)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,null,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,false,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,assertOnChange,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,false,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,renamer,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externals,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,forbidChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,forbidChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChanges)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverse(null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,newNormalizeStatements(compiler,assertOnChange)).traverse(null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(newNodeTraversal(compiler,externs,assertOnChange)).traverse(null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),root.traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root.traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs.traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),root.traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals.traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,verifyOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,root,verifyOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,validateOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),root.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),externs.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),compiler.traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,false)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root,true)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root,false)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root,true)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externals,false)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,true)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externes,false)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,false)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(compiler);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverse(compiler);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,newNormalizeStatements(compiler,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,assertOnChange,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,verifyOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,assertOnChange,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,assertOnChange,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,this.checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,CATCH_BLOCK_VAR_ERROR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,MAKE_LOCAL_NAMES_VAR_ERROR,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,CATCH_BLOCK_VAR_ERROR,MAKE_LOCAL_NAMES_VAR_ERROR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,MAKE_LOCAL_NAMES_VAR_ERROR,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,MAKE_LOCAL_NAMES_VAR_ERROR,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,MAKE_LOCAL_NAMES_VAR_ERROR,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,CATCH_BLOCK_VAR_ERROR,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseValues(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseValues(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseValues(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseValues(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseValues(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseValues(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traceRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,null,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,assertOnChange,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,true,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,parent,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,assertOnChange));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,forbidChanges));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root,assertOnChange,checkUserDeclarations));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkForbidChanges));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertFalse,checkUserDeclarations));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,node,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,hasOkDuplicateDeclaration,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,this.checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,validateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOkDuplicateDeclaration)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkVars)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkConstants)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkLocalDeclarations)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),root).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).straverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(null,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,1)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,0)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,2)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,true)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,0)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,0)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,checkUserDeclarations,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,checkUserDeclarations,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,checkUserDeclarations,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,verifyUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,newHashMap());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,HashMap.class,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,Map.class);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,hasOkDuplicateDeclaration.class);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,Lists.class);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,Sets.class);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,Locale.getDefault());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,HashMap.class,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,verifyOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,hasOkDuplicateDeclaration,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,this.checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange,externs)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,root)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,root)).traverseRoots(externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,true)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,internal)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEquals)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertEquals)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEquals)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEquals)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkOnChange){newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).traverse(root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_NAMES_UNIQUE)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,CONVERT_WHILE_TO_FOR)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_NAMES_UNIQUE)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_NAMES_UNIQUE)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_NAMES_UNIQUE)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,PROPERTY)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,INVALID_NAMES_UNIQUE)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,assertOnChange)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root,assertOnChange)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,newNormalizeStatements(compiler,assertOnChange,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatement(compiler,newNormalizeStatements(compiler,assertOnChange,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,this,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(converter);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverse(converter);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,newNormalizeStatements(compiler,assertOnChange)).traverse(converter);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(consumer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(parent,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs).traverseRoots(compiler,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs).traverseRoots(compiler,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs).traverseRoots(converter,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs).traverseRoots(null,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs).traverseRoots(interns,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs).traverseRoots(compiler,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations())).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,getOkDuplicateDeclaration())).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclaration())).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,getOkDuplicateDeclaration())).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,getOkDuplicateDeclaration())).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,getOkDuplicateDeclaration())).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,getOkDuplicateDeclaration())).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,getOkDuplicateDeclaration())).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,root)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,root)).traverseRoots(converter,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,root)).traverseRoots(constantMap,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,root)).traverseRoots(parent,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,root)).traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges),externals.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkForbidChanges),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,assertOnChange),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),root.traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),externals.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(null,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(converter,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalwarning=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalvisitor=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalerror=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).path(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).path(null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).path(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).path(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).path(converter);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).path(node);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).path(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,false,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,null,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,renamer,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,false,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,true,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,exprs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,exprs,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,exprs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,exprs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,expr);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,exprs,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,renamer,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,renamer,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,renamer,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,null,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,Root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,root)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,externals.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(converter,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatement(compiler,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,interns,newNormalizeStatements(compiler,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).Traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).Traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).Traverse(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).Traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).Traverse(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).Traverse(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).Traverse(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).Traverse(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(externs,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,root)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,externs)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root),assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root),assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,externals,root)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,root)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externals).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),parent).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),internal).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatement(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatement(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkForbidChanges)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations.traverse(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations.traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations.traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges),checkUserDeclarations.traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkConstants.traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)),externs.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),externs.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOffset)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOffset)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOffset)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOffset)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOffset)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,true)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverseRoots(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,true)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverseRoots(externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverseRoots(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externals,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root,assertOnChange)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root,assertOnChange)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root,checkUserDeclarations)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externals,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root,verifyOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,parent.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checkUserDeclarations.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals,root.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,compiler.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalvisitor=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(extras,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,null,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE),assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverse(root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoot(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root+1);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,externes)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externes)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externes)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externes)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,node);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs.cloneTree())).traverseRoots(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs.cloneTree())).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs.cloneTree())).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs.cloneTree())).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs.cloneTree())).traverseRoots(converter,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externals.cloneTree())).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs.clone())).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs.cloneTree())).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,exprs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,expr);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,exprs,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,exprs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,exprs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,exprs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120AssertionError(compiler,verifyOnChange){newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120AssertionError(compiler,verifyOnChange){newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externs);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,parent,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,roots,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,root,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root)).plot(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(root,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(externs,root.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root,assertOnChange)).plot(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).plot(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,renamer,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,renamer,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,roots);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodeRoots(compiler,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseDeclarations(compiler,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseDeclaration(compiler,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root.traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs.traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),root.traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,this,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,this,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,exprs)).traverseRoots(root,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(null,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root).plot(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(null,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root)).plot(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).plot(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).plot(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,false,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,false,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,null,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,renamer,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,verifyOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEqualsOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertEqualsOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externs,checkUserDeclarations,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,checkUserDeclarations,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(verifyOnChange){newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,checkUserDeclarations);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,checkUserDeclarations)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,verifyOnChange,forbidChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,checkUserDeclarations)).traverseRoots(externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,checkOkDuplicateDeclaration)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,parent,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,parent,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverse(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertVars)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertVars)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertVars)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertVars)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertVars)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertValues)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(converter,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,verifyOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,hasOkDuplicateDeclaration,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,hasOkDuplicateDeclaration,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,this.checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,root.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,exprs)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(parent,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(prototype);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverse(prototype);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,newNormalizeStatements(compiler,assertOnChange)).traverse(prototype);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(proxy);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,internals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externals,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).plot(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).plot(externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcomp=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,parent,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externs.traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),internals.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externals.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externs,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externs,checkUserDeclarations,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externals,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(verifyOnChange){newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,hasOkDuplicateDeclaration);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,null,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,false,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,assertOnChange,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,true,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,false,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,assertOnChange,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,renamer,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,null,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,internal,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,newNormalizeStatements(),assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,assertOnChange,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,root,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,newNormalizeStatements(),assertOnChange));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,internal,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,false,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,false,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(converter,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(externs,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(externs,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(externs,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(externs,root,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(externs,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root),externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)),externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)),externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)),root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)),externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(extterns,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(converter,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,source);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,renamer,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,renamer,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,stateOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,stateOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,stateOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,stateOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),constantMap.traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),externs.traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),internals.traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root.traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,internal)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,internal)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(converter,externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(internal,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,root,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,root,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externals)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root)).plot(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,externals,assertOnChange)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(converter,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertNotNull)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNotNull)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNotNull)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNotNull)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,extern);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,external);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,extern);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverseRoots(externs,extern);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,extern);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,extern);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root);compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs);compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs);compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),root.traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)),externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange,checkUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,checkUserDeclarations,forbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatement(compiler,assertOnChange,checkUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange,checkUserDeclarations)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,testUserDeclarations,forbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatement(compiler,newNormalizeStatement(compiler,assertOnChange,checkUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange,verifyOnChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,verifyOnChange,forbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,verifyOnChange,forbidChanges)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root).trace(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,internal,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,interns,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,externals)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange,externals)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,internals)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,externs)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,externals)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,externals)).traverseRoots(externs,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,externs,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,externals,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,externals,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,externals,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),assertOnChange,externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange,externs.traverse(root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange,externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),t.traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),t.traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root,t.traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),t.traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,findOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,findOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,findOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,findOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(findOnChange){newNodeTraversal(compiler,newNormalizeStatements(compiler,findOnChange)).traverse(root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,findOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externs));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externals));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,false));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root);compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,internal));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traceRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120nodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),constantMap.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),constantMap.traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).trace(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).path(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,Externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs)).traverseRoots(externs,root.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externals.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,root.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,parent.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,checkUserDeclarations.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120nodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externes,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120finalNodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NewNodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,externs)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,externals)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,interns);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(converter,externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,internal)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,internals)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,true)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),compiler.traverseRoots(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),compiler.traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),compiler.traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),compiler.traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,onChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclaration)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externals)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkOkDuplicateDeclaration)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertFalse)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertFalse)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertTrue)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNull)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externs)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root,assertOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,assertOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externs,checkUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externals)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,verifyOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,validateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,verifyUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checkUserDeclarations,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals.traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),externals.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,forbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,testUserDeclarations,forbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,forbidChanges)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,forbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,forbidChanges)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>comp=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcomp=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcomp=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcomponent=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcomposite=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,externs,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,externals,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,renamer,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externes,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,forbidChanges)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,testUserDeclarations,forbidChanges)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,forbidChanges)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).straverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).trace();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120finalNodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externals)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,internals)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,externals)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externals)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externals,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,this,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externes,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,this,constantMap);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,this,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(last,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,hasOkDuplicateDeclaration,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,hasOkDuplicateDeclaration,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,validateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externals).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),internal).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externals).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal[]t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal[]t=newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal[]t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs);compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal[]t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal[]t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal[]t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root);compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal[]t=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal[]t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).trace(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).trace(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root.plot(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),compiler.plot(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),compiler).plot(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBEEN_LOCAL_NAMES_UNIQUE)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBEEN_LOCAL_NAMES_UNIQUE)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,MAKE_LOCAL_NAMES_UNIQUE)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,MAKE_LOCAL_NAMES_UNIQUE)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),.traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),.traverseRoots(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).straverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).straverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,checkUserDeclarations,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,checkUserDeclarations,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,checkUserDeclarations,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,verifyUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations),root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(root,externes);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).plot(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,this,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).straverse(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).straverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).straverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,externs.cloneTree())).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,parent)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,externes)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(parent,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverse(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverse(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverse(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,parent,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,node);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(converter,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals);compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),internal);compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(root,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).plot(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChange)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,root,newNormalizeStatements(compiler,assertOnChange)).plot(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root)).plot(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root)).plot(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,root,newNormalizeStatements(compiler,assertOnChange)).plot(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root,assertOnChange)).plot(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,externals,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(externs,root,compiler);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,externals,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externs,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externs,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatement(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,verifyUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,MATCH_BLOCK_VAR_ERROR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,parent,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checkUserDeclarations,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,forbidChanges,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,forbidChanges,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChange)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,newNormalizeStatements(compiler,assertOnChange,root)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,root)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,internal)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNoChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertNoChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNoChange)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNotChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkForbidChanges.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkConstants.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(verifyOnChange){newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverse(externs);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,this,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,this,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(root,externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,root,externals,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,root,externals,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,true)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,true)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,true)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).translateRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange),externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root),externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,externs)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root,checkUserDeclarations)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,checkUserDeclarations,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,verifyOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,assertOnChange,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,assertOnChange,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertFalse)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertFalse)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertTrue)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNull)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertUnique)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertAll)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)),root.traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_VAR_ERROR)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,getOkDuplicateDeclaration())).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_DUPLICATE)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),constantMap.traverseRoots(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),constantMap.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),constantMap.traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),constantMap.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),constantMap.traverseRoots(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),constantMap.traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,parent.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internal.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,parent,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externals,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externes,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traverseRoots(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traverseRoots(externs,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,null,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,constantMap);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,externs,null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,t,null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,this,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,this,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,externs,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,root)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange),externals).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(converter,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(null,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(constantMap,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,checkUserDeclaration,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,checkUserDeclaration,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,verifyUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,checkUserDeclaration,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,haveOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,failOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseGlobals(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseGlobals(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseGlobals(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseGlobals(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseGlobals(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseGlobals(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseGlobals(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseGlobals(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseGlobals(externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,0);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(default);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(last);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(return);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOkDuplicateDeclaration)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkConstants)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkVars)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_VAR_ERROR)).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORbidChanges)).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,getOkDuplicateDeclaration())).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChange)).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBIND_LOCAL_NAMES_UNIQUE)).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,false)).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkForbidChanges)).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externals,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstant(compiler,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),t.traverseRoots(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),t.traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),t.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),t.traverseRoots(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),t.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,MAKE_LOCAL_NAMES_UNKNOWN);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverse(parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,newNormalizeStatements(compiler,assertOnChange)).traverse(parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,true,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,false,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,assertOnChange,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,renamer,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,null,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(),assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(),hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(),assertOnChange));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(),externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements()));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).trace(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,internal)).trace(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(root,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,internal)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,forbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,forbidChanges)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120finalNodeTraversal.traverse(compiler,newNormalizeStatements(compiler,forbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120nodeTraversal(compiler,newNormalizeStatements(compiler,forbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),compiler).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,assertOnChange,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,null,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,parent,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,renamer,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,false,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,true,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root)).plot(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(root,externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root).plot(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,parent)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,extern);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externes);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,checkUserDeclarations,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,haveOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externals,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externes,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,isOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,hasOkDuplicateDeclaration,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNoChanges)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertNoChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,externs,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),root).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),externs).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externs).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root,assertOnChange),externs).plot(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs).plot(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs).plot(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,CATCH_BLOCK_VAR_ERROR)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_VAR_ERROR)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_VAR_ERROR)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_VAR_ERROR)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,checkUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,verifyOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,assertOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,verifyOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkForbidChanges)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,assertOnChange,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(null,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(converter,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(root,externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,parent,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,parent,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,externals,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,externs,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,externals,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,externals)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,externals)).traverseRoots(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals.traverseRoots(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),externals.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,parent,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(converter,externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(converter,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,assertOnChange)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,assertOnChange)).plot(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations,forbidChanges)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,false));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertFalse));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,null,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,parent,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,assertOnChange,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,false,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,renamer,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,t);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,t);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,t);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120Traversal.traverse(compiler,externs,t);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatement());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkForbidChanges)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,checkUserDeclarations)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,true)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,false)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,false)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,false)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,false)).traverse(root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,MAKE_LOCAL_NAMES_UNIQUE)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,MAKE_LOCAL_NAMES_UNIQUE)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,MAKE_LOCAL_NAMES_UNIQUE)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,MAKE_LOCAL_NAMES_UNIQUE)).traverse(null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkForbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkOkDuplicateDeclaration)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoot(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(interns,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).traceRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).transverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,MAKE_WHILE_TO_FOR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).trace(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).traceRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,externals)).traceRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,CATCH_BLOCK_VAR_ERROR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,makeDeclaredNamesUnique);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,MAKE_LOCAL_NAMES_UNKNOWN);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root,assertOnChange)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externes);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),externals.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals.traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root,checkUserDeclarations));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNotNull,checkUserDeclarations));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEquals)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertEquals)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,newDuplicateDeclarationHandler());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,newNormalizeStatement());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,testUserDeclarations,forbidChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,CheckUserDeclaration)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newDuplicateDeclarationHandler());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newDuplicateDeclaration());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newDuplicateDeclarationCallback());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodeDeclarations(compiler,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,MAKE_LONG_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,MAKE_DOUBLE_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,MAKE_WHILE_TO_FOR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),externs.traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBEEN_LOCAL_NAMES_UNIQUE)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,root)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,checkUserDeclarations,forbidChanges)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,checkUserDeclarations,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,verifyOnChange,checkUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertNoChange,checkUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root.clone());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs.clone());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root,assertOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(externs!=null){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals.traverse(root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals.traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){if(compiler!=null){newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(compiler!=null){compiler=newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){if(compiler!=null){compiler=newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(compiler!=null){compiler=newNormalizeStatement(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){if(compiler!=null){newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),root.traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),externs.traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatement(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).transverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(extras,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,getOkDuplicateDeclaration());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,getUserDeclarations());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),checkUserDeclarations.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externes,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,true,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,true,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,external);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,internals,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,externals,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,findOnChange)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,findOnChange)).trace(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,newDuplicateDeclarationHandler());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,getOkDuplicateDeclaration());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,checkUserDeclarations),hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclaration));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,validateUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root,checkUserDeclarations)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externes,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,newDuplicateDeclaration());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcomp=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root);compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcomp=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).plot(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)),root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertNoChange),externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,false)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,false)).traverseRoots(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,false)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externals)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,assertOnChange)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externes)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,source);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),t.traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNoChange)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNoChange)).traverseRoots(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120finalNodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).Traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).Traverse(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,checkUserDeclarations)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externs)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,assertOnChange)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,1)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,0)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,1)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,1)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,verifyDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),roots);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)),externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,renamer,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverse(null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,newDuplicateDeclarationHandler());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,DuplicateDeclarationHandler.class);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,Collections.EMPTY_MAP);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)),assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseValues(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externes,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externals,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).transverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,false)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,true)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,true)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,false)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externals,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externes,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,renamer,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverse(null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEmpty)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertEmpty)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externals,root)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externes,root)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,root)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,root)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs,root)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,node);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatement(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertNotNull)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNotNull)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration())).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,getOkDuplicateDeclaration())).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,getOkDuplicateDeclaration())).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,getOkDuplicateDeclaration())).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,getCheckUserDeclaration())).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,true)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,false)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).plot(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(null,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(converter,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertVars)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertVars)).trace(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,factory);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),t.traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),t.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs)).traverseRoots(null,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externes)).traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externes)).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,renamer,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,renamer,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,renamer,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,renamer,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(converter,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).straverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externes,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,root,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseDeclarations(compiler,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(compiler!=null){NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,makeDeclaredNamesUnique);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),.traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations.traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),checkUserDeclarations.traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkOkDuplicateDeclaration)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root,false)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseGlobals(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseInternals(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseGlobals(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externals,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externes,root,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).Traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traceValues(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).straverseValues(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs.cloneTree())).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs.cloneTree())).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs.cloneTree())).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(externs,internal));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,checkUserDeclaration)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange,verifyOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).path(outterns);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,internals.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,interns.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traceRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(null,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,source);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclaration)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,externes);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).straverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(interns,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).plot(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).plot(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120finalNodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),forbidChanges).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(newNormalizeStatements(compiler,assertOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,name);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,true)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,checkUserDeclarations,false)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root,false)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,externals)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,internals)).plot(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNotChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(),checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newnormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,MAKE_LOCAL_NAMES_VAR_ERROR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traceRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).transverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,MAKE_LOCAL_NAMES_UNIQUE)).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,nodes);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,renamer,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,newDuplicateDeclarationHandler());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),root);compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,hasOkDuplicateDeclaration,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),externs).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs).plot(root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root),externs).plot(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traceRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseNodes(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).plot(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).plot(null,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,getOkDuplicateDeclaration());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseValues(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,verifyUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOffset)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(root)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatement(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,exprs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs.cloneTree(),root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externes);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),externs);compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externes,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatement(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,verifyUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,verifyUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,this.checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root).plot(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).plot(externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externs,root,verifyOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal[]t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNoChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal[]t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertVars));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),renamer).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externals).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externes,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_VAR_ERROR)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,CATCH_BLOCK_VAR_ERROR)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externes,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externals,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,root.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations.traverse(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations.traverse(externs));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations.traverse(root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations.traverse(root),hasOkDuplicateDeclaration));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations.traverse(root),hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),constantMap.traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).straverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).transverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,externes);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkChanges)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).straverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkOkDuplicateDeclaration)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traceRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_NAMES_UNIQUE)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNoChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).transverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,newNormalizeDeclarations());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,newNormalizeStatements()));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,newNormalizeTicklingCallback());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,newnormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plotRoot(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plotForbidChanges(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plotRoot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plotTicks(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,newMakeDeclaredNamesUnique());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,makeDeclaredNamesUnique);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,stateOnChange)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,stateOnChange)).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,this,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertNull)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,checkUserDeclarations)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,root,checkUserDeclarations)).plot(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,verifyUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,this.checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,root,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,internals,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,externals)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,newMakeDeclaredNamesUnique());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,makeDeclaredNamesUnique);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(converter);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,forbidChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverse(null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,CheckUserDeclaration)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,MAKE_LOCAL_NAMES_UNIQUE)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,hasOkDuplicateDeclaration)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).traceRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,exprs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(password,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(node,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,interns);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkOkDuplicateDeclaration)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).trace(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),externs).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatement(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(newNormalizeStatements(compiler,root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs).traceRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs).traverseRoots(newNodeTraversal(compiler,externs,root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs).traverseRoots(locale,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120Preconditions.checkState(verifyOnChange){newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120Preconditions.checkArgument(verifyOnChange){newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(verifyOnChange){newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externs);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseNodes(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(compiler!=null){NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,CheckUserDeclaration)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclaration)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traceRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(externs,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,newDuplicateDeclarationHandler());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),root.traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,verifyOnChange)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,checkUserDeclarations)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(null,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,MAKE_LOCAL_NAMES_UNIQUE,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,MAKE_LONG_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEqualsOnChange)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,assertOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverse(root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations,forbidChanges)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,validateOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,exits)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,MAKE_BLOCK_VAR_ERROR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,MAKE_TO_FOR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,root,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,root,externs,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,root,externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,checkUserDeclarationsOverVars);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,renamer,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNoChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseValues(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,externals,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,enum);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120nodeTraversal=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,verifyUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,this.checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkChanges)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).straverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,externs)).traverseRoots(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,root,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externes,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externals,root,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,makeDeclaredNamesUnique);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,newMakeDeclaredNamesUnique());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).plot(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root).plot(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseNodes(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,MAKE_BLOCK_VAR_ERROR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,MAKE_LOCAL_NAMES_VAR_ERROR,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,MAKE_LOCAL_NAMES_VAR_ERROR,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOkDuplicateDeclaration)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkVars)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkLocale)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,this.checkUserDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root,enum);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root,interface);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(outterns,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseExterns(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseNodes(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traceRoot(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,externes);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externes,root,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root);compiler.traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).straverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).straverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,checkUserDeclarations)),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertFalse)),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),constantMap.traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),constantMap.traverseRoots(externs,externs));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,interns);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).straverse(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange,forbidChanges)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange,forbidChanges)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(compiler!=null){NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>compiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120nodeTraversal=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,outers)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internal,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,parent,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(null,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(internal,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newnormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,exprs,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverseValues(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newnormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),constantMap.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,CheckUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,CATCH_BLOCK_VAR_ERROR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,MAKE_BLOCK_VAR_ERROR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,internal,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,verifyOnChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(null,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root,externals.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,root,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,internal,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,exprs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,internals)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externals,exprs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externes,exprs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,renamer,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,parent,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,factory,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,false,null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,internal,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externs);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange,forbidChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,testUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plotRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNoChanges)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertNoChanges)).traverseRoots(externs,externs);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseValues(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).traverseRoots(externs,interns);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange)).traverseRoots(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatement(compiler,assertOnChange,forbidChanges)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(root,externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(root,externs,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(root,MAKE_LOCAL_NAMES_UNIQUE,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOffset)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOffset)).traverseValues(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,stateOnChange)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations.traverseRoots(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations.traverse(root),false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations.traverse(root),true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange,verifyOnChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange,checkUserDeclarations)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange,CheckUserDeclarations)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externals);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,interns);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatement(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(!ConVERT_WHILE_TO_FOR){newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,checkOnChange,forbidChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,newNormalizeDeclarationHandler());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(newExternals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checksUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange,verifyOnChange)).traverseRoots(externs,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,interns);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(converter,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,newNormalizeConstants());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),constantMap.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,forbidChanges)).traverse(root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,processDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).plot(prototype);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,MAKE_LIST_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internal,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,false,null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,this.hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(externs,externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoot(externs,interns);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externals,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,renamer,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,renamer,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,interns);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertVars)).traverseValues(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertVars)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertVars)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(null,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),.traverseRoots(externs,externs));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,internals,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),root).plot(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,newNormalizeStatements(),checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).traverse(newNormalizeStatements(compiler,assertOnChange));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(verifyOnChange){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120process(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNormalizeStatementTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>compiler=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange));compiler.traverseRoots(externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,newNormalizeStatement());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,hasOkDuplicateDeclaration);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).plot(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,externals,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverse(root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,false).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,true)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseAnnotations(compiler,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externals,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,internal,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internal,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internals.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120nodeTraversal.traverseRoots(compiler,externs,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEmpty)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange,forbidChanges)).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBEEN_LOCAL_NAMES_UNIQUE)).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).trace();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,onChange)).trace(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).trace(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(root,exprs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externes,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root.cloneTree(),hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externes,root.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,CheckUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_VAR_ERROR)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,CATCH_BLOCK_VAR_ERROR)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_VAR_ERROR),.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,false,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,externs,root,false,null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),t.traverseRoots(externs,externs));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatements(compiler,assertOnChange)).plot(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseExterns(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertUnique)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,CheckUserDeclaration)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,CheckUserDeclarations)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBITS)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORbidChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBEEN_LOCAL_NAMES)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBIGDECIMAL_NAMES)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,renamer,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,false,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,false,compiler);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,false,null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,externs.cloneTree())).traverseRoots(externs,externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root.cloneTree())).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,internals)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(Externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations),t.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,parent);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,externs,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,getCheckUserDeclarations())).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations&&getOkDuplicateDeclaration())).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations())).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations())).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,getOkDuplicateDeclaration())).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(!ConVERT_WHILE_TO_FOR){newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(compiler==null){newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(compiler!=null){newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(compiler!=null){newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,internal);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(compiler!=null){NodeTraversal[]t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal[]t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal[]t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));compiler.traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal[]t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,Root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,externs.clone());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),externals.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(root,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange),internal).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,MAKE_DUPLICATE_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange,verifyOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChange)).traverse(root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,verifyOnChange)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange,forbidChanges)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverse(null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange,forbidChanges)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations.traverse(root,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)),checkUserDeclarations.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externs,root,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,externs,root,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,externs)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(externs,interns);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,renamer,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,getOkDuplicateDeclaration());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,MAKE_LOCAL_NAMES_UNIQUE,true);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,getOkDuplicateDeclaration());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,testOnChange)).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(verifyOnChange){newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverse(externs);}else{hasOkDuplicateDeclaration=true;}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externals.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,parent,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,MAKE_LOCAL_NAMES_UNIQUE)).traverseValues(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange,forbidChanges)).traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverse(root,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,node);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,root,hasOkDuplicateDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,root,CATCH_BLOCK_VAR_ERROR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,MAKE_LOCAL_NAMES_UNIQUE)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,MAKE_LOCAL_NAMES_UNIQUE)).traverseValues(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,MAKE_LOCAL_NAMES_UNIQUE)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,renamer,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,internal,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,CheckUserDeclarations)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,hasOkDuplicateDeclaration)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseForbidChanges();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,false)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,renamer,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newMakeDeclaredNamesUnique());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,renamer,newMakeDeclaredNamesUnique());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,externs,enum);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),.traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBLOCK_NAMES_UNIQUE)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,TREE_LOCAL_NAMES_UNIQUE)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertEquals)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,externals.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange,assertOnChange)).traverseRoots(externs,externs);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,root,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,checkUserDeclarations,assertOnChange)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatement(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations)).traverseRoots(externs,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange,forbidChanges)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkOnChange,forbidChanges)).trace(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(internal,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,intern);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,checkUserDeclarations,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,exprs,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,internalRoots,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,false,newNormalizeStatements(compiler,assertOnChange)).traverse(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traverseRoots(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclaration)).traverseRoots(externs,externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,2)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,nodes);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(constantMap,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(converters,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,exits,root)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,exprs,root)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,checkUserDeclarations)).traverseRoots(externs,root,assertOnChange);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,method);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs,renamer,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,MAKE_LOCAL_NAMES_VAR_ERROR,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,MAKE_LOCAL_NAMES_VAR_ERROR,isStatement);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,verifyOnChange)).traverseRoots(externs,interns);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externs).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),externals).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,false)).traverseRoots(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalt=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,onChange)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,findOnChange)).plot(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,forbidChanges);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,checksUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newnormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,exprs)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOffChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverseRoots(externs,externals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange),root).traverseRoots(externs,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(null,externs,parent);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(externs,parent,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(parent,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).TraverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).Traverse(externs,root);}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,root)).traverseRoots(externs,interns);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),externals).traverse();
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),internal).traverse(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,externs.cloneTree());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange)).traverseRoots(externs,interns);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,newNormalizeStatements());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,externs,renamer);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,externs,MAKE_LOCAL_NAMES_VAR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,root,externs,false);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,root)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(null,externs,checkUserDeclarations);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(null,externs,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).plot(null,externs,MAKE_LOCAL_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,internals,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externals,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversalcompiler=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,MAKE_BLOCK_VAR_ERROR);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,MAKE_DUPLICATE_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,MAKE_LIST_NAMES_UNIQUE);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNode(compiler,externs,root,newNormalizeStatement());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),compiler).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange)).trace(root,externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,interns,this);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,root,this,internal);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseNodes(compiler,externs,root,true,hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseRoots(compiler,externs,root,newNormalizeStatement());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,FORBEEN_LOCAL_NAMES_UNIQUE)).traverseRoots(externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,SHOW_LOCAL_NAMES_UNIQUE)).traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal<Node>t=newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),compiler.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverseConstants(compiler,root,newNormalizeConstants());
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges)),externs.traverse(root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,forbidChanges),externs.traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root).traverseRoots(compiler,externs);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,interns).traverseRoots(compiler,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,externs).straverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(!forbidChanges){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations));}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(forbidChanges==null){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations));}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNormalizeStatements(compiler,assertOnChange,forbidChanges));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(forbidChanges==null){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations));}else{hasOkDuplicateDeclaration=true;}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(forbidChanges==null){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations));}else{hasOkDuplicateDeclaration=false;}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(!forbidChanges){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations));}else{hasOkDuplicateDeclaration=true;}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange,forbidChanges));
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,root,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(null);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),verifyUserDeclarations).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatement(compiler,assertOnChange),checkUserDeclarations).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations).traverseRoots(externs,forbidChanges);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUsers).traverseRoots(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120NodeTraversal.traverse(compiler,newNormalizeStatements(compiler,assertOnChange)).traverseRoots(externs,root,internals);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),hasOkDuplicateDeclaration);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120if(checkUserDeclarations){newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange));}
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange),checkUserDeclarations).plot(externs,root);
projects/Closure79/src/com/google/javascript/jscomp/Normalize.java120newNodeTraversal(compiler,newNormalizeStatements(compiler,assertOnChange,checkUserDeclarations),externals).plot(externs,root);
