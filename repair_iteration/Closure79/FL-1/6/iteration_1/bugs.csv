bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.add(varName);  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	varsToDeclareInExterns.add(varName);	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	13	replace
2	[BUG]  [BUGGY]  varsToDeclareInExterns.add(varName);  [FE]  RuntimeException  [FE]    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.add(varName);  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	varsToDeclareInExterns.add(varName);	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	13	replace
3	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
4	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [FE]  RuntimeException  [FE]      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
5	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
6	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  }  [FE]  RuntimeException  [FE]        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
7	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
8	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [FE]  RuntimeException  [FE]          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
9	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
10	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [FE]  RuntimeException  [FE]            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
11	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  name  [CE]  ')'  expected  [FE]              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  name  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  name	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
12	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode  [CE]  ')'  expected  [FE]                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
13	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
14	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [FE]  RuntimeException  [FE]                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
15	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.clear();  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	varsToDeclareInExterns.clear();	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
16	[BUG]  [BUGGY]  varsToDeclareInExterns.clear();  [FE]  RuntimeException  [FE]                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.clear();  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	varsToDeclareInExterns.clear();	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
17	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_SYNTHETIC_NAME,  true);  }  [CE]  cannot  find  symbol  IS_SYNTHETIC_NAME  [FE]                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_SYNTHETIC_NAME,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_SYNTHETIC_NAME,  true);  }	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  cannot  find  symbol  IS_SYNTHETIC_NAME	11	None	replace
18	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR  [CE]  ')'  expected  [FE]                        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
19	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
20	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  [FE]  RuntimeException  [FE]                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
21	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
22	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [FE]  RuntimeException  [FE]                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
23	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_NAME_REFERENCE_IN_EXTERNS_ERROR,  true);  }  [CE]  cannot  find  symbol  IS_NAME_REFERENCE_IN_EXTERNS_ERROR  [FE]                              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_NAME_REFERENCE_IN_EXTERNS_ERROR,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_NAME_REFERENCE_IN_EXTERNS_ERROR,  true);  }	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  cannot  find  symbol  IS_NAME_REFERENCE_IN_EXTERNS_ERROR	11	None	replace
24	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  [CE]  illegal  start  of  expression  [FE]                                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
25	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
26	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));  }  [FE]  RuntimeException  [FE]                                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
27	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
28	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [FE]  RuntimeException  [FE]                                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
29	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION  [CE]  ')'  expected  [FE]                                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
30	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_SYNTHETIC_NAME,  false);  }  [CE]  cannot  find  symbol  IS_SYNTHETIC_NAME  [FE]                                        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_SYNTHETIC_NAME,  false);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_SYNTHETIC_NAME,  false);  }	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  cannot  find  symbol  IS_SYNTHETIC_NAME	11	None	replace
31	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.NAME,  [CE]  illegal  start  of  expression  [FE]                                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.NAME,  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.NAME,	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_NOT_OBJECT_NAME,  true);  }  [CE]  cannot  find  symbol  IS_NOT_OBJECT_NAME  [FE]                                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_NOT_OBJECT_NAME,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_NOT_OBJECT_NAME,  true);  }	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  cannot  find  symbol  IS_NOT_OBJECT_NAME	11	None	replace
33	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_SYNTHETIC_NAME,  true);  }  [CE]  cannot  find  symbol  IS_SYNTHETIC_NAME  [FE]                                              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_SYNTHETIC_NAME,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_SYNTHETIC_NAME,  true);  }	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  cannot  find  symbol  IS_SYNTHETIC_NAME	11	None	replace
34	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_NAME_REFERENCE_IN_EXTERNS_ERROR,  true);  }  [CE]  cannot  find  symbol  IS_NAME_REFERENCE_IN_EXTERNS_ERROR  [FE]                                                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_NAME_REFERENCE_IN_EXTERNS_ERROR,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_NAME_REFERENCE_IN_EXTERNS_ERROR,  true);  }	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  cannot  find  symbol  IS_NAME_REFERENCE_IN_EXTERNS_ERROR	11	None	replace
35	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode  [CE]  ')'  expected  [FE]                                                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
36	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME  [CE]  ')'  expected  [FE]                                                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
37	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	17	replace
38	[BUG]  [BUGGY]  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));  [FE]  RuntimeException  [FE]                                                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	17	replace
39	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_NOT_IMPLEMENTED_NAME,  true);  }  [CE]  cannot  find  symbol  IS_NOT_IMPLEMENTED_NAME  [FE]                                                        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_NOT_IMPLEMENTED_NAME,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_NOT_IMPLEMENTED_NAME,  true);  }	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  cannot  find  symbol  IS_NOT_IMPLEMENTED_NAME	11	None	replace
40	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  name  [CE]  ')'  expected  [FE]                                                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  name  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  name	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
41	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_NAME_REFERENCE_IN_EXTERNS_ERROR,  false);  }  [CE]  cannot  find  symbol  IS_NAME_REFERENCE_IN_EXTERNS_ERROR  [FE]                                                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_NAME_REFERENCE_IN_EXTERNS_ERROR,  false);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_NAME_REFERENCE_IN_EXTERNS_ERROR,  false);  }	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  cannot  find  symbol  IS_NAME_REFERENCE_IN_EXTERNS_ERROR	11	None	replace
42	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                                              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.add(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.add(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	13	replace
43	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.add(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [FE]  RuntimeException  [FE]                                                              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.add(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.add(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	13	replace
44	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  name  [CE]  ')'  expected  [FE]                                                                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  name  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  name	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
45	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_DISCONSTANT_NAME,  true);  }  [CE]  cannot  find  symbol  IS_DISCONSTANT_NAME  [FE]                                                                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_DISCONSTANT_NAME,  true);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_DISCONSTANT_NAME,  true);  }	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  cannot  find  symbol  IS_DISCONSTANT_NAME	11	None	replace
46	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.NAME  [CE]  ')'  expected  [FE]                                                                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.NAME  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.NAME	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
47	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                                                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(nameNode);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(nameNode);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
48	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(nameNode);  }  [FE]  RuntimeException  [FE]                                                                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(nameNode);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(nameNode);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
49	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.  [CE]  <identifier>  expected  [FE]                                                                        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  <identifier>  expected	11	None	replace
50	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                                                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
51	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [FE]  RuntimeException  [FE]                                                                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
52	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                                                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	  	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	9	replace
53	[BUG]  [BUGGY]    [FE]  RuntimeException  [FE]                                                                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	  	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	9	replace
54	[BUG]  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  [CE]  cannot  find  symbol  [FE]    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
55	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);		compilable	  [FE]  RuntimeException  	12	5	add
56	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [FE]  RuntimeException  [FE]      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);		compilable	  [FE]  RuntimeException  	12	5	add
57	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);		compilable	  [FE]  RuntimeException  	12	5	add
58	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [FE]  RuntimeException  [FE]        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);		compilable	  [FE]  RuntimeException  	12	5	add
59	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));		compilable	  [FE]  RuntimeException  	12	17	add
60	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [FE]  RuntimeException  [FE]          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));		compilable	  [FE]  RuntimeException  	12	17	add
61	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));		compilable	  [FE]  RuntimeException  	12	17	add
62	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [FE]  RuntimeException  [FE]            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));		compilable	  [FE]  RuntimeException  	12	17	add
63	[BUG]  [BUGGY]    NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  cannot  find  symbol  NameNode  [FE]              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);		non-compiled	[CE]  cannot  find  symbol  NameNode	12	None	add
64	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  [CE]  cannot  find  symbol  [FE]                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
65	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  name  [CE]  ')'  expected  [FE]                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  name  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  name		non-compiled	[CE]  ')'  expected	12	None	add
66	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  parent  =  nameNode.getParent();  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  parent));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	    Node  parent  =  nameNode.getParent();  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  parent));		compilable	  [FE]  RuntimeException  	12	17	add
67	[BUG]  [BUGGY]    Node  parent  =  nameNode.getParent();  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  parent));  [FE]  RuntimeException  [FE]                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  parent  =  nameNode.getParent();  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  parent));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  parent  =  nameNode.getParent();  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  parent));		compilable	  [FE]  RuntimeException  	12	17	add
68	[BUG]  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));  [CE]  cannot  find  symbol  [FE]                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
69	[BUG]  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.FUNCTION,  nameNode));  [CE]  cannot  find  symbol  [FE]                        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.FUNCTION,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    varsToDeclareInExterns.addChildToBack(new  Node(Token.FUNCTION,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
70	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  name  [CE]  ')'  expected  [FE]                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  name  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  name		non-compiled	[CE]  ')'  expected	12	None	add
71	[BUG]  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  compiler.reportCodeChange();  [CE]  cannot  find  symbol  [FE]                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  compiler.reportCodeChange();  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  compiler.reportCodeChange();		non-compiled	[CE]  cannot  find  symbol	12	None	add
72	[BUG]  [BUGGY]    NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  cannot  find  symbol  NameNode  [FE]                              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);		non-compiled	[CE]  cannot  find  symbol  NameNode	12	None	add
73	[BUG]  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));  [CE]  cannot  find  symbol  [FE]                                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
74	[BUG]  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.FUNCTION,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));  [CE]  cannot  find  symbol  [FE]                                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.FUNCTION,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    varsToDeclareInExterns.addChildToBack(new  Node(Token.FUNCTION,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
75	[BUG]  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.NAME,  nameNode));  [CE]  cannot  find  symbol  [FE]                                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.NAME,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    varsToDeclareInExterns.addChildToBack(new  Node(Token.NAME,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
76	[BUG]  [BUGGY]    node.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  cannot  find  symbol  node  [FE]                                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    node.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    node.putBooleanProp(Node.IS_CONSTANT_NAME,  true);		non-compiled	[CE]  cannot  find  symbol  node	12	None	add
77	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  root,  varsToDeclareInExterns);  [CE]  cannot  find  symbol  root  [FE]                                        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    NodeTraversal.traverse(compiler,  root,  varsToDeclareInExterns);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    NodeTraversal.traverse(compiler,  root,  varsToDeclareInExterns);		non-compiled	[CE]  cannot  find  symbol  root	12	None	add
78	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode));		compilable	  [FE]  RuntimeException  	12	17	add
79	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode));  [FE]  RuntimeException  [FE]                                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode));		compilable	  [FE]  RuntimeException  	12	17	add
80	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  parent  =  nameNode.getParent();  getSynthesizedExternsRoot().addChildToBack(parent);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	    Node  parent  =  nameNode.getParent();  getSynthesizedExternsRoot().addChildToBack(parent);		compilable	  [FE]  RuntimeException  	12	17	add
81	[BUG]  [BUGGY]    Node  parent  =  nameNode.getParent();  getSynthesizedExternsRoot().addChildToBack(parent);  [FE]  RuntimeException  [FE]                                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  parent  =  nameNode.getParent();  getSynthesizedExternsRoot().addChildToBack(parent);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  parent  =  nameNode.getParent();  getSynthesizedExternsRoot().addChildToBack(parent);		compilable	  [FE]  RuntimeException  	12	17	add
82	[BUG]  [BUGGY]    getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));  varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  [CE]  cannot  find  symbol  [FE]                                              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));  varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));  varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
83	[BUG]  [BUGGY]    Node  parent  =  nameNode.getParent();  getSynthesizedExternsRoot().addChildToBack(parent,  new  Node(Token.VAR,  parent));  [CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  parent  =  nameNode.getParent();  getSynthesizedExternsRoot().addChildToBack(parent,  new  Node(Token.VAR,  parent));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  parent  =  nameNode.getParent();  getSynthesizedExternsRoot().addChildToBack(parent,  new  Node(Token.VAR,  parent));		non-compiled	[CE]  method  addChildToBack  in  class  Node  cannot  be  applied  to  given  types;	12	None	add
84	[BUG]  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.BLOCK,  nameNode));  [CE]  cannot  find  symbol  [FE]                                                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.BLOCK,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.BLOCK,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
85	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  name  [CE]  ')'  expected  [FE]                                                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  name  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  name		non-compiled	[CE]  ')'  expected	12	None	add
86	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode  [CE]  ')'  expected  [FE]                                                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode		non-compiled	[CE]  ')'  expected	12	None	add
87	[BUG]  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.NAME,  nameNode));  [CE]  cannot  find  symbol  [FE]                                                        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.NAME,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.NAME,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
88	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FOR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FOR,  nameNode));		compilable	  [FE]  RuntimeException  	12	17	add
89	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FOR,  nameNode));  [FE]  RuntimeException  [FE]                                                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FOR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FOR,  nameNode));		compilable	  [FE]  RuntimeException  	12	17	add
90	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode));		compilable	  [FE]  RuntimeException  	12	17	add
91	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode));  [FE]  RuntimeException  [FE]                                                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode));		compilable	  [FE]  RuntimeException  	12	17	add
92	[BUG]  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.CALL,  nameNode));  [CE]  cannot  find  symbol  [FE]                                                              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.CALL,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.CALL,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
93	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode  [CE]  ')'  expected  [FE]                                                                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode		non-compiled	[CE]  ')'  expected	12	None	add
94	[BUG]  [BUGGY]    varsToDeclareInExterns.add(new  Node(Token.VAR,  nameNode));  [CE]  no  suitable  method  found  for  add(Node)  [FE]                                                                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    varsToDeclareInExterns.add(new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    varsToDeclareInExterns.add(new  Node(Token.VAR,  nameNode));		non-compiled	[CE]  no  suitable  method  found  for  add(Node)	12	None	add
95	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                                                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	    getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));		compilable	  [FE]  RuntimeException  	12	17	add
96	[BUG]  [BUGGY]    getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));  [FE]  RuntimeException  [FE]                                                                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));		compilable	  [FE]  RuntimeException  	12	17	add
97	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  }  [CE]  cannot  find  symbol  [FE]    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
98	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.NAME,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.NAME,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
99	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.NAME,  nameNode));  }  [FE]  RuntimeException  [FE]      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.NAME,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.NAME,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
100	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  return;  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  return;  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
101	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  return;  }  [FE]  RuntimeException  [FE]        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  return;  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  return;  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
102	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.STRING,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.STRING,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
103	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.STRING,  nameNode));  }  [FE]  RuntimeException  [FE]          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.STRING,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.STRING,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
104	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode));  }  [CE]  cannot  find  symbol  [FE]            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FUNCTION,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
105	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.BLOCK,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.BLOCK,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
106	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.BLOCK,  nameNode));  }  [FE]  RuntimeException  [FE]              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.BLOCK,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.BLOCK,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
107	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildrenToBack(  new  Node(Token.VAR,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildrenToBack(  new  Node(Token.VAR,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
108	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildrenToBack(  new  Node(Token.VAR,  nameNode));  }  [FE]  RuntimeException  [FE]                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildrenToBack(  new  Node(Token.VAR,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildrenToBack(  new  Node(Token.VAR,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
109	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.NAME,  nameNode  [CE]  ')'  expected  [FE]                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.NAME,  nameNode  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.NAME,  nameNode	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
110	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EXPR_RESULT,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EXPR_RESULT,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
111	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EXPR_RESULT,  nameNode));  }  [FE]  RuntimeException  [FE]                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EXPR_RESULT,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EXPR_RESULT,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
112	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.OBJECTLIT,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.OBJECTLIT,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
113	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.OBJECTLIT,  nameNode));  }  [FE]  RuntimeException  [FE]                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.OBJECTLIT,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.OBJECTLIT,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
114	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.NAME,  nameNode));  }  [CE]  cannot  find  symbol  [FE]                        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.NAME,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.NAME,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
115	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EMPTY,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EMPTY,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
116	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EMPTY,  nameNode));  }  [FE]  RuntimeException  [FE]                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EMPTY,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EMPTY,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
117	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.NAME,  name  [CE]  ')'  expected  [FE]                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.NAME,  name  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.NAME,  name	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
118	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR  [CE]  ')'  expected  [FE]                              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
119	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  return;  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  return;  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
120	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  return;  }  [FE]  RuntimeException  [FE]                                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  return;  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  return;  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
121	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FOR,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FOR,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
122	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FOR,  nameNode));  }  [FE]  RuntimeException  [FE]                                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FOR,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FOR,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
123	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [CE]  illegal  start  of  expression  [FE]                                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
124	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VOID,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VOID,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
125	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VOID,  nameNode));  }  [FE]  RuntimeException  [FE]                                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VOID,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VOID,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
126	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR  [CE]  ')'  expected  [FE]                                        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
127	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.CALL,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.CALL,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
128	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.CALL,  nameNode));  }  [FE]  RuntimeException  [FE]                                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.CALL,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.CALL,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
129	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  return;  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  return;  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
130	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  return;  }  [FE]  RuntimeException  [FE]                                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  return;  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  return;  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
131	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode  [CE]  ')'  expected  [FE]                                              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
132	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode  [CE]  ')'  expected  [FE]                                                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
133	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [CE]  illegal  start  of  expression  [FE]                                                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
134	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.PARSER,  nameNode));  }  [CE]  cannot  find  symbol  PARSER  [FE]                                                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.PARSER,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.PARSER,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  cannot  find  symbol  PARSER	11	None	replace
135	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [CE]  cannot  find  symbol  [FE]    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  compiler.getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
136	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  root,  new  SyntheticExternsCheck());  [CE]  cannot  find  symbol  root  [FE]      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    NodeTraversal.traverse(compiler,  root,  new  SyntheticExternsCheck());  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    NodeTraversal.traverse(compiler,  root,  new  SyntheticExternsCheck());		non-compiled	[CE]  cannot  find  symbol  root	12	None	add
137	[BUG]  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(nameNode);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(nameNode);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(nameNode);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);		non-compiled	[CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	add
138	[BUG]  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);		non-compiled	[CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	add
139	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR  [CE]  ')'  expected  [FE]            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR		non-compiled	[CE]  ')'  expected	12	None	add
140	[BUG]  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(nameNode);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(nameNode);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(nameNode);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);		non-compiled	[CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	add
141	[BUG]  [BUGGY]    varToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  [CE]  cannot  find  symbol  varToDeclareInExterns  [FE]                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    varToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    varToDeclareInExterns.addChildToBack(new  Node(Token.VAR,  nameNode));		non-compiled	[CE]  cannot  find  symbol  varToDeclareInExterns	12	None	add
142	[BUG]  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);		non-compiled	[CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	add
143	[BUG]  [BUGGY]    varsToDeclareInExterns.add(nameNode);  [CE]  no  suitable  method  found  for  add(Node)  [FE]                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    varsToDeclareInExterns.add(nameNode);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    varsToDeclareInExterns.add(nameNode);		non-compiled	[CE]  no  suitable  method  found  for  add(Node)	12	None	add
144	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.PARSER,  nameNode));  [CE]  cannot  find  symbol  PARSER  [FE]                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.PARSER,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.PARSER,  nameNode));		non-compiled	[CE]  cannot  find  symbol  PARSER	12	None	add
145	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.DECLARATION,  nameNode));  [CE]  cannot  find  symbol  DECLARATION  [FE]                        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.DECLARATION,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.DECLARATION,  nameNode));		non-compiled	[CE]  cannot  find  symbol  DECLARATION	12	None	add
146	[BUG]  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  [CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);		non-compiled	[CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	add
147	[BUG]  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(nameNode);  [CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(nameNode);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(nameNode);		non-compiled	[CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	add
148	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.LONG,  nameNode));  [CE]  cannot  find  symbol  LONG  [FE]                              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.LONG,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.LONG,  nameNode));		non-compiled	[CE]  cannot  find  symbol  LONG	12	None	add
149	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR  [CE]  ')'  expected  [FE]                                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  varsToDeclareInExterns.addChildToBack(new  Node(Token.VAR		non-compiled	[CE]  ')'  expected	12	None	add
150	[BUG]  [BUGGY]    varsToDeclareInExterns.addChildToFront(new  Node(Token.VAR,  nameNode));  [CE]  cannot  find  symbol  [FE]                                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    varsToDeclareInExterns.addChildToFront(new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    varsToDeclareInExterns.addChildToFront(new  Node(Token.VAR,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
151	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsInExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [CE]  cannot  find  symbol  [FE]                                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsInExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsInExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
152	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode)  [CE]  ')'  expected  [FE]                                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode)  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode)		non-compiled	[CE]  ')'  expected	12	None	add
153	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FOR,  nameNode  [CE]  ')'  expected  [FE]    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FOR,  nameNode  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.FOR,  nameNode	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
154	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.BLOCK,  nameNode  [CE]  ')'  expected  [FE]      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.BLOCK,  nameNode  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.BLOCK,  nameNode	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
155	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.ASSIGN,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.ASSIGN,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
156	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.ASSIGN,  nameNode));  }  [FE]  RuntimeException  [FE]        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.ASSIGN,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.ASSIGN,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
157	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.add(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.add(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	13	replace
158	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.add(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  }  [FE]  RuntimeException  [FE]          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.add(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.add(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	13	replace
159	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
160	[BUG]  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [FE]  RuntimeException  [FE]            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varName!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	varsToDeclareInExterns.remove(varName);  	compilable	  [FE]  RuntimeException  	11	5	replace
161	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildrenToBack(  new  Node(Token.VAR,  nameNode  [CE]  ')'  expected  [FE]              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildrenToBack(  new  Node(Token.VAR,  nameNode  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildrenToBack(  new  Node(Token.VAR,  nameNode	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
162	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_N  [CE]  ')'  expected  [FE]                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().putBooleanProp(Node.IS_CONSTANT_N	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
163	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.add(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode  [CE]  ')'  expected  [FE]                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.add(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.add(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
164	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.PAR  [CE]  ')'  expected  [FE]                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.PAR  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.PAR	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
165	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EX  [CE]  ')'  expected  [FE]                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EX  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EX	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
166	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.ASSIGN  [CE]  ')'  expected  [FE]                        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.ASSIGN  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.ASSIGN	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
167	[BUG]  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EMPTY  [CE]  ')'  expected  [FE]                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EMPTY  [BUGGY]  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	if(varsToDeclareInExterns!=  null)  {  varsToDeclareInExterns.remove(varName);  }  else  {  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.EMPTY	varsToDeclareInExterns.remove(varName);  	non-compiled	[CE]  ')'  expected	11	None	replace
168	[BUG]  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));  [CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  nameNode));		non-compiled	[CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	add
169	[BUG]  [BUGGY]    STRICT_MODULE_DEP_ERROR.addChildToFront(new  Node(Token.VAR,  nameNode));  [CE]  cannot  find  symbol  [FE]      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    STRICT_MODULE_DEP_ERROR.addChildToFront(new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    STRICT_MODULE_DEP_ERROR.addChildToFront(new  Node(Token.VAR,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
170	[BUG]  [BUGGY]    STRICT_MODULE_DEP_ERROR.addChildToBack(new  Node(Token.VAR,  nameNode));  [CE]  cannot  find  symbol  [FE]        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    STRICT_MODULE_DEP_ERROR.addChildToBack(new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    STRICT_MODULE_DEP_ERROR.addChildToBack(new  Node(Token.VAR,  nameNode));		non-compiled	[CE]  cannot  find  symbol	12	None	add
171	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  root,  new  NameRefInExternsCheck());  [CE]  cannot  find  symbol  root  [FE]          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    NodeTraversal.traverse(compiler,  root,  new  NameRefInExternsCheck());  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    NodeTraversal.traverse(compiler,  root,  new  NameRefInExternsCheck());		non-compiled	[CE]  cannot  find  symbol  root	12	None	add
172	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  root,  new  NameRefInExternsCheck(varName));  [CE]  cannot  find  symbol  root  [FE]            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    NodeTraversal.traverse(compiler,  root,  new  NameRefInExternsCheck(varName));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    NodeTraversal.traverse(compiler,  root,  new  NameRefInExternsCheck(varName));		non-compiled	[CE]  cannot  find  symbol  root	12	None	add
173	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  parent  =  nameNode.getParent();  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	    Node  parent  =  nameNode.getParent();		compilable	  [FE]  RuntimeException  	12	5	add
174	[BUG]  [BUGGY]    Node  parent  =  nameNode.getParent();  [FE]  RuntimeException  [FE]              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  parent  =  nameNode.getParent();  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  parent  =  nameNode.getParent();		compilable	  [FE]  RuntimeException  	12	5	add
175	[BUG]  [BUGGY]    STRICT_MODULE_DEP_ERROR,  compiler.getCodingConvention().isConstant(varName));  [CE]  not  a  statement  [FE]                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    STRICT_MODULE_DEP_ERROR,  compiler.getCodingConvention().isConstant(varName));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    STRICT_MODULE_DEP_ERROR,  compiler.getCodingConvention().isConstant(varName));		non-compiled	[CE]  not  a  statement	12	None	add
176	[BUG]  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.NAME,  varsToDeclareInExterns));  [CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.NAME,  varsToDeclareInExterns));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.NAME,  varsToDeclareInExterns));		non-compiled	[CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	add
177	[BUG]  [BUGGY]    STRICT_MODULE_DEP_ERROR,  compiler.getCodingConvention().isConstant(varName));  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                    RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    STRICT_MODULE_DEP_ERROR,  compiler.getCodingConvention().isConstant(varName));  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    STRICT_MODULE_DEP_ERROR,  compiler.getCodingConvention().isConstant(varName));  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);		non-compiled	[CE]  not  a  statement	12	None	add
178	[BUG]  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToBack(varsToDeclareInExterns);  [CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                      RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToBack(varsToDeclareInExterns);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToBack(varsToDeclareInExterns);		non-compiled	[CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	add
179	[BUG]  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToFront(new  Node(Token.VAR,  nameNode));  [CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                        RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToFront(new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToFront(new  Node(Token.VAR,  nameNode));		non-compiled	[CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	add
180	[BUG]  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  varsToDeclareInExterns));  [CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                          RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  varsToDeclareInExterns));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.VAR,  varsToDeclareInExterns));		non-compiled	[CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	add
181	[BUG]  [BUGGY]    STRICT_MODULE_DEP_ERROR.addChildToFront(nameNode);  [CE]  cannot  find  symbol  [FE]                            RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    STRICT_MODULE_DEP_ERROR.addChildToFront(nameNode);  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    STRICT_MODULE_DEP_ERROR.addChildToFront(nameNode);		non-compiled	[CE]  cannot  find  symbol	12	None	add
182	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildrenToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	add	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildrenToBack(  new  Node(Token.VAR,  nameNode));		compilable	  [FE]  RuntimeException  	12	17	add
183	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildrenToBack(  new  Node(Token.VAR,  nameNode));  [FE]  RuntimeException  [FE]                              RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildrenToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildrenToBack(  new  Node(Token.VAR,  nameNode));		compilable	  [FE]  RuntimeException  	12	17	add
184	[BUG]  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));  [CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                                RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    Node  varsToDeclareInExterns  =  compiler.getNodeForCodeInsertion(varName);  getSynthesizedExternsRoot().addChildToBack(new  Node(Token.FUNCTION,  nameNode));		non-compiled	[CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	add
185	[BUG]  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildAfter(new  Node(Token.VAR,  nameNode));  [CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                  RuntimeException  [CONTEXT]      if  (compiler.getCodingConvention().isConstant(varName))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  getSynthesizedExternsRoot().addChildToBack(  new  Node(Token.VAR,  nameNode));  [BUGGY]    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildAfter(new  Node(Token.VAR,  nameNode));  [BUGGY]  varsToDeclareInExterns.remove(varName);  }  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  createSynthesizedExternVar  [RETURN_TYPE]  void  String  varName  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Node  externs  n  nameNode  parent  root  synthesizedExternsRoot  String  varName  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.4472135954999579	220	220	5	replace	    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  getSynthesizedExternsRoot().addChildAfter(new  Node(Token.VAR,  nameNode));		non-compiled	[CE]  method  addChildAfter  in  class  Node  cannot  be  applied  to  given  types;	12	None	add
