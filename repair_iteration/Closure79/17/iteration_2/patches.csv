bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  varModule,  varName);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,JSModule,String)  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  varModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  varModule,  varName);	  NodeTraversal.traverse(compiler,    n,    currModule,    varName);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,JSModule,String)	41	None	replace
2	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule,  varModule,  varName);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule,JSModule,String)  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule,  varModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  n,  currModule,  varModule,  varName);	  NodeTraversal.traverse(compiler,    n,    currModule,    varName);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule,JSModule,String)	41	None	replace
3	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  currModule,  varName);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,JSModule,String)  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  currModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  n,  parent,  currModule,  varName);	  NodeTraversal.traverse(compiler,    n,    currModule,    varName);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Node,JSModule,String)	41	None	replace
4	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule,  varName);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule,String)  [FE]                                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  varModule,  currModule,  varName);	  NodeTraversal.traverse(compiler,    n,    currModule,    varName);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule,String)	41	None	replace
5	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule,  varName,  varModule);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule,String,JSModule)  [FE]                                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule,  varName,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  n,  currModule,  varName,  varModule);	  NodeTraversal.traverse(compiler,    n,    currModule,    varName);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule,String,JSModule)	41	None	replace
6	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  currModule,  varName);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,JSModule,String)  [FE]                                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  varInput,  currModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  varInput,  currModule,  varName);	  NodeTraversal.traverse(compiler,    n,    currModule,    varName);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,CompilerInput,JSModule,String)	41	None	replace
7	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  n,  currModule,  varName);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,NodeTraversal,Node,JSModule,String)  [FE]                                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  t,  n,  currModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  t,  n,  currModule,  varName);	  NodeTraversal.traverse(compiler,    n,    currModule,    varName);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,NodeTraversal,Node,JSModule,String)	41	None	replace
8	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  cannot  find  symbol  moduleGraph  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);	  if(varModule!=    currModule)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	29	None	replace
9	[BUG]  [BUGGY]  if(currModule!=  currModule)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [CE]  cannot  find  symbol  moduleGraph  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  if(currModule!=  currModule)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	if(currModule!=  currModule)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }	  if(varModule!=    currModule)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	29	None	replace
10	[BUG]  [BUGGY]  if(currModule!=  null)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [CE]  cannot  find  symbol  moduleGraph  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  if(currModule!=  null)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	if(currModule!=  null)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }	  if(varModule!=    currModule)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	29	None	replace
11	[BUG]  [BUGGY]  if(varModule!=  currModule)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [CE]  cannot  find  symbol  moduleGraph  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  if(varModule!=  currModule)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	if(varModule!=  currModule)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }	  if(varModule!=    currModule)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	29	None	replace
12	[BUG]  [BUGGY]  n.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  cannot  find  symbol  [FE]                                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  n.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	n.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);	  if(varModule!=    currModule)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
13	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule);	  if(varModule!=    currModule)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	29	None	replace
14	[BUG]  [BUGGY]  JSModule  currModule  =  currInput.getModule();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currInput.getModule();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currInput.getModule();	  JSModule    currModule    =    varModule.getModule();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	20	None	replace
15	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(varModule,  varModule,  varName);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(varModule,  varModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph(varModule,  varModule,  varName);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
16	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(varModule,  varName);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(varModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph(varModule,  varName);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
17	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(compiler,  varModule,  varName);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(compiler,  varModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph(compiler,  varModule,  varName);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
18	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  varModule.getModuleGraph(currModule,  compiler,  varName);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  varModule.getModuleGraph(currModule,  compiler,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  varModule.getModuleGraph(currModule,  compiler,  varName);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
19	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(currModule,  varModule,  varName);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(currModule,  varModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph(currModule,  varModule,  varName);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
20	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule,  compiler.getModuleGraph(varModule);  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule,  compiler.getModuleGraph(varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule,  compiler.getModuleGraph(varModule);	  JSModuleGraph    compiler    =    currModule,    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  ';'  expected	42	None	replace
21	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule,  varModule.getModuleGraph();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule,  varModule.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule,  varModule.getModuleGraph();	  JSModuleGraph    compiler    =    currModule,    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  ';'  expected	42	None	replace
22	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  varModule,  compiler.getModuleGraph(currModule);  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  varModule,  compiler.getModuleGraph(currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  varModule,  compiler.getModuleGraph(currModule);	  JSModuleGraph    compiler    =    currModule,    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  ';'  expected	42	None	replace
23	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule,  varModule.getModuleGraph(currModule);  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule,  varModule.getModuleGraph(currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule,  varModule.getModuleGraph(currModule);	  JSModuleGraph    compiler    =    currModule,    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  ';'  expected	42	None	replace
24	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule,  varModule.getModuleGraph());  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule,  varModule.getModuleGraph());  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule,  varModule.getModuleGraph());	  JSModuleGraph    compiler    =    currModule,    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  ';'  expected	42	None	replace
25	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varModule);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(varModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	31	None	replace
26	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule);	  if(varModule!=    currModule)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	28	None	replace
27	[BUG]  [BUGGY]  if(currModule!=  null)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [CE]  cannot  find  symbol  moduleGraph  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  if(currModule!=  null)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	if(currModule!=  null)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }	  if(varModule!=    currModule)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	28	None	replace
28	[BUG]  [BUGGY]  if(currModule!=  currModule)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [CE]  cannot  find  symbol  moduleGraph  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  if(currModule!=  currModule)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	if(currModule!=  currModule)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }	  if(varModule!=    currModule)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	28	None	replace
29	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  cannot  find  symbol  moduleGraph  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule.getName(),  varName);	  if(varModule!=    currModule)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	28	None	replace
30	[BUG]  [BUGGY]  n.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule);  [CE]  cannot  find  symbol  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  n.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	n.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule);	  if(varModule!=    currModule)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
31	[BUG]  [BUGGY]  n.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  [CE]  cannot  find  symbol  [FE]                                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  n.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	n.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);	  if(varModule!=    currModule)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
32	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule.getModuleGraph(),  varModule;  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule.getModuleGraph(),  varModule;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModule.getModuleGraph(),  varModule;	  JSModuleGraph    currModuleGraph    =    currModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
33	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  scope.getModuleGraph();  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  scope.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModule,  scope.getModuleGraph();	  JSModuleGraph    currModuleGraph    =    currModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	8	None	replace
34	[BUG]  [BUGGY]  varModule  =  currModule!=  null?  currModule.getModule()  :  null;  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varModule  =  currModule!=  null?  currModule.getModule()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varModule  =  currModule!=  null?  currModule.getModule()  :  null;	  varModule    =    currModule.getModule();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
35	[BUG]  [BUGGY]  varModule  =  currModule  ==  null?  currModule.getModule()  :  null;  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varModule  =  currModule  ==  null?  currModule.getModule()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varModule  =  currModule  ==  null?  currModule.getModule()  :  null;	  varModule    =    currModule.getModule();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
36	[BUG]  [BUGGY]  varModule  =  currModule  >=  null?  currModule.getModule()  :  null;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varModule  =  currModule  >=  null?  currModule.getModule()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varModule  =  currModule  >=  null?  currModule.getModule()  :  null;	  varModule    =    currModule.getModule();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	17	None	replace
37	[BUG]  [BUGGY]  varModule  =  currModule  [Delete]  null?  currModule.getModule()  :  null;  [CE]  ';'  expected  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varModule  =  currModule  [Delete]  null?  currModule.getModule()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varModule  =  currModule  [Delete]  null?  currModule.getModule()  :  null;	  varModule    =    currModule.getModule();    	non-compiled	[CE]  ';'  expected	17	None	replace
38	[BUG]  [BUGGY]  varModule  =  currModule,  varModule.getModule();  [CE]  ';'  expected  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varModule  =  currModule,  varModule.getModule();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varModule  =  currModule,  varModule.getModule();	  varModule    =    currModule.getModule();    	non-compiled	[CE]  ';'  expected	17	None	replace
39	[BUG]  [BUGGY]  varModule  =  currModule  >>  null?  currModule.getModule()  :  null;  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varModule  =  currModule  >>  null?  currModule.getModule()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varModule  =  currModule  >>  null?  currModule.getModule()  :  null;	  varModule    =    currModule.getModule();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	17	None	replace
40	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  cannot  find  symbol  moduleGraph  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);	  if(varModule!=    currModule)    {    t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	27	None	replace
41	[BUG]  [BUGGY]  if(currModule!=  currModule)  {  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [CE]  cannot  find  symbol  moduleGraph  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  if(currModule!=  currModule)  {  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	if(currModule!=  currModule)  {  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }	  if(varModule!=    currModule)    {    t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	27	None	replace
42	[BUG]  [BUGGY]  if(currModule!=  null)  {  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [CE]  cannot  find  symbol  moduleGraph  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  if(currModule!=  null)  {  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	if(currModule!=  null)  {  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }	  if(varModule!=    currModule)    {    t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	27	None	replace
43	[BUG]  [BUGGY]  n.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  n.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	n.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);	  if(varModule!=    currModule)    {    t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
44	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule);	  if(varModule!=    currModule)    {    t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	27	None	replace
45	[BUG]  [BUGGY]  n.report(currModule,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varName);  [CE]  cannot  find  symbol  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  n.report(currModule,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	n.report(currModule,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varName);	  if(varModule!=    currModule)    {    t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
46	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  varModule,  currModule.getModuleGraph();  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  varModule,  currModule.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  varModule,  currModule.getModuleGraph();	  JSModuleGraph    currModuleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	36	None	replace
47	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule.getComponentGraph();  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule.getComponentGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModule,  varModule.getComponentGraph();	  JSModuleGraph    currModuleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	36	None	replace
48	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule;  [CE]  incompatible  types  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModule,  varModule;	  JSModuleGraph    currModuleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  incompatible  types	36	None	replace
49	[BUG]  [BUGGY]  JSModuleGraph  varModuleGraph  =  currModule,  var.getModuleGraph();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  varModuleGraph  =  currModule,  var.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModuleGraph  =  currModule,  var.getModuleGraph();	  JSModuleGraph    varModuleGraph    =    var.getModuleGraph();    	non-compiled	[CE]  ';'  expected	45	None	replace
50	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  var.getModuleGraph();  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  var.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  var.getModuleGraph();	  JSModuleGraph    varModuleGraph    =    var.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
51	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(compiler,  varModule);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(compiler,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph(compiler,  varModule);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule,    varModule);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
52	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(varModule);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph(varModule);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule,    varModule);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
53	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  varModule.getModuleGraph(currModule,  compiler);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  varModule.getModuleGraph(currModule,  compiler);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  varModule.getModuleGraph(currModule,  compiler);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule,    varModule);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
54	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(currModule,  varModule);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(currModule,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph(currModule,  varModule);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule,    varModule);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
55	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  moduleGraph.getModuleGraph();  [CE]  cannot  find  symbol  moduleGraph  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  moduleGraph.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  moduleGraph.getModuleGraph();	  JSModuleGraph    varModuleGraph    =    moduleGraph.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	33	None	replace
56	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  sourceGraph.getModuleGraph();  [CE]  cannot  find  symbol  sourceGraph  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  sourceGraph.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  sourceGraph.getModuleGraph();	  JSModuleGraph    varModuleGraph    =    moduleGraph.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol  sourceGraph	33	None	replace
57	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(module,  currModule,  varModule);  [CE]  cannot  find  symbol  module  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(module,  currModule,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(module,  currModule,  varModule);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(currModule,    varModule);    	non-compiled	[CE]  cannot  find  symbol  module	25	None	replace
58	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  scope);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  scope);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  scope);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(currModule,    varModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	25	None	replace
59	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  varModuleGraph.getModuleGraph();  [CE]  cannot  find  symbol  varModuleGraph  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  varModuleGraph.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  varModuleGraph.getModuleGraph();	  JSModuleGraph    currModuleGraph    =    varModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol  varModuleGraph	9	None	replace
60	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  currModule,  varName);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  currModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  currModule,  varName);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	replace
61	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  scope);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  scope);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  scope);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	replace
62	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  currModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  currModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	replace
63	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  varModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  varModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	replace
64	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  currModule,  varName,  varModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  currModule,  varName,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  currModule,  varName,  varModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	replace
65	[BUG]  [BUGGY]  JSModuleGraph  varModuleGraph  =  currModule,  varModule.getModuleGraph();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  varModuleGraph  =  currModule,  varModule.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModuleGraph  =  currModule,  varModule.getModuleGraph();	  JSModuleGraph    varModuleGraph    =    currModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	10	None	replace
66	[BUG]  [BUGGY]  t.report(n,  UNKNOWN_STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  cannot  find  symbol  UNKNOWN_STRICT_MODULE_DEP_ERROR  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  UNKNOWN_STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  UNKNOWN_STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varName);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_STRICT_MODULE_DEP_ERROR	37	None	replace
67	[BUG]  [BUGGY]  t.report(n,  STRIPT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  cannot  find  symbol  STRIPT_MODULE_DEP_ERROR  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  STRIPT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  STRIPT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varName);    	non-compiled	[CE]  cannot  find  symbol  STRIPT_MODULE_DEP_ERROR	37	None	replace
68	[BUG]  [BUGGY]  JSModule  currModule  =  currModule!=  null?  currModule.getModule()  :  null;  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currModule!=  null?  currModule.getModule()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currModule!=  null?  currModule.getModule()  :  null;	  JSModule    varModule    =    currModule.getModule();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	26	None	replace
69	[BUG]  [BUGGY]  JSModule  currModule  =  currModule!=  null?  currModule.getModule()  :  varModule;  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currModule!=  null?  currModule.getModule()  :  varModule;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currModule!=  null?  currModule.getModule()  :  varModule;	  JSModule    currModule    =    currModule.getModule();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	16	None	replace
70	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(varModule,  compiler);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(varModule,  compiler);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph(varModule,  compiler);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(varModule,    currModule);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
71	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currModule,  varModule.getParent();  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varsToDeclareInExterns  =  currModule,  varModule.getParent();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varsToDeclareInExterns  =  currModule,  varModule.getParent();	  varsToDeclareInExterns    =    currModule.getParent();    	non-compiled	[CE]  ';'  expected	38	None	replace
72	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currModule.getName();  [CE]  incompatible  types  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varsToDeclareInExterns  =  currModule.getName();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varsToDeclareInExterns  =  currModule.getName();	  varsToDeclareInExterns    =    currModule.getParent();    	non-compiled	[CE]  incompatible  types	38	None	replace
73	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currModule.getNext();  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varsToDeclareInExterns  =  currModule.getNext();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varsToDeclareInExterns  =  currModule.getNext();	  varsToDeclareInExterns    =    currModule.getParent();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
74	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currModule.getPrefix();  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varsToDeclareInExterns  =  currModule.getPrefix();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varsToDeclareInExterns  =  currModule.getPrefix();	  varsToDeclareInExterns    =    currModule.getParent();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
75	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currModule.getScope().getParent();  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varsToDeclareInExterns  =  currModule.getScope().getParent();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varsToDeclareInExterns  =  currModule.getScope().getParent();	  varsToDeclareInExterns    =    currModule.getParent();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
76	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currModule.getSimpleName();  [CE]  cannot  find  symbol  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varsToDeclareInExterns  =  currModule.getSimpleName();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varsToDeclareInExterns  =  currModule.getSimpleName();	  varsToDeclareInExterns    =    currModule.getParent();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
77	[BUG]  [BUGGY]  JSModule  currModule  =  currModule.getNext();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currModule.getNext();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currModule.getNext();	  JSModule    currModule    =    currModule.getParent();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	21	None	replace
78	[BUG]  [BUGGY]  JSModule  currModule  =  varModule.getParent();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  varModule.getParent();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  varModule.getParent();	  JSModule    currModule    =    currModule.getParent();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	21	None	replace
79	[BUG]  [BUGGY]  JSModule  currModule  =  currModule.getRawParent();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currModule.getRawParent();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currModule.getRawParent();	  JSModule    currModule    =    currModule.getParent();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	21	None	replace
80	[BUG]  [BUGGY]  JSModule  currModule  =  currModule.getName();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currModule.getName();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currModule.getName();	  JSModule    currModule    =    currModule.getParent();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	21	None	replace
81	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName());  [CE]  cannot  find  symbol  moduleGraph  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName());  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName());	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName());    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	40	None	replace
82	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName());  [CE]  cannot  find  symbol  moduleGraph  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName());  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName());	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName());    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	40	None	replace
83	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName());  [CE]  cannot  find  symbol  moduleGraph  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName());  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName());	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName());    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	40	None	replace
84	[BUG]  [BUGGY]  t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule.getName());  [CE]  cannot  find  symbol  UNDEFINED_EXTERNS_ERROR  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule.getName());  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule.getName());	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName());    	non-compiled	[CE]  cannot  find  symbol  UNDEFINED_EXTERNS_ERROR	40	None	replace
85	[BUG]  [BUGGY]  t.report(n,  STRIPT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName());  [CE]  cannot  find  symbol  STRIPT_MODULE_DEP_ERROR  [FE]                                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  STRIPT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName());  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  STRIPT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName());	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName());    	non-compiled	[CE]  cannot  find  symbol  STRIPT_MODULE_DEP_ERROR	40	None	replace
86	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  varModule.getModuleGraph(compiler);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  varModule.getModuleGraph(compiler);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  varModule.getModuleGraph(compiler);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(varModule);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
87	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  varModuleGraph.getModuleGraph(compiler);  [CE]  cannot  find  symbol  varModuleGraph  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  varModuleGraph.getModuleGraph(compiler);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  varModuleGraph.getModuleGraph(compiler);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(varModule);    	non-compiled	[CE]  cannot  find  symbol  varModuleGraph	34	None	replace
88	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  varModule.getModuleGraph();  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  varModule.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  varModule.getModuleGraph();	  JSModuleGraph    compiler    =    compiler.getModuleGraph(varModule);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
89	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  moduleGraph.getModuleGraph(varModule);  [CE]  cannot  find  symbol  moduleGraph  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  moduleGraph.getModuleGraph(varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  moduleGraph.getModuleGraph(varModule);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(varModule);    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	34	None	replace
90	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModuleGraph.getModuleGraph(varModule);  [CE]  cannot  find  symbol  currModuleGraph  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModuleGraph.getModuleGraph(varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModuleGraph.getModuleGraph(varModule);	  JSModuleGraph    compiler    =    varModuleGraph.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol  currModuleGraph	5	None	replace
91	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModuleGraph.getModuleGraph(currModule);  [CE]  cannot  find  symbol  currModuleGraph  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModuleGraph.getModuleGraph(currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModuleGraph.getModuleGraph(currModule);	  JSModuleGraph    compiler    =    varModuleGraph.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol  currModuleGraph	5	None	replace
92	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModuleGraph.getModuleGraph();  [CE]  cannot  find  symbol  currModuleGraph  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModuleGraph.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModuleGraph.getModuleGraph();	  JSModuleGraph    compiler    =    varModuleGraph.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol  currModuleGraph	5	None	replace
93	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModuleGraph.getModuleGraph(varModule);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currModuleGraph.getModuleGraph(varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModuleGraph.getModuleGraph(varModule);	  JSModuleGraph    compiler    =    varModuleGraph.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
94	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  compiler,  currModule.getModuleGraph(compiler);  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  compiler,  currModule.getModuleGraph(compiler);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  compiler,  currModule.getModuleGraph(compiler);	  JSModuleGraph    compiler    =    currModule,    compiler.getModuleGraph(compiler);    	non-compiled	[CE]  ';'  expected	43	None	replace
95	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  compiler,  currModule.getModuleGraph();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  compiler,  currModule.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  compiler,  currModule.getModuleGraph();	  JSModuleGraph    compiler    =    currModule,    compiler.getModuleGraph(compiler);    	non-compiled	[CE]  ';'  expected	43	None	replace
96	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule!=  null?  currModule  :  varModule.getModuleGraph();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule!=  null?  currModule  :  varModule.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  currModule,  varModule!=  null?  currModule  :  varModule.getModuleGraph();	  JSModuleGraph    moduleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	11	None	replace
97	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule.getModule();  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule.getModule();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  currModule,  varModule.getModule();	  JSModuleGraph    moduleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	11	None	replace
98	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule.getComponentGraph();  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule.getComponentGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  currModule,  varModule.getComponentGraph();	  JSModuleGraph    moduleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	11	None	replace
99	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule!=  null?  currModule.getModuleGraph()  :  null;  [CE]  ';'  expected  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule!=  null?  currModule.getModuleGraph()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  currModule,  varModule!=  null?  currModule.getModuleGraph()  :  null;	  JSModuleGraph    moduleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	11	None	replace
100	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  currModule,  varName);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  currModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  currModule,  varName);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	14	None	replace
101	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  scope);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  scope);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  scope);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	14	None	replace
102	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varModule,  varName);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varModule,  varName);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	14	None	replace
103	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  varModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  varModule);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	14	None	replace
104	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(t,  varModule,  varName);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(t,  varModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(t,  varModule,  varName);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	14	None	replace
105	[BUG]  [BUGGY]  JSModuleGraph  varModulegraph  =  currModule.getModuleGraph();  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  varModulegraph  =  currModule.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModulegraph  =  currModule.getModuleGraph();	  JSModuleGraph    varModuleGraph    =    varModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
106	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(),  varModule;  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(),  varModule;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph(),  varModule;	  JSModuleGraph    compiler    =    currModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
107	[BUG]  [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  varModule;  [CE]  incompatible  types  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  varModule;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varName  =  currModule!=  null?  currModule.getName()  :  varModule;	  varName    =    currModule.getName();    	non-compiled	[CE]  incompatible  types	18	None	replace
108	[BUG]  [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  NAME_REFERENCE_IN_EXTERNS_ERROR;  [CE]  incompatible  types  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  NAME_REFERENCE_IN_EXTERNS_ERROR;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varName  =  currModule!=  null?  currModule.getName()  :  NAME_REFERENCE_IN_EXTERNS_ERROR;	  varName    =    currModule.getName();    	non-compiled	[CE]  incompatible  types	18	None	replace
109	[BUG]  [BUGGY]  varName  =  currModule  ==  null?  currModule.getName()  :  varModule;  [CE]  incompatible  types  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varName  =  currModule  ==  null?  currModule.getName()  :  varModule;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varName  =  currModule  ==  null?  currModule.getName()  :  varModule;	  varName    =    currModule.getName();    	non-compiled	[CE]  incompatible  types	18	None	replace
110	[BUG]  [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  varModule.getName();  [CE]  cannot  find  symbol  moduleGraph  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  varModule.getName();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varName  =  currModule!=  null?  currModule.getName()  :  varModule.getName();	  varName    =    currModule.getName();    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	18	None	replace
111	[BUG]  [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  null;  [CE]  cannot  find  symbol  moduleGraph  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varName  =  currModule!=  null?  currModule.getName()  :  null;	  varName    =    currModule.getName();    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	18	None	replace
112	[BUG]  [BUGGY]  varName  =  currModule.getName()  + ": "+currModule.getName();  [CE]  cannot  find  symbol  moduleGraph  [FE]                                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varName  =  currModule.getName()  + ": "+currModule.getName();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varName  =  currModule.getName()  + ": "+currModule.getName();	  varName    =    currModule.getName();    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	18	None	replace
113	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  currModule,  varModule);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule)  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  currModule,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  currModule,  varModule);	  NodeTraversal.traverse(compiler,    varModule,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule)	22	None	replace
114	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule,  scope);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule,Scope)  [FE]                                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule,  scope);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  varModule,  currModule,  scope);	  NodeTraversal.traverse(compiler,    varModule,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule,Scope)	22	None	replace
115	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule,  t);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule,NodeTraversal)  [FE]                                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule,  t);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  varModule,  currModule,  t);	  NodeTraversal.traverse(compiler,    varModule,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule,NodeTraversal)	22	None	replace
116	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule,  n);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule,Node)  [FE]                                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule,  n);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  varModule,  currModule,  n);	  NodeTraversal.traverse(compiler,    varModule,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule,Node)	22	None	replace
117	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule,  parent);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule,Node)  [FE]                                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule,  parent);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  varModule,  currModule,  parent);	  NodeTraversal.traverse(compiler,    varModule,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule,Node)	22	None	replace
118	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule,  varModule);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule,JSModule)  [FE]                                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  n,  currModule,  varModule);	  NodeTraversal.traverse(compiler,    varModule,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule,JSModule)	22	None	replace
119	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  currModule,  varModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  currModule,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  currModule,  varModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(varModule,    currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	1	None	replace
120	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  varModule,  currModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  varModule,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  varModule,  currModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(varModule,    currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	1	None	replace
121	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  currModule,  scope);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  currModule,  scope);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  currModule,  scope);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    scope);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	15	None	replace
122	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  currModule,  varModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  currModule,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  currModule,  varModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    scope);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	15	None	replace
123	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  this.compiler.getModuleGraph(varModule,  currModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  this.compiler.getModuleGraph(varModule,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  this.compiler.getModuleGraph(varModule,  currModule);	  JSModuleGraph    compiler    =    this.compiler.getModuleGraph(currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	7	None	replace
124	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  this.compiler.getModuleGraph(currModule,  varModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  this.compiler.getModuleGraph(currModule,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  this.compiler.getModuleGraph(currModule,  varModule);	  JSModuleGraph    compiler    =    this.compiler.getModuleGraph(currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	7	None	replace
125	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  this.compiler.getModuleGraph(varModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  this.compiler.getModuleGraph(varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  this.compiler.getModuleGraph(varModule);	  JSModuleGraph    compiler    =    this.compiler.getModuleGraph(currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	7	None	replace
126	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(this.compiler);  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(this.compiler);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph(this.compiler);	  JSModuleGraph    compiler    =    this.compiler.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
127	[BUG]  [BUGGY]  JSModule  currModule  =  curr.getModule(),  varModule;  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  curr.getModule(),  varModule;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  curr.getModule(),  varModule;	  JSModule    currModule    =    curr.getModule();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	19	None	replace
128	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(currModule);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph(currModule);	  JSModuleGraph    compiler    =    currModule.getModuleGraph(compiler);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
129	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(module);  [CE]  cannot  find  symbol  module  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(module);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph(module);	  JSModuleGraph    compiler    =    currModule.getModuleGraph(compiler);    	non-compiled	[CE]  cannot  find  symbol  module	3	None	replace
130	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule,  varName);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule,  varName);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	39	None	replace
131	[BUG]  [BUGGY]  t.report(n,  INVALID_FUNCTION_DECL,  STRICT_MODULE_DEP_ERROR,  currModule);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  INVALID_FUNCTION_DECL,  STRICT_MODULE_DEP_ERROR,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  INVALID_FUNCTION_DECL,  STRICT_MODULE_DEP_ERROR,  currModule);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	39	None	replace
132	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule,  varName);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule,  varName);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	39	None	replace
133	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	39	None	replace
134	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	39	None	replace
135	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  varModule,  currModule);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  varModule,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  varModule,  currModule);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	39	None	replace
136	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  currModule,  varModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  currModule,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  currModule,  varModule);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(varModule,    currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	13	None	replace
137	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(t);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(t);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph(t);	  JSModuleGraph    compiler    =    t.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
138	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  t.getModuleGraph(currModule,  varModule);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  t.getModuleGraph(currModule,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  t.getModuleGraph(currModule,  varModule);	  JSModuleGraph    compiler    =    t.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
139	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  t.getModuleGraph(currModule);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  t.getModuleGraph(currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  t.getModuleGraph(currModule);	  JSModuleGraph    compiler    =    t.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
140	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  t.getModuleGraph(varModule);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  t.getModuleGraph(varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  t.getModuleGraph(varModule);	  JSModuleGraph    compiler    =    t.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
141	[BUG]  [BUGGY]  JSModuleGraph  varModuleGraph  =  currModule;  [CE]  incompatible  types  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  varModuleGraph  =  currModule;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModuleGraph  =  currModule;	  JSModuleGraph    varModuleGraph    =    currModule.getModuleGraph();    	non-compiled	[CE]  incompatible  types	10	None	replace
142	[BUG]  [BUGGY]  JSModuleGraph  varModuleGraph  =  currModule,  scope.getModuleGraph();  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  varModuleGraph  =  currModule,  scope.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModuleGraph  =  currModule,  scope.getModuleGraph();	  JSModuleGraph    varModuleGraph    =    currModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	10	None	replace
143	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currRefInExterns.getModuleGraph();  [CE]  cannot  find  symbol  currRefInExterns  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currRefInExterns.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currRefInExterns.getModuleGraph();	  JSModuleGraph    currModuleGraph    =    currInput.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol  currRefInExterns	44	None	replace
144	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currClass.getModuleGraph();  [CE]  cannot  find  symbol  currClass  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currClass.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currClass.getModuleGraph();	  JSModuleGraph    currModuleGraph    =    currInput.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol  currClass	44	None	replace
145	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currVersion.getModuleGraph();  [CE]  cannot  find  symbol  currVersion  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currVersion.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currVersion.getModuleGraph();	  JSModuleGraph    currModuleGraph    =    currInput.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol  currVersion	44	None	replace
146	[BUG]  [BUGGY]  JSModule  varModule  =  currModule!=  null?  currModule.getModule()  :  null;  [CE]  variable  varModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  varModule  =  currModule!=  null?  currModule.getModule()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  varModule  =  currModule!=  null?  currModule.getModule()  :  null;	  JSModule    varModule    =    currModule.getModule();    	non-compiled	[CE]  variable  varModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	26	None	replace
147	[BUG]  [BUGGY]  JSModule  varModule  =  currModule  ==  null?  currModule.getModule()  :  null;  [CE]  variable  varModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  varModule  =  currModule  ==  null?  currModule.getModule()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  varModule  =  currModule  ==  null?  currModule.getModule()  :  null;	  JSModule    varModule    =    currModule.getModule();    	non-compiled	[CE]  variable  varModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	26	None	replace
148	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  moduleGraph.getModuleGraph(varModule,  currModule);  [CE]  cannot  find  symbol  moduleGraph  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  moduleGraph.getModuleGraph(varModule,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  moduleGraph.getModuleGraph(varModule,  currModule);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(varModule,    currModule);    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	24	None	replace
149	[BUG]  [BUGGY]  JSModuleGraph  varModuleGraph  =  compiler.getModuleGraph();  [CE]  cannot  find  symbol  moduleGraph  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  varModuleGraph  =  compiler.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModuleGraph  =  compiler.getModuleGraph();	  JSModuleGraph    varModuleGraph    =    varModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	32	None	replace
150	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  varModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  varModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(varModule,    currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	1	None	replace
151	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule.getModule();  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule.getModule();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModule,  varModule.getModule();	  JSModuleGraph    currModuleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	36	None	replace
152	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule.getCompiler();  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule.getCompiler();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModule,  varModule.getCompiler();	  JSModuleGraph    currModuleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	36	None	replace
153	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule.getName();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule.getName();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModule,  varModule.getName();	  JSModuleGraph    currModuleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	36	None	replace
154	[BUG]  [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  DEFAULT_NAME_REFERENCE_IN_EXTERNS_ERROR;  [CE]  cannot  find  symbol  DEFAULT_NAME_REFERENCE_IN_EXTERNS_ERROR  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  DEFAULT_NAME_REFERENCE_IN_EXTERNS_ERROR;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varName  =  currModule!=  null?  currModule.getName()  :  DEFAULT_NAME_REFERENCE_IN_EXTERNS_ERROR;	  varName    =    currModule.getName();    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME_REFERENCE_IN_EXTERNS_ERROR	18	None	replace
155	[BUG]  [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  varName;  [CE]  cannot  find  symbol  moduleGraph  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  varName;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varName  =  currModule!=  null?  currModule.getName()  :  varName;	  varName    =    currModule.getName();    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	18	None	replace
156	[BUG]  [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  DEFAULT_VAR_ERROR;  [CE]  cannot  find  symbol  DEFAULT_VAR_ERROR  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  DEFAULT_VAR_ERROR;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varName  =  currModule!=  null?  currModule.getName()  :  DEFAULT_VAR_ERROR;	  varName    =    currModule.getName();    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_VAR_ERROR	18	None	replace
157	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  [CE]  cannot  find  symbol  moduleGraph  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);	  if(varModule!=    currModule)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	28	None	replace
158	[BUG]  [BUGGY]  if(currModule!=  null)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  }  [CE]  cannot  find  symbol  moduleGraph  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  if(currModule!=  null)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  }  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	if(currModule!=  null)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  }	  if(varModule!=    currModule)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	28	None	replace
159	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  compiler.getModuleGraph();  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  compiler.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  compiler.getModuleGraph();	  JSModuleGraph    compiler    =    currModule,    compiler.getModuleGraph(compiler);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
160	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  varModule,  varName);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  varModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  varModule,  varName);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	replace
161	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  compiler.getModuleGraph(varModule,  currModule,  varName);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  compiler.getModuleGraph(varModule,  currModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  compiler.getModuleGraph(varModule,  currModule,  varName);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
162	[BUG]  [BUGGY]  t.report(n,  UNDEFINED_EXTERNS_ERROR,  STRICT_MODULE_DEP_ERROR,  currModule);  [CE]  cannot  find  symbol  UNDEFINED_EXTERNS_ERROR  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  UNDEFINED_EXTERNS_ERROR,  STRICT_MODULE_DEP_ERROR,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  UNDEFINED_EXTERNS_ERROR,  STRICT_MODULE_DEP_ERROR,  currModule);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  cannot  find  symbol  UNDEFINED_EXTERNS_ERROR	39	None	replace
163	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule,  NAME_REFERENCE_IN_EXTERNS_ERROR);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	39	None	replace
164	[BUG]  [BUGGY]  JSModuleGraph  varModuleGraph  =  currModulegraph.getModuleGraph();  [CE]  cannot  find  symbol  currModulegraph  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  varModuleGraph  =  currModulegraph.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModuleGraph  =  currModulegraph.getModuleGraph();	  JSModuleGraph    varModuleGraph    =    moduleGraph.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol  currModulegraph	33	None	replace
165	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  null);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  null);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  null);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	2	None	replace
166	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  moduleGraph.getModuleGraph(currModule);  [CE]  cannot  find  symbol  moduleGraph  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  moduleGraph.getModuleGraph(currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  moduleGraph.getModuleGraph(currModule);	  JSModuleGraph    compiler    =    currModule.getModuleGraph(compiler);    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	3	None	replace
167	[BUG]  [BUGGY]  JSModuleGraph  varModuleGraph  =  curr.getModuleGraph();  [CE]  cannot  find  symbol  curr  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  varModuleGraph  =  curr.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModuleGraph  =  curr.getModuleGraph();	  JSModuleGraph    varModuleGraph    =    var.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol  curr	45	None	replace
168	[BUG]  [BUGGY]  varModule  =  currModule!=  null?  currModule.getModule()  :  DEFAULT_MODULE_DEP_ERROR;  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varModule  =  currModule!=  null?  currModule.getModule()  :  DEFAULT_MODULE_DEP_ERROR;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varModule  =  currModule!=  null?  currModule.getModule()  :  DEFAULT_MODULE_DEP_ERROR;	  varModule    =    currModule.getModule();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
169	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  INVALID_FUNCTION_DECL,  currModule,  varName);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,DiagnosticType,JSModule,String)  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  INVALID_FUNCTION_DECL,  currModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  n,  INVALID_FUNCTION_DECL,  currModule,  varName);	  NodeTraversal.traverse(compiler,    n,    currModule,    varName);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,DiagnosticType,JSModule,String)	41	None	replace
170	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  STRICT_MODULE_DEP_ERROR,  currModule,  varName);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,DiagnosticType,JSModule,String)  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  STRICT_MODULE_DEP_ERROR,  currModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  n,  STRICT_MODULE_DEP_ERROR,  currModule,  varName);	  NodeTraversal.traverse(compiler,    n,    currModule,    varName);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,DiagnosticType,JSModule,String)	41	None	replace
171	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,DiagnosticType,String)  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varName);	  NodeTraversal.traverse(compiler,    n,    currModule,    varName);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,DiagnosticType,String)	41	None	replace
172	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule,  varName);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,DiagnosticType,JSModule,String)  [FE]                                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule,  varName);	  NodeTraversal.traverse(compiler,    n,    currModule,    varName);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,DiagnosticType,JSModule,String)	41	None	replace
173	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varName,  varModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varName,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varName,  varModule);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	14	None	replace
174	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(module,  varModule,  varName);  [CE]  cannot  find  symbol  module  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(module,  varModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(module,  varModule,  varName);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  cannot  find  symbol  module	14	None	replace
175	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  null);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  null);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  null);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	14	None	replace
176	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(module,  varModule);  [CE]  cannot  find  symbol  module  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(module,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(module,  varModule);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(varModule,    currModule);    	non-compiled	[CE]  cannot  find  symbol  module	13	None	replace
177	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varInput);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varInput);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varInput);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(varModule,    currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	13	None	replace
178	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varName);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varName);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(varModule,    currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	13	None	replace
179	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  moduleGraph.getModuleGraph(currModule,  varModule,  varName);  [CE]  cannot  find  symbol  moduleGraph  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  moduleGraph.getModuleGraph(currModule,  varModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  moduleGraph.getModuleGraph(currModule,  varModule,  varName);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	35	None	replace
180	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule;  [CE]  incompatible  types  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModule;	  JSModuleGraph    currModuleGraph    =    currModule.getModuleGraph();    	non-compiled	[CE]  incompatible  types	8	None	replace
181	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule.getModuleGraph(varModule);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule.getModuleGraph(varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModule.getModuleGraph(varModule);	  JSModuleGraph    currModuleGraph    =    currModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
182	[BUG]  [BUGGY]  t.report(n,  VARIABLE_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  cannot  find  symbol  VARIABLE_MODULE_DEP_ERROR  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  VARIABLE_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  VARIABLE_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varName);    	non-compiled	[CE]  cannot  find  symbol  VARIABLE_MODULE_DEP_ERROR	37	None	replace
183	[BUG]  [BUGGY]  t.report(n,  UNKNOWN_STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  [CE]  cannot  find  symbol  UNKNOWN_STRICT_MODULE_DEP_ERROR  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  UNKNOWN_STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  UNKNOWN_STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varName);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_STRICT_MODULE_DEP_ERROR	37	None	replace
184	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  moduleGraph.getModuleGraph(currModule,  varModule);  [CE]  cannot  find  symbol  moduleGraph  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  moduleGraph.getModuleGraph(currModule,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  moduleGraph.getModuleGraph(currModule,  varModule);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule,    varModule);    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	23	None	replace
185	[BUG]  [BUGGY]  JSModule  currModule  =  currModule!=  null?  currModule.getModule()  :  DEFAULT_MODULE_DEP_ERROR;  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currModule!=  null?  currModule.getModule()  :  DEFAULT_MODULE_DEP_ERROR;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currModule!=  null?  currModule.getModule()  :  DEFAULT_MODULE_DEP_ERROR;	  JSModule    currModule    =    currModule.getModule();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	16	None	replace
186	[BUG]  [BUGGY]  JSModule  currModule  =  currModule!=  null?  currModule.getModule()  :  NAME_REFERENCE_IN_EXTERNS_ERROR;  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currModule!=  null?  currModule.getModule()  :  NAME_REFERENCE_IN_EXTERNS_ERROR;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currModule!=  null?  currModule.getModule()  :  NAME_REFERENCE_IN_EXTERNS_ERROR;	  JSModule    currModule    =    currModule.getModule();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	16	None	replace
187	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule;  [CE]  incompatible  types  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  currModule,  varModule;	  JSModuleGraph    moduleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  incompatible  types	11	None	replace
188	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule.getCompiler();  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule.getCompiler();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  currModule,  varModule.getCompiler();	  JSModuleGraph    moduleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	11	None	replace
189	[BUG]  [BUGGY]  if(currModule!=  null)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  }  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  if(currModule!=  null)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  }  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	if(currModule!=  null)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  }	  if(varModule!=    currModule)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	29	None	replace
190	[BUG]  [BUGGY]  n.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  n.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	n.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule);	  if(varModule!=    currModule)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
191	[BUG]  [BUGGY]  n.report(mising_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  [CE]  cannot  find  symbol  mising_MODULE_DEP_ERROR  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  n.report(mising_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	n.report(mising_MODULE_DEP_ERROR,  currModule.getName(),  varModule);	  if(varModule!=    currModule)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  mising_MODULE_DEP_ERROR	29	None	replace
192	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  varName,  currModule);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,String,JSModule)  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  varName,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  varModule,  varName,  currModule);	  NodeTraversal.traverse(compiler,    varModule,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,String,JSModule)	22	None	replace
193	[BUG]  [BUGGY]  JSModule  currModule  =  currModule.getReferenceName();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currModule.getReferenceName();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currModule.getReferenceName();	  JSModule    currModule    =    currModule.getParent();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	21	None	replace
194	[BUG]  [BUGGY]  JSModule  currModule  =  currModule.getComment();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currModule.getComment();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currModule.getComment();	  JSModule    currModule    =    currModule.getParent();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	21	None	replace
195	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  currInput);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  currInput);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  currInput);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(currModule,    varModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	25	None	replace
196	[BUG]  [BUGGY]  JSModule  currModule  =  currClass.getModule();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currClass.getModule();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currClass.getModule();	  JSModule    currModule    =    varModule.getModule();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	20	None	replace
197	[BUG]  [BUGGY]  if(varModule!=  currModule)  {  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [CE]  cannot  find  symbol  moduleGraph  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  if(varModule!=  currModule)  {  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	if(varModule!=  currModule)  {  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }	  if(varModule!=    currModule)    {    t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	27	None	replace
198	[BUG]  [BUGGY]  n.report(currModule,  STRICT_MODULE_DEP_ERROR,  varModule.getName(),  varName);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  n.report(currModule,  STRICT_MODULE_DEP_ERROR,  varModule.getName(),  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	n.report(currModule,  STRICT_MODULE_DEP_ERROR,  varModule.getName(),  varName);	  if(varModule!=    currModule)    {    t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
199	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currModule.getScope();  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varsToDeclareInExterns  =  currModule.getScope();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varsToDeclareInExterns  =  currModule.getScope();	  varsToDeclareInExterns    =    currModule.getParent();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
200	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currModule.getAncestor(1);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varsToDeclareInExterns  =  currModule.getAncestor(1);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varsToDeclareInExterns  =  currModule.getAncestor(1);	  varsToDeclareInExterns    =    currModule.getParent();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
201	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  this.compiler.getModuleGraph(module,  currModule);  [CE]  cannot  find  symbol  module  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  this.compiler.getModuleGraph(module,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  this.compiler.getModuleGraph(module,  currModule);	  JSModuleGraph    compiler    =    this.compiler.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol  module	7	None	replace
202	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  this.compiler.getModuleGraph(varModule,  varModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  this.compiler.getModuleGraph(varModule,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  this.compiler.getModuleGraph(varModule,  varModule);	  JSModuleGraph    compiler    =    this.compiler.getModuleGraph(currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	7	None	replace
203	[BUG]  [BUGGY]  JSModule  currModule  =  currRefInExterns.getModule();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currRefInExterns.getModule();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currRefInExterns.getModule();	  JSModule    currModule    =    curr.getModule();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	19	None	replace
204	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  compiler.getModuleGraph(varModule,  currModule,  scope);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  compiler.getModuleGraph(varModule,  currModule,  scope);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  compiler.getModuleGraph(varModule,  currModule,  scope);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    scope);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
205	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varModule,  scope);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varModule,  scope);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  varModule,  scope);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    scope);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	15	None	replace
206	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule,  compiler.getModuleGraph(module);  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule,  compiler.getModuleGraph(module);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule,  compiler.getModuleGraph(module);	  JSModuleGraph    compiler    =    currModule,    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  ';'  expected	42	None	replace
207	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule,  compiler.getModuleGraph();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule,  compiler.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule,  compiler.getModuleGraph();	  JSModuleGraph    compiler    =    currModule,    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  ';'  expected	42	None	replace
208	[BUG]  [BUGGY]  JSModuleGraph  varModuleGraph  =  new  JSModuleGraph(currModule,  varModule.getModule());  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  varModuleGraph  =  new  JSModuleGraph(currModule,  varModule.getModule());  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModuleGraph  =  new  JSModuleGraph(currModule,  varModule.getModule());	  JSModuleGraph    varModuleGraph    =    varModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
209	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(module,  varModule,  varName);  [CE]  cannot  find  symbol  module  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(module,  varModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph(module,  varModule,  varName);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  cannot  find  symbol  module	35	None	replace
210	[BUG]  [BUGGY]  t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule);  [CE]  cannot  find  symbol  UNDEFINED_EXTERNS_ERROR  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  cannot  find  symbol  UNDEFINED_EXTERNS_ERROR	39	None	replace
211	[BUG]  [BUGGY]  t.report(n,  STRIPT_MODULE_DEP_ERROR,  currModule,  varName);  [CE]  cannot  find  symbol  STRIPT_MODULE_DEP_ERROR  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  STRIPT_MODULE_DEP_ERROR,  currModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  STRIPT_MODULE_DEP_ERROR,  currModule,  varName);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  cannot  find  symbol  STRIPT_MODULE_DEP_ERROR	39	None	replace
212	[BUG]  [BUGGY]  if(currModule!=  currModule)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  }  [CE]  cannot  find  symbol  moduleGraph  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  if(currModule!=  currModule)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  }  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	if(currModule!=  currModule)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  }	  if(varModule!=    currModule)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	28	None	replace
213	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varName);  [CE]  cannot  find  symbol  moduleGraph  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varName);	  if(varModule!=    currModule)    {    t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	28	None	replace
214	[BUG]  [BUGGY]  JSModule  varModule  =  currModule  ==  null?  currModule  :  currModule.getModule();  [CE]  variable  varModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  varModule  =  currModule  ==  null?  currModule  :  currModule.getModule();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  varModule  =  currModule  ==  null?  currModule  :  currModule.getModule();	  JSModule    varModule    =    currModule.getModule();    	non-compiled	[CE]  variable  varModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	26	None	replace
215	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  currModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  currModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(varModule,    currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	1	None	replace
216	[BUG]  [BUGGY]  JSModuleGraph  varModuleGraph  =  new  JSModuleGraph(currModule,  var.getModuleGraph());  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  varModuleGraph  =  new  JSModuleGraph(currModule,  var.getModuleGraph());  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModuleGraph  =  new  JSModuleGraph(currModule,  var.getModuleGraph());	  JSModuleGraph    varModuleGraph    =    var.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
217	[BUG]  [BUGGY]  JSModuleGraph  varModuleGraph  =  new  JSModuleGraph(currModule,  varInput.getModule());  [CE]  no  suitable  constructor  found  for  JSModuleGraph(JSModule,JSModule)  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  varModuleGraph  =  new  JSModuleGraph(currModule,  varInput.getModule());  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModuleGraph  =  new  JSModuleGraph(currModule,  varInput.getModule());	  JSModuleGraph    varModuleGraph    =    var.getModuleGraph();    	non-compiled	[CE]  no  suitable  constructor  found  for  JSModuleGraph(JSModule,JSModule)	45	None	replace
218	[BUG]  [BUGGY]  JSModuleGraph  currModule  =  currModule.getModuleGraph();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModule  =  currModule.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModule  =  currModule.getModuleGraph();	  JSModuleGraph    compiler    =    currModule.getModuleGraph();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	4	None	replace
219	[BUG]  [BUGGY]  JSModuleGraph  currModule  =  currModule.getModule();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModule  =  currModule.getModule();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModule  =  currModule.getModule();	  JSModuleGraph    compiler    =    currModule.getModuleGraph();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	4	None	replace
220	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  module);  [CE]  cannot  find  symbol  module  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  module);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  module);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  cannot  find  symbol  module	14	None	replace
221	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  t);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  t);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  t);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	14	None	replace
222	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(t,  currModule,  varModule,  scope);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(t,  currModule,  varModule,  scope);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(t,  currModule,  varModule,  scope);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    scope);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	15	None	replace
223	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  scope,  varName);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  scope,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  scope,  varName);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    scope);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	15	None	replace
224	[BUG]  [BUGGY]  varName  =  varModule.getName();  [CE]  cannot  find  symbol  moduleGraph  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varName  =  varModule.getName();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varName  =  varModule.getName();	  varName    =    currModule.getName();    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	18	None	replace
225	[BUG]  [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  var;  [CE]  incompatible  types  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  var;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varName  =  currModule!=  null?  currModule.getName()  :  var;	  varName    =    currModule.getName();    	non-compiled	[CE]  incompatible  types	18	None	replace
226	[BUG]  [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  DEFAULT_MODULE_DEP_ERROR;  [CE]  cannot  find  symbol  DEFAULT_MODULE_DEP_ERROR  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varName  =  currModule!=  null?  currModule.getName()  :  DEFAULT_MODULE_DEP_ERROR;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varName  =  currModule!=  null?  currModule.getName()  :  DEFAULT_MODULE_DEP_ERROR;	  varName    =    currModule.getName();    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MODULE_DEP_ERROR	18	None	replace
227	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  this.compiler.getModuleGraph(t,  currModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  this.compiler.getModuleGraph(t,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  this.compiler.getModuleGraph(t,  currModule);	  JSModuleGraph    compiler    =    this.compiler.getModuleGraph(currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	7	None	replace
228	[BUG]  [BUGGY]  JSModule  currModule  =  currRef.getModule();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currRef.getModule();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currRef.getModule();	  JSModule    currModule    =    curr.getModule();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	19	None	replace
229	[BUG]  [BUGGY]  JSModule  currModule  =  moduleGraph.getModule(currModule);  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  moduleGraph.getModule(currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  moduleGraph.getModule(currModule);	  JSModule    currModule    =    curr.getModule();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	19	None	replace
230	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModuleGraph.getModuleGraph();  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currModuleGraph.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModuleGraph.getModuleGraph();	  JSModuleGraph    compiler    =    varModuleGraph.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
231	[BUG]  [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule.getName());  [CE]  cannot  find  symbol  DUPLICATED_MODULE_DEP_ERROR  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule.getName());  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule.getName());	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName());    	non-compiled	[CE]  cannot  find  symbol  DUPLICATED_MODULE_DEP_ERROR	40	None	replace
232	[BUG]  [BUGGY]  JSModule  currModule  =  currModule  ==  null?  currModule  :  varModule.getModule();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currModule  ==  null?  currModule  :  varModule.getModule();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currModule  ==  null?  currModule  :  varModule.getModule();	  JSModule    currModule    =    currModule.getModule();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	16	None	replace
233	[BUG]  [BUGGY]  JSModule  currModule  =  currModule  ==  null?  currModule.getModule()  :  null;  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currModule  ==  null?  currModule.getModule()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currModule  ==  null?  currModule.getModule()  :  null;	  JSModule    currModule    =    currModule.getModule();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	16	None	replace
234	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  currModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  currModule);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(varModule,    currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	13	None	replace
235	[BUG]  [BUGGY]  JSModule  currModule  =  currModule.getCompiler();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModule  currModule  =  currModule.getCompiler();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currModule.getCompiler();	  JSModule    currModule    =    currModule.getParent();    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	21	None	replace
236	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  compiler,  currModule.getModuleGraph());  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  compiler,  currModule.getModuleGraph());  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  compiler,  currModule.getModuleGraph());	  JSModuleGraph    compiler    =    currModule,    compiler.getModuleGraph(compiler);    	non-compiled	[CE]  ';'  expected	43	None	replace
237	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currInput,  varModule.getModuleGraph();  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currInput,  varModule.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currInput,  varModule.getModuleGraph();	  JSModuleGraph    currModuleGraph    =    currInput.getModuleGraph();    	non-compiled	[CE]  ';'  expected	44	None	replace
238	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule!=  null?  varModule.getModule()  :  null;  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule!=  null?  varModule.getModule()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  currModule,  varModule!=  null?  varModule.getModule()  :  null;	  JSModuleGraph    moduleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	11	None	replace
239	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule!=  null?  varModule.getModuleGraph()  :  null;  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule!=  null?  varModule.getModuleGraph()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  currModule,  varModule!=  null?  varModule.getModuleGraph()  :  null;	  JSModuleGraph    moduleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	11	None	replace
240	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule,  this);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule,VarCheck)  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule,  this);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  varModule,  currModule,  this);	  NodeTraversal.traverse(compiler,    varModule,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule,VarCheck)	22	None	replace
241	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule)  [FE]                                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  n,  currModule);	  NodeTraversal.traverse(compiler,    varModule,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule)	22	None	replace
242	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule,  compiler);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule,AbstractCompiler)  [FE]                                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule,  compiler);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  varModule,  currModule,  compiler);	  NodeTraversal.traverse(compiler,    varModule,    currModule);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule,AbstractCompiler)	22	None	replace
243	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule,  varName);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule,  varName);	  if(varModule!=    currModule)    {    t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	27	None	replace
244	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule,  varModule,  scope);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule,JSModule,Scope)  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule,  varModule,  scope);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  n,  currModule,  varModule,  scope);	  NodeTraversal.traverse(compiler,    n,    currModule,    varName);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule,JSModule,Scope)	41	None	replace
245	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule,  varModule,  this);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule,JSModule,VarCheck)  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule,  varModule,  this);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  n,  currModule,  varModule,  this);	  NodeTraversal.traverse(compiler,    n,    currModule,    varName);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule,JSModule,VarCheck)	41	None	replace
246	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule,  varName,  scope);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule,String,Scope)  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule,  varName,  scope);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  n,  currModule,  varName,  scope);	  NodeTraversal.traverse(compiler,    n,    currModule,    varName);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule,String,Scope)	41	None	replace
247	[BUG]  [BUGGY]  NodeTraversal.traverse(t,  n,  currModule,  varName);  [CE]  no  suitable  method  found  for  traverse(NodeTraversal,Node,JSModule,String)  [FE]                                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  NodeTraversal.traverse(t,  n,  currModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(t,  n,  currModule,  varName);	  NodeTraversal.traverse(compiler,    n,    currModule,    varName);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(NodeTraversal,Node,JSModule,String)	41	None	replace
248	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule,  varModule;  [CE]  incompatible  types  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule,  varModule;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule,  varModule;	  JSModuleGraph    compiler    =    currModule,    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  incompatible  types	42	None	replace
249	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule,  varModule.getModule();  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  compiler  =  currModule,  varModule.getModule();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule,  varModule.getModule();	  JSModuleGraph    compiler    =    currModule,    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  ';'  expected	42	None	replace
250	[BUG]  [BUGGY]  JSModuleGraph  varModuleGraph  =  currModule!=  null?  currModule.getModuleGraph()  :  null;  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  varModuleGraph  =  currModule!=  null?  currModule.getModuleGraph()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModuleGraph  =  currModule!=  null?  currModule.getModuleGraph()  :  null;	  JSModuleGraph    varModuleGraph    =    currModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
251	[BUG]  [BUGGY]  if(currModule!=  currModule)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  }  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  if(currModule!=  currModule)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  }  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	if(currModule!=  currModule)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  }	  if(varModule!=    currModule)    {    t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varName);    }    	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	29	None	replace
252	[BUG]  [BUGGY]  JSModuleGraph  currModule  =  compiler.getModuleGraph(currModule);  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModule  =  compiler.getModuleGraph(currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModule  =  compiler.getModuleGraph(currModule);	  JSModuleGraph    compiler    =    currModule.getModuleGraph(compiler);    	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	3	None	replace
253	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule!=  null?  currModule.getModuleGraph()  :  null;  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule!=  null?  currModule.getModuleGraph()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModule!=  null?  currModule.getModuleGraph()  :  null;	  JSModuleGraph    currModuleGraph    =    currModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
254	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(module);  [CE]  cannot  find  symbol  module  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(module);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(module);	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol  module	2	None	replace
255	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currModule,  varModule.getNext();  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  varsToDeclareInExterns  =  currModule,  varModule.getNext();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varsToDeclareInExterns  =  currModule,  varModule.getNext();	  varsToDeclareInExterns    =    currModule.getParent();    	non-compiled	[CE]  ';'  expected	38	None	replace
256	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule!=  null?  varModule.getModuleGraph()  :  null;  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule!=  null?  varModule.getModuleGraph()  :  null;  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModule,  varModule!=  null?  varModule.getModuleGraph()  :  null;	  JSModuleGraph    currModuleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	36	None	replace
257	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule.getReferenceGraph();  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule.getReferenceGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModule,  varModule.getReferenceGraph();	  JSModuleGraph    currModuleGraph    =    currModule,    varModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	36	None	replace
258	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varName,  varModule,  currModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varName,  varModule,  currModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varName,  varModule,  currModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	replace
259	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(t,  currModule,  varModule,  varName);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(t,  currModule,  varModule,  varName);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(t,  currModule,  varModule,  varName);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	replace
260	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  t);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  t);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName,  t);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	replace
261	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varName,  currModule,  varModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varName,  currModule,  varModule);  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varName,  currModule,  varModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule,    varName);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	12	None	replace
262	[BUG]  [BUGGY]  JSModuleGraph  currModulegraph  =  currModule.getModuleGraph();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();      [BUGGY]  JSModuleGraph  currModulegraph  =  currModule.getModuleGraph();  [BUGGY]      if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModulegraph  =  currModule.getModuleGraph();	  JSModuleGraph    currModuleGraph    =    varModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
