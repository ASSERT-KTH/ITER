bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  currModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]          RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  currModule);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(varModule,  currModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	2	None	replace
2	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]            RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	2	None	replace
3	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(compiler);  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph(compiler);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph(compiler);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
4	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph();  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  compiler  =  currModule.getModuleGraph();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule.getModuleGraph();	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
5	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  varModuleGraph.getModuleGraph(currModule);  [CE]  cannot  find  symbol  varModuleGraph  [FE]              RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  compiler  =  varModuleGraph.getModuleGraph(currModule);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  varModuleGraph.getModuleGraph(currModule);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol  varModuleGraph	6	None	replace
6	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  t.getModuleGraph(currModule);  [CE]  cannot  find  symbol  [FE]                RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  compiler  =  t.getModuleGraph(currModule);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  t.getModuleGraph(currModule);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
7	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  this.compiler.getModuleGraph(currModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]                  RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  compiler  =  this.compiler.getModuleGraph(currModule);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  this.compiler.getModuleGraph(currModule);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	6	None	replace
8	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule.getModuleGraph();  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule.getModuleGraph();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModule.getModuleGraph();	  JSModuleGraph    moduleGraph    =    currModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
9	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  varModule.getModuleGraph();  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  currModuleGraph  =  varModule.getModuleGraph();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  varModule.getModuleGraph();	  JSModuleGraph    moduleGraph    =    currModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
10	[BUG]  [BUGGY]  JSModuleGraph  varModuleGraph  =  currModule.getModuleGraph();  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  varModuleGraph  =  currModule.getModuleGraph();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModuleGraph  =  currModule.getModuleGraph();	  JSModuleGraph    moduleGraph    =    currModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
11	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule.getModuleGraph();  [CE]  ';'  expected  [FE]              RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  moduleGraph  =  currModule,  varModule.getModuleGraph();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  currModule,  varModule.getModuleGraph();	  JSModuleGraph    moduleGraph    =    currModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	1	None	replace
12	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]        RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	7	None	replace
13	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  currModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]          RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  currModule);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule,  currModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	7	None	replace
14	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]            RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule,  varName);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	7	None	replace
15	[BUG]  [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  scope);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]              RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  scope);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule,  scope);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	7	None	replace
16	[BUG]  [BUGGY]  JSModule  currModule  =  currModule.getModule();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]              RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModule  currModule  =  currModule.getModule();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currModule.getModule();	      	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	4	None	replace
17	[BUG]  [BUGGY]  varModule  =  currModule.getModule();  [CE]  cannot  find  symbol  [FE]                RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  varModule  =  currModule.getModule();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varModule  =  currModule.getModule();	      	non-compiled	[CE]  cannot  find  symbol	4	None	replace
18	[BUG]  [BUGGY]  varName  =  currModule.getName();  [CE]  cannot  find  symbol  moduleGraph  [FE]                  RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  varName  =  currModule.getName();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varName  =  currModule.getName();	      	non-compiled	[CE]  cannot  find  symbol  moduleGraph	4	None	replace
19	[BUG]  [BUGGY]  JSModule  currModule  =  curr.getModule();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                    RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModule  currModule  =  curr.getModule();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  curr.getModule();	      	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	4	None	replace
20	[BUG]  [BUGGY]  JSModule  currModule  =  varModule.getModule();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                      RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModule  currModule  =  varModule.getModule();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  varModule.getModule();	      	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	4	None	replace
21	[BUG]  [BUGGY]  JSModule  currModule  =  currModule.getParent();  [CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                        RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModule  currModule  =  currModule.getParent();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  currModule  =  currModule.getParent();	      	non-compiled	[CE]  variable  currModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	4	None	replace
22	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule)  [FE]                          RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  NodeTraversal.traverse(compiler,  varModule,  currModule);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  varModule,  currModule);	      	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,JSModule,JSModule)	4	None	replace
23	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  compiler.getModuleGraph(currModule,  varModule);  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  compiler  =  compiler.getModuleGraph(currModule,  varModule);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  compiler.getModuleGraph(currModule,  varModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(varModule);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
24	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  compiler.getModuleGraph(varModule,  currModule);  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  compiler  =  compiler.getModuleGraph(varModule,  currModule);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  compiler.getModuleGraph(varModule,  currModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
25	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]          RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(currModule,  varModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	7	None	replace
26	[BUG]  [BUGGY]  JSModule  varModule  =  currModule.getModule();  [CE]  variable  varModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]              RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModule  varModule  =  currModule.getModule();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModule  varModule  =  currModule.getModule();	      	non-compiled	[CE]  variable  varModule  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	4	None	replace
27	[BUG]  [BUGGY]  if(varModule!=  currModule)  {  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varName);  }  [CE]  cannot  find  symbol  moduleGraph  [FE]                RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  if(varModule!=  currModule)  {  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varName);  }  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	if(varModule!=  currModule)  {  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varName);  }	      	non-compiled	[CE]  cannot  find  symbol  moduleGraph	4	None	replace
28	[BUG]  [BUGGY]  if(varModule!=  currModule)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  }  [CE]  cannot  find  symbol  moduleGraph  [FE]                  RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  if(varModule!=  currModule)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  }  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	if(varModule!=  currModule)  {  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  }	      	non-compiled	[CE]  cannot  find  symbol  moduleGraph	4	None	replace
29	[BUG]  [BUGGY]  if(varModule!=  currModule)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varName);  }  [CE]  cannot  find  symbol  moduleGraph  [FE]                    RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  if(varModule!=  currModule)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varName);  }  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	if(varModule!=  currModule)  {  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varName);  }	      	non-compiled	[CE]  cannot  find  symbol  moduleGraph	4	None	replace
30	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  curr.getModuleGraph();  [CE]  cannot  find  symbol  curr  [FE]        RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  currModuleGraph  =  curr.getModuleGraph();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  curr.getModuleGraph();	  JSModuleGraph    moduleGraph    =    currModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol  curr	1	None	replace
31	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule);  [CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]          RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  compiler.getModuleGraph(varModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(varModule);    	non-compiled	[CE]  method  getModuleGraph  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	8	None	replace
32	[BUG]  [BUGGY]  JSModuleGraph  varModuleGraph  =  varModule.getModuleGraph();  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  varModuleGraph  =  varModule.getModuleGraph();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModuleGraph  =  varModule.getModuleGraph();	  JSModuleGraph    moduleGraph    =    varModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
33	[BUG]  [BUGGY]  JSModuleGraph  varModuleGraph  =  moduleGraph.getModuleGraph();  [CE]  cannot  find  symbol  moduleGraph  [FE]              RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  varModuleGraph  =  moduleGraph.getModuleGraph();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModuleGraph  =  moduleGraph.getModuleGraph();	  JSModuleGraph    moduleGraph    =    varModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol  moduleGraph	3	None	replace
34	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  compiler.getModuleGraph(varModule);  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  compiler  =  compiler.getModuleGraph(varModule);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  compiler.getModuleGraph(varModule);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
35	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  compiler.getModuleGraph(currModule,  varModule,  varName);  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  compiler  =  compiler.getModuleGraph(currModule,  varModule,  varName);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  compiler.getModuleGraph(currModule,  varModule,  varName);	  JSModuleGraph    moduleGraph    =    compiler.getModuleGraph(currModule,    varModule);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
36	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule.getModuleGraph();  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  currModuleGraph  =  currModule,  varModule.getModuleGraph();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currModule,  varModule.getModuleGraph();	  JSModuleGraph    moduleGraph    =    currModule.getModuleGraph();    	non-compiled	[CE]  ';'  expected	1	None	replace
37	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varName);  [CE]  cannot  find  symbol  moduleGraph  [FE]              RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varName);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varName);	      	non-compiled	[CE]  cannot  find  symbol  moduleGraph	4	None	replace
38	[BUG]  [BUGGY]  varsToDeclareInExterns  =  currModule.getParent();  [CE]  cannot  find  symbol  [FE]                RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  varsToDeclareInExterns  =  currModule.getParent();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	varsToDeclareInExterns  =  currModule.getParent();	      	non-compiled	[CE]  cannot  find  symbol	4	None	replace
39	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule);  [CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;  [FE]                  RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule);	      	non-compiled	[CE]  method  report  in  class  NodeTraversal  cannot  be  applied  to  given  types;	4	None	replace
40	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName());  [CE]  cannot  find  symbol  moduleGraph  [FE]                    RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName());  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName());	      	non-compiled	[CE]  cannot  find  symbol  moduleGraph	4	None	replace
41	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule,  varName);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule,String)  [FE]                      RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  currModule,  varName);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	NodeTraversal.traverse(compiler,  n,  currModule,  varName);	      	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,JSModule,String)	4	None	replace
42	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule,  compiler.getModuleGraph(currModule);  [CE]  ';'  expected  [FE]          RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  compiler  =  currModule,  compiler.getModuleGraph(currModule);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule,  compiler.getModuleGraph(currModule);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  ';'  expected	6	None	replace
43	[BUG]  [BUGGY]  JSModuleGraph  compiler  =  currModule,  compiler.getModuleGraph(compiler);  [CE]  ';'  expected  [FE]            RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  compiler  =  currModule,  compiler.getModuleGraph(compiler);  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  compiler  =  currModule,  compiler.getModuleGraph(compiler);	  JSModuleGraph    compiler    =    compiler.getModuleGraph(currModule);    	non-compiled	[CE]  ';'  expected	6	None	replace
44	[BUG]  [BUGGY]  JSModuleGraph  currModuleGraph  =  currInput.getModuleGraph();  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  currModuleGraph  =  currInput.getModuleGraph();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  currModuleGraph  =  currInput.getModuleGraph();	  JSModuleGraph    currModuleGraph    =    compiler.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
45	[BUG]  [BUGGY]  JSModuleGraph  varModuleGraph  =  var.getModuleGraph();  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]    CompilerInput  currInput  =  t.getInput();  CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();    [BUGGY]  JSModuleGraph  varModuleGraph  =  var.getModuleGraph();  [BUGGY]    if  (varModule  !=  currModule  &&  varModule  !=  null  &&  currModule  !=  null)  {  if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	176	176	5	replace	JSModuleGraph  varModuleGraph  =  var.getModuleGraph();	  JSModuleGraph    moduleGraph    =    varModule.getModuleGraph();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
