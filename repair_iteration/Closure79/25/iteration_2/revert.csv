projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(!sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(!sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(sanityCheck){NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversal.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(sanityCheck){NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varName,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),null);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(dirs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,varsToDeclareInExterns,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,roots,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externals,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),false);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),strictExternCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,interns,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Na»õionalNodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110parent.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),root);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110nodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExtern
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar(
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar(
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternV
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(dirs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Na»õionalNodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(!sanityCheck){NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),sync);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),synthesizedExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar(varName
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),varsToDeclareInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),createSynthesizedExternVar(varName);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newTokenRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NestedNodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesized
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(root,externs),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this,synthesizedExternsInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110aughtExceptionHandler.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110parent.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110parent.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborUtil.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root)/newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110TraverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110TraverseRoots.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Na»õionalNodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110aughtExceptionHandler.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,exprs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck)==NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck)==NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),null);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),externs);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),synthesizedExternsRoot);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),root,strictExternCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),externals);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),root,this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),root,synthesizedExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverse(compiler,root,newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverse(compiler,root,newNameRefInExternsCheck(),strictExternCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverse(compiler,externals,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverse(compiler,root,newNameRefInExternsCheck(),false);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverse(compiler,root,newNodeRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverse(compiler,roots,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),root);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Analyzer.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110annotationTraversal.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverseRoots(compiler,Lists.newArrayList(varName,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),null);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(!sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(!sanityCheck){NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(!sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(compiler!=root){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(true){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborUtil.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborUtil.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborUtil.traverseRoots(compiler,Lists.newArrayList(varName,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborUtil.traverseRoots(compiler,Lists.newArrayList(root,externs),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborUtil.traverseRoots(compiler,Lists.newArrayList(externs,root),null);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar(varName
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,exprs,newNameRefInExternsCheck(),root);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,interns,newNameRefInExternsCheck(),root);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),sync);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),sync,strictExternCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),sync,STRICT_MODULE_DEP_ERROR);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),sync,strengExternCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),sync,this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NestedNodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NestedNodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NestedNodeTraversal.traverseRoots(compiler,Lists.newArrayList(varName,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NestedNodeTraversal.traverseRoots(compiler,Lists.newArrayList(root,externs),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversal.traverse(compiler,root,newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversal.traverse(compiler,root,newNameRefInExternsCheck(),strictExternCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversal.traverse(compiler,root,newNameRefInExternsCheck(),false);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversal.traverse(compiler,root,createSynthesizedExternVar(varName));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversal.traverse(compiler,externals,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),strictExternCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),sanityCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externals,newNameRefInExternsCheck(),strictExternCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,exprs,newNameRefInExternsCheck(),strictExternCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,interns,newNameRefInExternsCheck(),strictExternCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),varName);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck){NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(!sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());}else{createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck||strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborNodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),root);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traverse.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,externals,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,exprs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,root,newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,interns,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,varName),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(compiler!=root){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),null);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,varName),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),null);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110parser.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110compiler.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110parent.traverseRoots(compiler,Lists.newArrayList(varName,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110parent.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExtern
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverse(compiler,varsToDeclareInExterns,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverse(compiler,roots,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverse(compiler,externs,newNameRefInExternsCheck(),root);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverseRoots(compiler,Lists.newArrayList(varName,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),null);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverseRoots(compiler,Lists.newArrayList(dirs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varName,externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varName,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varName,externals,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varName,externs,this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varName,externs),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck||strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newTokenRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,roots,newTokenRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newTokenRefInExternsCheck(),root);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),varsToDeclareInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(dirs,root),varsToDeclareInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),varsToDeclareInExterns,this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110TraversedCompiler.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(extrs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,roots,newRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110nodeTraversal.traverse(compiler,root,newRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traverse.traverse(compiler,root,newRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),this,strictExternCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),null);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),this,synthesizedExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),this,synchronizedExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),this,syntheticExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverseRoots(compiler,Lists.newArrayList(varName,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverseRoots(compiler,Lists.newArrayList(vars,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverseRoots(compiler,Lists.newArrayList(dirs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externals,newNameRefInExternsCheck(),root);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,roots,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,varsToDeclareInExterns,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),root);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaighborTraversal.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,Lists.newArrayList(varName,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkArgument(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110TraverseRoots.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110TraverseRoots.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110TraverseRoots.traverseRoots(compiler,Lists.newArrayList(vars,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110TraverseRoots.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110TraverseRoots.traverseRoots(compiler,Lists.newArrayList(varName,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110TraverseRoots.traverseRoots(compiler,Lists.newArrayList(dirs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(!sanityCheck&&strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck&&strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(sanityCheck||strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(sanityCheck||strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverseRoots(compiler,Lists.newArrayList(varName,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,externs),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,varName),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),null);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,root,newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,root,createSynthesizedExternVar(varName));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,externals,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,root,newNameRefInExternsCheck(),false);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,interns,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(!sanityCheck){parent.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110node.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,Lists.newArrayList(varName,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,Lists.newArrayList(root,externs),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),null);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110aughtExceptionHandler.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110aughtExceptionHandler.traverseRoots(compiler,Lists.newArrayList(varName,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110aughtExceptionHandler.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(!sanityCheck){aughtExceptionHandler.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110aughtExceptionHandler.traverseRoots(compiler,Lists.newArrayList(root,externs),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110nodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110nodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(dirs,root),null);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(dirs,root),false);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110TraverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110TraverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110TraverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedEx
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,externs,newNameRefInExternsCheck(),root);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,varsToDeclareInExterns,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,roots,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoot(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110aughtExceptionHandler.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(!sanityCheck){aughtExceptionHandler.traverse(compiler,root,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(sanityCheck){aughtExceptionHandler.traverse(compiler,root,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(sanityCheck){aughtExceptionHandler.traverse(compiler,root,newNameRefInExternsCheck());}else{NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(!sanityCheck){aughtExceptionHandler.traverse(compiler,root,newNameRefInExternsCheck());}else{NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(sanityCheck){aughtExceptionHandler.traverse(compiler,root,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root)/newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root)/newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root)/newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(dirs,root)/newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),false);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),true);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externals,newNameRefInExternsCheck(),false);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,interns,newNameRefInExternsCheck(),false);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,roots,newNameRefInExternsCheck(),true);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externes,newNameRefInExternsCheck(),false);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,externs),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,varName),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,externals),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varName,root),newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this,newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(dirs,root),newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck(),this,synthesizedExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(!sanityCheck&&strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck&&strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,varsToDeclareInExterns),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&strictExternCheck){NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(sanityCheck||strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck||strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck&&strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),synthesizedExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),syntheticExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),syntheticExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),synthesizedExternsRoot);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),createSynthesizedExternVar(varName));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varName,root));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),false);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,varName));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,newNameRefInExternsCheck(),root);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this,synthesizedExternsInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this,syntheticExternsInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varName,root),this,synthesizedExternsInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this,synthesizedExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this,varsToDeclareInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),this,syntheticExternsInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(dirs,root),createSynthesizedExternVar(varName));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(sanityCheck){NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),createSynthesizedExternVar(varName);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,root),createSynthesizedExternVar(varName);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this,createSynthesizedExternVar(varName);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varName,root),createSynthesizedExternVar(varName);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),sync,synthesizedExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),exprs);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(dirs,externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&NodeUtil.isExpressionNode(root)){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newRefInExternsCheck(),root);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,root,newRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,exprs,newNameRefInExternsCheck(),false);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(sanityCheck&&strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(compiler!=null){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverse(compiler,externs,newNodeRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverse(compiler,roots,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborUtil.traverseRoots(compiler,Lists.newArrayList(externs,root),newNodeRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,root,newNameRefInExternsCheck(),strictExternCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,exprs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,root,newNodeRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110parent.traverse(compiler,externs,newNameRefInExternsCheck(),root);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110compiler.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,externs,newTokenRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,externs,newRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,externs,newSyntheticExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,externs,newSyntheticRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNodeRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,externes,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root)+1,varsToDeclareInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this/newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this?newNameRefInExternsCheck():null);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck||strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&createSynthesizedExternVar){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&createSynthesizedExternVar){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&NodeUtil.isExpressionNode(root)){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&newNameRefInExternsCheck()!=null){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(compiler!=null){NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverse(compiler,externs,newNodeRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverse(compiler,externs,newTokenRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverse(compiler,externs,newSyntheticExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(compiler!=null){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(compiler==null){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck(),null);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck(),this,strictExternCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(compiler!=null){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(root!=null){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck)==NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(!sanityCheck&&NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(!sanityCheck&&NodeUtil.isExpressionNode(root)){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck&&NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck&&NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck&&NodeUtil.isExpressionNode(root)){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root)/2,null);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root)+1);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root)&0<=0);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),root,syntheticExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this,synthesizedExternsInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNodeRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,Root,newTokenRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborNodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),varsToDeclareInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NestedNodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),null);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(compiler!=null){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(compiler==null){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),this,synthetic);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(sanityCheck){aughtExceptionHandler.traverse(compiler,root,newNameRefInExternsCheck());}else{NodeTraversal.traverseRoots(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(!sanityCheck){aughtExceptionHandler.traverse(compiler,root,newNameRefInExternsCheck());}else{NodeTraversal.traverseRoots(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110TraverseRoots.traverseRoots(compiler,Lists.newArrayList(externs,root),varsToDeclareInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110TraverseRoots.traverseRoots(compiler,Lists.newArrayList(externs,root),newNodeRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(compiler!=null){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110parent.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110compiler.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),expr);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverse(compiler,exprs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,externs,this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversal.traverse(compiler,root,newNameRefInExternsCheck(),synthesizedExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversal.traverse(compiler,root,newNameRefInExternsCheck(),sync);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversal.traverse(compiler,root,newNodeRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(sanityCheck){aughtExceptionHandler.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(!sanityCheck){compiler.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110aughtExceptionHandler.traverseRoots(compiler,Lists.newArrayList(externs,root),null);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverseRoots(compiler,Lists.newArrayList(externs,root),varsToDeclareInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthe
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesized
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(extterns,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&root!=null){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),syntheticExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),true);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverse(compiler,externs,newNodeRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverse(compiler,externs,newTokenRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverse(compiler,externs,newNameRefInExternsCheck(root));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,externs,newNodeRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,externs,newNameRefInExternsCheck(root));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,externs,newTokenRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),varsToDeclareInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this,synthesizedExternsInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborNodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110parent.traverseRoots(compiler,Lists.newArrayList(vars,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,exprs,newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(!sanityCheck){TraverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this,syntheticExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck&&strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck&&createSynthesizedExternVar){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,root,newNameRefInExternsCheck(varName));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborUtil.traverseRoots(compiler,Lists.newArrayList(vars,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborUtil.traverseRoots(compiler,Lists.newArrayList(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck||strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck)==NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck)==NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck)==NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),synesizedExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NestedNodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NestedNodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar(';');}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(sanityCheck)==NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(dirs,root));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),true);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversal.traverse(compiler,exprs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverseRoots(compiler,Lists.newArrayList(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(dirs,externs,this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,root,newRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110TraverseRoots.traverseRoots(compiler,Lists.newArrayList(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NaionalNodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),strictExternCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(extends,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(';');}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root));
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck(),this,syntheticExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck(),this,synchronizedExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,externs,newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){nodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Annotations.traverseRoots(compiler,Lists.newArrayList(externs,root),newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110AnnotationTraversal.traverse(compiler,root,newNameRefInExternsCheck(),STRICT_MODULE_DEP_ERROR);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(sanityCheck){aughtExceptionHandler.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110if(sanityCheck){aughtExceptionHandler.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsIntoDeclareInExterns,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Traversed.traverse(compiler,externs,newNameRefInExternsCheck(),strictExternCheck);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),this,synthesizedExternsInExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),strictExternCheck,synthesizedExterns);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedEx
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,externs),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,externs,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverseRoots(compiler,root,newNameRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NeighborTraversal.traverse(compiler,externs,newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varName,externals),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,externs,this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,externals),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(varsToDeclareInExterns,expr),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck&&NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(vars,root),this);for(StringvarName:varsToDeclareInExterns){createSynthesizedExternVar(
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,root,newTokenRefInExternsCheck());
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110parent.traverse(compiler,root,newNameRefInExternsCheck(),this);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Context.checkState(sanityCheck){NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root),this);}else{createSynthesizedExternVar(';');}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkArgument(!sanityCheck&&strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110Preconditions.checkState(sanityCheck&&strictExternCheck){NodeTraversal.traverse(compiler,externs,newNameRefInExternsCheck());}else{createSynthesizedExternVar(varName);}
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverse(compiler,root,newNameRefInExternsCheck(),sync,SHOW_MODULE_DEP_ERROR);
projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java110NodeTraversal.traverseRoots(compiler,Lists.newArrayList(externs,root)/newTokenRefInExternsCheck());
