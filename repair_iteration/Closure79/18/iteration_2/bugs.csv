bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	9	5	replace
2	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	9	5	replace
3	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	9	5	replace
4	[BUG]  [BUGGY]  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	9	5	replace
5	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
6	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule  >=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule  >=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (currModule  >=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
7	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
8	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
9	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule!=  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule!=  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (currModule!=  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
10	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule  >>  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule  >>  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (currModule  >>  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
11	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
12	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
13	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  currModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  currModule  ==  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=  null  &&  currModule!=  null  &&  currModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
14	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule  ==  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=  null  &&  currModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
15	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  currModule  >=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=  null  &&  currModule!=  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
16	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  ||  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  ||  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=  null  ||  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
17	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  >=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  >=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule  >=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
18	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	12	replace
19	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	12	replace
20	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	12	replace
21	[BUG]  [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	12	replace
22	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	10	replace
23	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	10	replace
24	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	12	replace
25	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	12	replace
26	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	17	replace
27	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	17	replace
28	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	5	replace
29	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	5	replace
30	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
31	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
32	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  >=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  >=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule  >=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
33	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
34	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
35	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  >>  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  >>  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule  >>  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
36	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  If(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  ';'  expected  [FE]                RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  If(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    If(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
37	[BUG]  [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
38	[BUG]  [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (varModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
39	[BUG]  [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule  >=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
40	[BUG]  [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  If  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  ';'  expected  [FE]          RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  If  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    If  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
41	[BUG]  [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule  >=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule  >=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (varModule  >=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
42	[BUG]  [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule  >=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule  >=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (varModule  ==  currModule  &&  varModule  >=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
43	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
44	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
45	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
46	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
47	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
48	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  >=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
49	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  >>  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  >>  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule  >>  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
50	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	4	5	replace
51	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	4	5	replace
52	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	4	12	replace
53	[BUG]  [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	4	12	replace
54	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	2	7	replace
55	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	2	7	replace
56	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]              RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
57	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
58	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                  RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName());  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
59	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varName);  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varName);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
60	[BUG]  [BUGGY]  moduleGraph  =  compiler.getModuleGraph();  [CE]  class,  interface,  or  enum  expected  [FE]                      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  moduleGraph  =  compiler.getModuleGraph();  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	moduleGraph  =  compiler.getModuleGraph();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
61	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                        RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName());  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
62	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                          RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varName);  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varName);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
63	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	7	replace
64	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	7	replace
65	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	5	replace
66	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	5	replace
67	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	12	replace
68	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	12	replace
69	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	14	replace
70	[BUG]  [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	14	replace
71	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	12	replace
72	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	12	replace
73	[BUG]  [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
74	[BUG]  [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  >=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  >=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (varModule  >=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
75	[BUG]  [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
76	[BUG]  [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule  ==  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
77	[BUG]  [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
78	[BUG]  [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule  >=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
79	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
80	[BUG]  [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
81	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
82	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
83	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	11	5	replace
84	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	11	5	replace
85	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  &&  currModule!=  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	2	5	replace
86	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  &&  currModule!=  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	2	5	replace
87	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  If(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  If(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    If(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
88	[BUG]  [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  >>  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  >>  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (varModule  >>  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
89	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	4	12	replace
90	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	4	12	replace
91	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	4	10	replace
92	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	4	10	replace
93	[BUG]  [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
94	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	5	replace
95	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	5	replace
96	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	5	replace
97	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	5	replace
98	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	5	replace
99	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	5	replace
100	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	12	replace
101	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	13	12	replace
102	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule  >=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=  currModule  ||  varModule!=  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
103	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	5	replace
104	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	5	replace
105	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
106	[BUG]  [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
107	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  If(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  If(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    If(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
108	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule  >=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
109	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (varModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
110	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]              RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
111	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varModule.getName(),  varName);  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  varModule.getName(),  varName);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
112	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
113	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	11	12	replace
114	[BUG]  [BUGGY]  t.report(n,  UNDEFINED_MODULE_DEP_ERROR,  currModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]              RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  t.report(n,  UNDEFINED_MODULE_DEP_ERROR,  currModule.getName(),  varName);  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  UNDEFINED_MODULE_DEP_ERROR,  currModule.getName(),  varName);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
115	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [CE]  class,  interface,  or  enum  expected  [FE]                RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
116	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule);  [CE]  class,  interface,  or  enum  expected  [FE]                  RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule);  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
117	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName());  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
118	[BUG]  [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  If  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  If  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    If  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
119	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	5	replace
120	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	5	replace
121	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	12	replace
122	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	6	12	replace
123	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {	  if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	9	12	replace
124	[BUG]  [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {	  if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	9	12	replace
125	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule  >=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule  >=  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=  null  &&  currModule  >=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
126	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	4	14	replace
127	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();    [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]    if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	4	14	replace
