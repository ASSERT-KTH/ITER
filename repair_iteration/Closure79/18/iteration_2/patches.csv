bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule    ==    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
2	[BUG]  [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule    ==    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
3	[BUG]  [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule    ==    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
4	[BUG]  [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  >=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  >=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule    ==    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (varModule  >=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
5	[BUG]  [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  If  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  ';'  expected  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  If  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule    ==    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    If  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	105	None	add
6	[BUG]  [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule  >>  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule  >>  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule    ==    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
7	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  varModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  varModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	99	5	replace
8	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  varModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  varModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  varModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	99	5	replace
9	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  varModule  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  varModule  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	99	5	replace
10	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  varModule  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  varModule  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  varModule  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	99	5	replace
11	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  moduleGraph  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  incomparable  types:  JSModule  and  JSModuleGraph  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  moduleGraph  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  moduleGraph  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	non-compiled	[CE]  incomparable  types:  JSModule  and  JSModuleGraph	99	None	replace
12	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  ||  varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	99	12	replace
13	[BUG]  [BUGGY]  if(moduleGraph!=  null  ||  varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  ||  varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	99	12	replace
14	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  sourceModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  cannot  find  symbol  sourceModule  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  sourceModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  sourceModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  sourceModule	99	None	replace
15	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	95	5	replace
16	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	95	5	replace
17	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  ||  currModule!=  null  &&  varModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	95	5	replace
18	[BUG]  [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  ||  currModule!=  null  &&  varModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	95	5	replace
19	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	95	12	replace
20	[BUG]  [BUGGY]  if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	95	12	replace
21	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  ||  varModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	95	10	replace
22	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  ||  varModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	95	10	replace
23	[BUG]  [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule!=    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
24	[BUG]  [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule!=    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    if  (varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
25	[BUG]  [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  >=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  >=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule!=    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    if  (varModule  >=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
26	[BUG]  [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule!=    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
27	[BUG]  [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule!=    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    if  (varModule!=  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
28	[BUG]  [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule!=    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
29	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  varModule  ||  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  varModule  ||  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule    >=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	32	12	replace
30	[BUG]  [BUGGY]  if(currModule!=  varModule  ||  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  varModule  ||  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  varModule  ||  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule    >=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	32	12	replace
31	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  null  ||  varModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule    >=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	32	7	replace
32	[BUG]  [BUGGY]  if(currModule!=  null  ||  varModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  null  ||  varModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule    >=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	32	7	replace
33	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	113	12	replace
34	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	113	12	replace
35	[BUG]  [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    varModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
36	[BUG]  [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    varModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(currModule  ==  varModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
37	[BUG]  [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule  >=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule  >=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    varModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(currModule  >=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
38	[BUG]  [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    varModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
39	[BUG]  [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    varModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(currModule!=  varModule  ||  varModule!=  null  &&  currModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
40	[BUG]  [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  varModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  varModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    varModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(currModule!=  varModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
41	[BUG]  [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    varModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(currModule!=  varModule  ||  varModule!=  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
42	[BUG]  [BUGGY]  If(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  ';'  expected  [FE]        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  If(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	If(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    If(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
43	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule    >=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	17	5	replace
44	[BUG]  [BUGGY]  if(moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule    >=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	17	5	replace
45	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule    >=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	17	5	replace
46	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule    >=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	17	5	replace
47	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule    >=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	17	7	replace
48	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule    >=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	17	7	replace
49	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if  (currModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	80	10	replace
50	[BUG]  [BUGGY]  if  (currModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if  (currModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	80	10	replace
51	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if    (currModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	4	10	replace
52	[BUG]  [BUGGY]  if(currModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if    (currModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	4	10	replace
53	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
54	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(moduleGraph  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(moduleGraph  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(moduleGraph  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
55	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
56	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(moduleGraph!=  null  &&  currModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(moduleGraph!=  null  &&  currModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(moduleGraph!=  null  &&  currModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
57	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
58	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(moduleGraph  >=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(moduleGraph  >=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(moduleGraph  >=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
59	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(moduleGraph!=  null  ||  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(moduleGraph!=  null  ||  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(moduleGraph!=  null  ||  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
60	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=    currModule    ||    varModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	33	12	replace
61	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=    currModule    ||    varModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	33	12	replace
62	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=    currModule    ||    varModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	33	17	replace
63	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=    currModule    ||    varModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	33	17	replace
64	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
65	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
66	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(currModule  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(currModule  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(currModule  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
67	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(currModule!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(currModule!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(currModule!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
68	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(currModule!=  null  &&  currModule  ==  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(currModule!=  null  &&  currModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(currModule!=  null  &&  currModule  ==  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
69	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(currModule!=  null  &&  currModule!=  null  &&  varModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(currModule!=  null  &&  currModule!=  null  &&  varModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(currModule!=  null  &&  currModule!=  null  &&  varModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
70	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(currModule  >=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(currModule  >=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(currModule  >=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
71	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
72	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
73	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(currModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
74	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule  >=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule  >=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(currModule  >=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
75	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
76	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule  >=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule  >=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(currModule  >=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
77	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule  >>  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule  >>  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(currModule  >>  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
78	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  currModule!=  null  &&  currModule!=  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (varModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	109	12	replace
79	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  currModule!=  null  &&  currModule!=  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (varModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	109	12	replace
80	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph  ==  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    	compilable	  [FE]  RuntimeException  	27	12	replace
81	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph  ==  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph  ==  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    	compilable	  [FE]  RuntimeException  	27	12	replace
82	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  ||  currModule!=  null  &&  varModule!=  null)  {	  if(currModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	104	10	replace
83	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  ||  currModule!=  null  &&  varModule!=  null)  {	  if(currModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	104	10	replace
84	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
85	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule  ==  null  ||  currModule!=  null  ||  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule  ==  null  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    if(varModule  ==  null  ||  currModule!=  null  ||  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
86	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  null  ||  currModule  ==  null  ||  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  null  ||  currModule  ==  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    if(varModule!=  null  ||  currModule  ==  null  ||  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
87	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  null  ||  currModule!=  null  ||  currModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  null  ||  currModule!=  null  ||  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    if(varModule!=  null  ||  currModule!=  null  ||  currModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
88	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  null  ||  currModule!=  null  ||  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  null  ||  currModule!=  null  ||  currModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    if(varModule!=  null  ||  currModule!=  null  ||  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
89	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule  >=  null  ||  currModule!=  null  ||  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule  >=  null  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    if(varModule  >=  null  ||  currModule!=  null  ||  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
90	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  null  ||  currModule  >=  null  ||  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  null  ||  currModule  >=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    if(varModule!=  null  ||  currModule  >=  null  ||  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
91	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(currModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	64	14	replace
92	[BUG]  [BUGGY]  if(moduleGraph  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(currModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	64	14	replace
93	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {	  if(currModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	64	7	replace
94	[BUG]  [BUGGY]  if(currModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {	  if(currModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	64	7	replace
95	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  ||  currModule!=  null  &&  currModule!=  null)  {	  if(currModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	64	7	replace
96	[BUG]  [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  ||  currModule!=  null  &&  currModule!=  null)  {	  if(currModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	64	7	replace
97	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=    null    ||    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	16	7	replace
98	[BUG]  [BUGGY]  if(currModule!=  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=    null    ||    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	16	7	replace
99	[BUG]  [BUGGY]  t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule.getName(),  varModule.getName(),  varName);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
100	[BUG]  [BUGGY]  t.report(n,  DEPRECATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                                RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  DEPRECATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  DEPRECATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
101	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  varModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  &&  currModule!=  varModule  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	10	replace
102	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  varModule  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  varModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  &&  currModule!=  varModule  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	10	replace
103	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  varModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  null  &&  currModule!=  varModule  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	5	replace
104	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  varModule  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  varModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  null  &&  currModule!=  varModule  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	5	replace
105	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	12	replace
106	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	12	replace
107	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  currModule  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  ||  currModule!=  currModule  ||  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	10	replace
108	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  currModule  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  currModule  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  ||  currModule!=  currModule  ||  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	10	replace
109	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	12	replace
110	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	12	replace
111	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
112	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
113	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    if(varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
114	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
115	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  >=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
116	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule  >>  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule  >>  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    if(varModule  >>  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
117	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
118	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  ||  currModule!=  null  ||  currModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	66	7	replace
119	[BUG]  [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  ||  currModule!=  null  ||  currModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	66	7	replace
120	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule  ==  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	66	12	replace
121	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule  ==  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule  ==  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	66	12	replace
122	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  ||  varModule!=  null  ||  varModule!=  null)  {	  if(varModule    ==    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	92	10	replace
123	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  ||  varModule!=  null  ||  varModule!=  null)  {	  if(varModule    ==    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	92	10	replace
124	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  if(varModule    ==    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	92	12	replace
125	[BUG]  [BUGGY]  if(currModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  if(varModule    ==    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	92	12	replace
126	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  varModule  ||  varModule!=  null  &&  varModule!=  null)  {	  if(varModule    ==    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	92	10	replace
127	[BUG]  [BUGGY]  if(currModule  ==  varModule  ||  varModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  varModule  ||  varModule!=  null  &&  varModule!=  null)  {	  if(varModule    ==    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	92	10	replace
128	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName,  moduleGraph);  [CE]  class,  interface,  or  enum  expected  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName,  moduleGraph);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName,  moduleGraph);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
129	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule.getName(),  varName);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
130	[BUG]  [BUGGY]  t.report(n,  UNDEFINED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  UNDEFINED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  UNDEFINED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
131	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  moduleGraph.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  moduleGraph.getName(),  varName);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  moduleGraph.getName(),  varName);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
132	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName,  scope);  [CE]  class,  interface,  or  enum  expected  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName,  scope);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName,  scope);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
133	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule);  [CE]  class,  interface,  or  enum  expected  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule);	  t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule);    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
134	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule,  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule,  varName);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule,  varName);	  t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule);    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
135	[BUG]  [BUGGY]  t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule);  [CE]  class,  interface,  or  enum  expected  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule);	  t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule);    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
136	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule    ==    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	70	12	replace
137	[BUG]  [BUGGY]  if(currModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule    ==    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	70	12	replace
138	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  varModule!=  null  &&  varModule  ==  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	76	12	replace
139	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  varModule  ==  null)  {  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  varModule!=  null  &&  varModule  ==  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	76	12	replace
140	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
141	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule  ==  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule  ==  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    if(varModule  ==  currModule  ||  currModule!=  null  ||  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
142	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule  >=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule  >=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    if(varModule  >=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
143	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  currModule  ||  currModule  ==  null  ||  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  currModule  ||  currModule  ==  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    if(varModule!=  currModule  ||  currModule  ==  null  ||  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
144	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    if(varModule!=  currModule  ||  currModule!=  null  ||  currModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
145	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule  >>  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule  >>  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    if(varModule  >>  currModule  ||  currModule!=  null  ||  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
146	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  if(varModule!=  currModule  ||  currModule!=  null  ||  currModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    if(varModule!=  currModule  ||  currModule!=  null  ||  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
147	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName,  moduleGraph);  [CE]  class,  interface,  or  enum  expected  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName,  moduleGraph);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName,  moduleGraph);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
148	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  moduleGraph);  [CE]  class,  interface,  or  enum  expected  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  moduleGraph);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  moduleGraph);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
149	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  moduleGraph.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  moduleGraph.getName(),  varName);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  moduleGraph.getName(),  varName);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
150	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	14	replace
151	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	14	replace
152	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	12	replace
153	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	12	replace
154	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	14	replace
155	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	14	replace
156	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
157	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
158	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule  >=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule  >=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(currModule  >=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
159	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(currModule!=  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
160	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
161	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule  >>  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule  >>  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(currModule  >>  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
162	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule!=  null  &&  currModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(currModule!=  currModule  ||  varModule!=  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
163	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	29	5	replace
164	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	29	5	replace
165	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  ||  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	29	5	replace
166	[BUG]  [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  ||  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	29	5	replace
167	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	29	12	replace
168	[BUG]  [BUGGY]  if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	29	12	replace
169	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	29	12	replace
170	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	29	12	replace
171	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  ||  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	29	5	replace
172	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  ||  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	29	5	replace
173	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  varModule  ==  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	101	12	replace
174	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  varModule  ==  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	101	12	replace
175	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	120	12	replace
176	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	120	12	replace
177	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	120	12	replace
178	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	120	12	replace
179	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	120	12	replace
180	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	120	12	replace
181	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	120	12	replace
182	[BUG]  [BUGGY]  if(varModule  ==  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	120	12	replace
183	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
184	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(varModule  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
185	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(varModule!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
186	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule  ==  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(varModule!=  null  &&  currModule  ==  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
187	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  varModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  varModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(varModule!=  null  &&  currModule!=  null  &&  varModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
188	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule  >=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule  >=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(varModule  >=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
189	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule  >=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule  >=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(varModule!=  null  &&  currModule  >=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
190	[BUG]  [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule    ==    varModule    &&    varModule!=    null    &&    currModule!=    null)    {    if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
191	[BUG]  [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule    ==    varModule    &&    varModule!=    null    &&    currModule!=    null)    {    if(varModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
192	[BUG]  [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(currModule!=  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule    ==    varModule    &&    varModule!=    null    &&    currModule!=    null)    {    if(currModule!=  varModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
193	[BUG]  [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule    ==    varModule    &&    varModule!=    null    &&    currModule!=    null)    {    if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
194	[BUG]  [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  varModule  &&  varModule  >=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  varModule  &&  varModule  >=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule    ==    varModule    &&    varModule!=    null    &&    currModule!=    null)    {    if(currModule  ==  varModule  &&  varModule  >=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
195	[BUG]  [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  If(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  ';'  expected  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  If(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule    ==    varModule    &&    varModule!=    null    &&    currModule!=    null)    {    If(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	123	None	add
196	[BUG]  [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  varModule  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  varModule  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule    ==    varModule    &&    varModule!=    null    &&    currModule!=    null)    {    if(currModule  ==  varModule  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
197	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
198	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
199	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
200	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
201	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
202	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(moduleGraph  >=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(moduleGraph  >=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(moduleGraph  >=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
203	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(moduleGraph!=  null  &&  currModule  >=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(moduleGraph!=  null  &&  currModule  >=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(moduleGraph!=  null  &&  currModule  >=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
204	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule,  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule,  varName);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule,  varName);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
205	[BUG]  [BUGGY]  t.report(n,  UNDEFINED_MODULE_DEP_ERROR,  currModule);  [CE]  class,  interface,  or  enum  expected  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  UNDEFINED_MODULE_DEP_ERROR,  currModule);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  UNDEFINED_MODULE_DEP_ERROR,  currModule);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
206	[BUG]  [BUGGY]  if(varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule    >=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	44	None	replace
207	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	19	5	replace
208	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	19	5	replace
209	[BUG]  [BUGGY]  if(moduleGraph!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  incomparable  types:  JSModuleGraph  and  JSModule  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    	non-compiled	[CE]  incomparable  types:  JSModuleGraph  and  JSModule	19	None	replace
210	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
211	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule  ==  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule  ==  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    if(varModule  ==  null  &&  currModule!=  currModule  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
212	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule  >=  currModule  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule  >=  currModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    if(varModule!=  null  &&  currModule  >=  currModule  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
213	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule  ==  currModule  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule  ==  currModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    if(varModule!=  null  &&  currModule  ==  currModule  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
214	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    if(varModule!=  null  &&  currModule!=  currModule  &&  varModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
215	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    if(varModule!=  null  &&  currModule!=  currModule  &&  varModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
216	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule  >>  currModule  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule!=  null  &&  currModule  >>  currModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    if(varModule!=  null  &&  currModule  >>  currModule  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
217	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName());  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName());	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName());    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
218	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName());  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName());	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName());    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
219	[BUG]  [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  moduleGraph.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  moduleGraph.getName());  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  MISSING_MODULE_DEP_ERROR,  currModule.getName(),  moduleGraph.getName());	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName());    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
220	[BUG]  [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null)  {  If(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  ';'  expected  [FE]        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null)  {  If(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  ||  currModule!=  null)  {  If(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    If(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	non-compiled	[CE]  ';'  expected	87	None	replace
221	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  null)  {  If(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  ';'  expected  [FE]          RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null)  {  If(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  ||  currModule!=  null)  {  If(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    If(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	non-compiled	[CE]  ';'  expected	87	None	replace
222	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	97	5	replace
223	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	97	5	replace
224	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  currModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	97	5	replace
225	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  currModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	97	5	replace
226	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  ||  currModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	97	5	replace
227	[BUG]  [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  ||  currModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	97	5	replace
228	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
229	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  >=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  >=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule  >=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
230	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule  ==  currModule  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
231	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=  currModule  &&  currModule!=  null  &&  currModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
232	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  &&  currModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  &&  currModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=  currModule  &&  currModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
233	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=  currModule  &&  currModule!=  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
234	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  >>  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  >>  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule  >>  currModule  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
235	[BUG]  [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
236	[BUG]  [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
237	[BUG]  [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
238	[BUG]  [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule  >=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule  >=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule  ==  currModule  &&  varModule  >=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
239	[BUG]  [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  If(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  ';'  expected  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  If(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    If(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
240	[BUG]  [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
241	[BUG]  [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule  ==  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
242	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null)    {    if(varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
243	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null)    {    if(varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
244	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null)    {    if(varModule!=  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
245	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null)    {    if(varModule!=  null  &&  currModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
246	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  if(varModule  >=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  if(varModule  >=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null)    {    if(varModule  >=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
247	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule  >>  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule  >>  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null)    {    if(varModule!=  null  &&  currModule  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
248	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  If(varModule!=  null  &&  currModule!=  null)  {  [CE]  ';'  expected  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null)  {  If(varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null)    {    If(varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	85	None	add
249	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  &&  currModule!=  null  &&  currModule!=  null)  {	  if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    If    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	40	12	replace
250	[BUG]  [BUGGY]  if(varModule  ==  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  &&  currModule!=  null  &&  currModule!=  null)  {	  if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    If    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	40	12	replace
251	[BUG]  [BUGGY]  moduleGraph  =  currModule.getModuleGraph();  [CE]  class,  interface,  or  enum  expected  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  moduleGraph  =  currModule.getModuleGraph();  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	moduleGraph  =  currModule.getModuleGraph();	  moduleGraph    =    compiler.getModuleGraph();    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
252	[BUG]  [BUGGY]  moduleGraph  =  compiler.getModuleGraph(currModule);  [CE]  class,  interface,  or  enum  expected  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  moduleGraph  =  compiler.getModuleGraph(currModule);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	moduleGraph  =  compiler.getModuleGraph(currModule);	  moduleGraph    =    compiler.getModuleGraph();    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
253	[BUG]  [BUGGY]  moduleGraph  =  compiler.getModuleGraph(varModule);  [CE]  class,  interface,  or  enum  expected  [FE]                              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  moduleGraph  =  compiler.getModuleGraph(varModule);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	moduleGraph  =  compiler.getModuleGraph(varModule);	  moduleGraph    =    compiler.getModuleGraph();    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
254	[BUG]  [BUGGY]  moduleGraph  =  currModule!=  null?  compiler.getModuleGraph()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]                                RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  moduleGraph  =  currModule!=  null?  compiler.getModuleGraph()  :  null;  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	moduleGraph  =  currModule!=  null?  compiler.getModuleGraph()  :  null;	  moduleGraph    =    compiler.getModuleGraph();    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
255	[BUG]  [BUGGY]  moduleGraph  =  currModule  ==  null?  compiler.getModuleGraph()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]                                  RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  moduleGraph  =  currModule  ==  null?  compiler.getModuleGraph()  :  null;  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	moduleGraph  =  currModule  ==  null?  compiler.getModuleGraph()  :  null;	  moduleGraph    =    compiler.getModuleGraph();    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
256	[BUG]  [BUGGY]  moduleGraph  =  varModule.getModuleGraph();  [CE]  class,  interface,  or  enum  expected  [FE]                                    RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  moduleGraph  =  varModule.getModuleGraph();  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	moduleGraph  =  varModule.getModuleGraph();	  moduleGraph    =    compiler.getModuleGraph();    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
257	[BUG]  [BUGGY]  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule);  [CE]  class,  interface,  or  enum  expected  [FE]                                      RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  moduleGraph  =  compiler.getModuleGraph(currModule,  varModule);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	moduleGraph  =  compiler.getModuleGraph(currModule,  varModule);	  moduleGraph    =    compiler.getModuleGraph();    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
258	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  if(currModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	51	12	replace
259	[BUG]  [BUGGY]  if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  if(currModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	51	12	replace
260	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
261	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
262	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule  >=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule  >=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    if(varModule  >=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
263	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    if(varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
264	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
265	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    if(varModule  ==  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
266	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  varModule!=  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	23	12	replace
267	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  ||  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  varModule!=  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	23	12	replace
268	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  ||  varModule!=  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	23	10	replace
269	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  ||  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  ||  varModule!=  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	23	10	replace
270	[BUG]  [BUGGY]  if(moduleGraph!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [CE]  incomparable  types:  JSModuleGraph  and  JSModule  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    	non-compiled	[CE]  incomparable  types:  JSModuleGraph  and  JSModule	23	None	replace
271	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  currModule  ||  varModule!=  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	23	10	replace
272	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  ||  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  currModule  ||  varModule!=  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	23	10	replace
273	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  varModule  ==  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	23	12	replace
274	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  ||  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  varModule  ==  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	23	12	replace
275	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	84	12	replace
276	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	84	12	replace
277	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	84	12	replace
278	[BUG]  [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	84	12	replace
279	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	55	12	replace
280	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	55	12	replace
281	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  currModule  ||  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	55	7	replace
282	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  currModule  ||  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	55	7	replace
283	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
284	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
285	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(varModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
286	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule  >=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule  >=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(varModule  >=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
287	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
288	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule  >=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule  >=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(varModule  >=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
289	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule  >>  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule  >>  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(varModule  >>  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
290	[BUG]  [BUGGY]  if(moduleGraph!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  incomparable  types:  JSModuleGraph  and  JSModule  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  if(currModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	non-compiled	[CE]  incomparable  types:  JSModuleGraph  and  JSModule	25	None	replace
291	[BUG]  [BUGGY]  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
292	[BUG]  [BUGGY]  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
293	[BUG]  [BUGGY]  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
294	[BUG]  [BUGGY]  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (varModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
295	[BUG]  [BUGGY]  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule  >=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  if  (currModule  >=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if  (currModule  >=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
296	[BUG]  [BUGGY]  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  If  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [CE]  ';'  expected  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  If  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    If  (currModule  ==  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
297	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
298	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule  >=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule  >=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    if(varModule  >=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
299	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule  ==  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule  ==  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    if(varModule  ==  currModule  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
300	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    if(varModule!=  currModule  &&  currModule!=  null  &&  varModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
301	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  currModule  ==  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  currModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    if(varModule!=  currModule  &&  currModule  ==  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
302	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    if(varModule!=  currModule  &&  currModule!=  null  &&  varModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
303	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule  >>  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  if(varModule  >>  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    if(varModule  >>  currModule  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	119	None	add
304	[BUG]  [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
305	[BUG]  [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
306	[BUG]  [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  null  ||  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  null  ||  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule  ==  null  ||  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
307	[BUG]  [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  null  &&  currModule!=  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  null  &&  currModule!=  null  &&  currModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule  ==  null  &&  currModule!=  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
308	[BUG]  [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  null  &&  currModule  >=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  null  &&  currModule  >=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule  ==  null  &&  currModule  >=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
309	[BUG]  [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  null  &&  currModule!=  null  &&  currModule  >>  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  null  &&  currModule!=  null  &&  currModule  >>  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule  ==  null  &&  currModule!=  null  &&  currModule  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
310	[BUG]  [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  If(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  ';'  expected  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  If(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    null    &&    currModule!=    null    &&    currModule!=    null)    {    If(varModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	69	None	add
311	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
312	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    if(varModule  ==  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
313	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
314	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  null  &&  currModule  ==  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  null  &&  currModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=  null  &&  currModule  ==  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
315	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph  >=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
316	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  >=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  >=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    if(varModule  >=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
317	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  null  &&  currModule  >=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  null  &&  currModule  >=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=  null  &&  currModule  >=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
318	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
319	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    if(varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
320	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule  >=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule  >=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    if(varModule  >=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
321	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule  >=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule  >=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    if(varModule  >=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
322	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    if(varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
323	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule  ==  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule  ==  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    if(varModule  ==  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
324	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule  >>  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule  >>  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    if(varModule  >>  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
325	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
326	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
327	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(currModule  ==  null  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
328	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule!=  null  &&  currModule!=  null  &&  currModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule!=  null  &&  currModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(currModule!=  null  &&  currModule!=  null  &&  currModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
329	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule!=  null  &&  currModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule!=  null  &&  currModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(currModule!=  null  &&  currModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
330	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule!=  null  &&  currModule!=  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule!=  null  &&  currModule!=  null  &&  currModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(currModule!=  null  &&  currModule!=  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
331	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule!=  null  ||  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule!=  null  ||  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(currModule!=  null  ||  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
332	[BUG]  [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule.getName());  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  NAME_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varModule.getName());	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varModule.getName());    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
333	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
334	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    if(varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
335	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
336	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  If(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [CE]  ';'  expected  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  If(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    If(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	91	None	add
337	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule  >>  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule  >>  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
338	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if(varModule  >=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if(varModule  >=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    if(varModule  >=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
339	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if(varModule  ==  currModule  ||  varModule  >=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if(varModule  ==  currModule  ||  varModule  >=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    if(varModule  ==  currModule  ||  varModule  >=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
340	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	7	replace
341	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  currModule  ||  currModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	7	replace
342	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  currModule  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	12	replace
343	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  currModule!=  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  currModule  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	12	replace
344	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule  ==  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  currModule  ==  null  ||  currModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	12	replace
345	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  currModule  ==  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule  ==  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  currModule  ==  null  ||  currModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	12	replace
346	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  ||  currModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	7	replace
347	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  ||  currModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	7	replace
348	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	12	replace
349	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	12	replace
350	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  currModule  ==  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  currModule  ||  currModule  ==  null  ||  currModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	12	replace
351	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  currModule  ==  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  currModule  ==  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  currModule  ||  currModule  ==  null  ||  currModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	12	replace
352	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	43	5	replace
353	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	43	5	replace
354	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
355	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
356	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
357	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  If(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  ';'  expected  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  If(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    If(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
358	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  >=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  >=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule  >=  currModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
359	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  ||  varModule  >=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  ||  varModule  >=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule  ==  currModule  ||  varModule  >=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
360	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule  >>  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule  >>  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
361	[BUG]  [BUGGY]  t.report(n,  DEFINED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  DEFINED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  DEFINED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);	  t.report(n,    UNDEFINED_MODULE_DEP_ERROR,    currModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
362	[BUG]  [BUGGY]  t.report(n,  VAR_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  VAR_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  VAR_REFERENCE_IN_EXTERNS_ERROR,  currModule.getName(),  varName);	  t.report(n,    UNDEFINED_MODULE_DEP_ERROR,    currModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
363	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
364	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule  ==  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
365	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  >=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  >=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule  >=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
366	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
367	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  ||  varModule  ==  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  ||  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=  currModule  ||  varModule  ==  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
368	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  >>  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  >>  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule  >>  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
369	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
370	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  null  ||  currModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	7	replace
371	[BUG]  [BUGGY]  if(varModule  ==  null  ||  currModule!=  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  null  ||  currModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	7	replace
372	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  null  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  null  ||  currModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	12	replace
373	[BUG]  [BUGGY]  if(currModule  ==  null  ||  currModule!=  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  null  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  null  ||  currModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	12	replace
374	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule  ==  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  ||  currModule  ==  null  ||  currModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	12	replace
375	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule  ==  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule  ==  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  ||  currModule  ==  null  ||  currModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	12	replace
376	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  varModule  ||  varModule!=  null  &&  currModule!=  null)  {	  if(varModule    ==    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	2	5	replace
377	[BUG]  [BUGGY]  if(currModule  ==  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  varModule  ||  varModule!=  null  &&  currModule!=  null)  {	  if(varModule    ==    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	2	5	replace
378	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  null  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  null  ||  varModule!=  null  &&  currModule!=  null)  {	  if(varModule    ==    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	2	10	replace
379	[BUG]  [BUGGY]  if(currModule  ==  null  ||  varModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  null  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  null  ||  varModule!=  null  &&  currModule!=  null)  {	  if(varModule    ==    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	2	10	replace
380	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  moduleGraph);  [CE]  class,  interface,  or  enum  expected  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  moduleGraph);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  moduleGraph);	  t.report(n,    STRICT_MODULE_DEP_ERROR,    currModule.getName(),    varModule.getName());    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
381	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
382	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph  ==  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph  ==  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph  ==  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
383	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
384	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph!=  null  &&  varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
385	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
386	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph!=  null  &&  varModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
387	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
388	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	12	replace
389	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  ||  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	12	replace
390	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	7	replace
391	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	7	replace
392	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	12	replace
393	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	12	replace
394	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	5	replace
395	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	5	replace
396	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  ||  currModule  ==  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	10	replace
397	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule  ==  null)  {  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  ||  currModule  ==  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	10	replace
398	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
399	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (currModule  >=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (currModule  >=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (currModule  >=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
400	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (currModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (currModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (currModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
401	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
402	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (currModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (currModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (currModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
403	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
404	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  currModule  ==  null  &&  currModule!=  null)  {	  if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	127	12	replace
405	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  currModule  ==  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  currModule  ==  null  &&  currModule!=  null)  {	  if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	127	12	replace
406	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
407	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(currModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(currModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(currModule  >=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
408	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(currModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(currModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(currModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
409	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
410	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(currModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(currModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(currModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
411	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(currModule  >>  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(currModule  >>  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(currModule  >>  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
412	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
413	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
414	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph  ==  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
415	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
416	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
417	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
418	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
419	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
420	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
421	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule  >=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule  >=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    if(varModule  >=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
422	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    if(varModule  ==  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
423	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  ||  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule  ==  null  ||  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
424	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
425	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule  >>  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule  >>  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    if(varModule  >>  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
426	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
427	[BUG]  [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);	  t.report(n,    UNDEFINED_MODULE_DEP_ERROR,    currModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
428	[BUG]  [BUGGY]  t.report(n,  VAR_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  VAR_IN_EXTERNS_ERROR,  currModule.getName(),  varName);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  VAR_IN_EXTERNS_ERROR,  currModule.getName(),  varName);	  t.report(n,    UNDEFINED_MODULE_DEP_ERROR,    currModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
429	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  >=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
430	[BUG]  [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule    ==    varModule    &&    varModule!=    null    &&    currModule!=    null)    {    if(currModule  ==  varModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
431	[BUG]  [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  >=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
432	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	29	12	replace
433	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	29	12	replace
434	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  varModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  varModule  &&  varModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	19	5	replace
435	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  varModule  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  varModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  varModule  &&  varModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	19	5	replace
436	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  varModule!=  currModule  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  &&  varModule!=  currModule  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	19	5	replace
437	[BUG]  [BUGGY]  if(varModule!=  null  &&  varModule!=  currModule  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  varModule!=  currModule  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  &&  varModule!=  currModule  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	19	5	replace
438	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  null  ||  varModule!=  null  &&  currModule!=  null)  {	  if(varModule    ==    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	2	7	replace
439	[BUG]  [BUGGY]  if(varModule  ==  null  ||  varModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  null  ||  varModule!=  null  &&  currModule!=  null)  {	  if(varModule    ==    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	2	7	replace
440	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  varModule!=  currModule  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	99	5	replace
441	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  varModule!=  currModule  &&  moduleGraph!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	99	5	replace
442	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph  ==  null  &&  currModule!=  varModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph  ==  null  &&  currModule!=  varModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	99	12	replace
443	[BUG]  [BUGGY]  if(moduleGraph  ==  null  &&  currModule!=  varModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph  ==  null  &&  currModule!=  varModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph  ==  null  &&  currModule!=  varModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	99	12	replace
444	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  varModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  varModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	99	12	replace
445	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  varModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  varModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  varModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	99	12	replace
446	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
447	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  If(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  If(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    If(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	89	None	add
448	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule  >>  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule  >>  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
449	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	97	5	replace
450	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	97	5	replace
451	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	97	5	replace
452	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	97	5	replace
453	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	97	5	replace
454	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	97	5	replace
455	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  If(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  If(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    If(varModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	83	None	add
456	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  ||  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=    null    &&    currModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	13	7	replace
457	[BUG]  [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  ||  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=    null    &&    currModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	13	7	replace
458	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  varModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    If(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	36	10	replace
459	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  varModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    If(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	36	10	replace
460	[BUG]  [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  >>  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (varModule!=  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  >>  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule!=    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    if  (varModule  >>  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
461	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  If(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  If(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    If(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	65	None	add
462	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	12	replace
463	[BUG]  [BUGGY]  if(varModule  ==  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  &&  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	12	replace
464	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  varModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  varModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	12	replace
465	[BUG]  [BUGGY]  if(currModule!=  varModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  varModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  varModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	12	replace
466	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  varModule  ==  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	12	replace
467	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  varModule  ==  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	12	replace
468	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  varModule  ==  null  ||  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	12	replace
469	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule  ==  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  varModule  ==  null  ||  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	12	replace
470	[BUG]  [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  [CE]  class,  interface,  or  enum  expected  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  STRICT_MODULE_DEP_ERROR,  currModule.getName(),  varModule);	  t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
471	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule  >=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule  >=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(currModule  >=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
472	[BUG]  [BUGGY]  t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule.getName(),  varModule.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule.getName(),  varModule.getName());  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule.getName(),  varModule.getName());	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varModule.getName());    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
473	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  &&  currModule!=  varModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  null  &&  currModule!=  varModule  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	12	replace
474	[BUG]  [BUGGY]  if(varModule  ==  null  &&  currModule!=  varModule  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  &&  currModule!=  varModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  null  &&  currModule!=  varModule  &&  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	12	replace
475	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  varModule  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  &&  currModule!=  varModule  &&  moduleGraph!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	5	replace
476	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  varModule  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  varModule  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  &&  currModule!=  varModule  &&  moduleGraph!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	5	replace
477	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule  ==  null  &&  currModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	66	12	replace
478	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule  ==  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule  ==  null  &&  currModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	66	12	replace
479	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  ||  currModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	66	7	replace
480	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  ||  currModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	66	7	replace
481	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  If(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  If(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    If(varModule!=  null  ||  currModule!=  null  ||  currModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	67	None	add
482	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	84	12	replace
483	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	84	12	replace
484	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  varModule  ==  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	101	7	replace
485	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  ||  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  varModule  ==  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	101	7	replace
486	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	95	12	replace
487	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule  ==  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	95	12	replace
488	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	95	12	replace
489	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	95	12	replace
490	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  If(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  If(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    If(varModule!=  null  &&  currModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  ';'  expected	96	None	add
491	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  If(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  If(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    If(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	121	None	add
492	[BUG]  [BUGGY]  t.report(n,  INVALID_FUNCTION_DECL,  currModule.getName(),  varModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  INVALID_FUNCTION_DECL,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  INVALID_FUNCTION_DECL,  currModule.getName(),  varModule.getName(),  varName);	  t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    varModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
493	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	14	replace
494	[BUG]  [BUGGY]  if(varModule  ==  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	14	replace
495	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  null  ||  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	7	replace
496	[BUG]  [BUGGY]  if(varModule  ==  null  ||  currModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  ||  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  null  ||  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	7	replace
497	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  &&  currModule  ==  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	17	replace
498	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule  ==  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  &&  currModule  ==  null)  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	17	replace
499	[BUG]  [BUGGY]  t.report(n,  INVALID_FUNCTION_DECL,  currModule);  [CE]  class,  interface,  or  enum  expected  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  INVALID_FUNCTION_DECL,  currModule);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  INVALID_FUNCTION_DECL,  currModule);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
500	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  ||  modulesGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule!=  null  ||  modulesGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule!=  null  ||  modulesGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
501	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  ||  currModule!=  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	23	12	replace
502	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  ||  currModule!=  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	23	12	replace
503	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	23	5	replace
504	[BUG]  [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	23	5	replace
505	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  null  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	12	replace
506	[BUG]  [BUGGY]  if(varModule  ==  null  ||  currModule!=  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  null  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  null  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	12	replace
507	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  ||  currModule  ==  null  ||  varModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	10	replace
508	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule  ==  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  ||  currModule  ==  null  ||  varModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	10	replace
509	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  ||  currModule!=  null  ||  varModule  ==  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	12	replace
510	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  varModule  ==  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule!=  null  ||  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  ||  currModule!=  null  ||  varModule  ==  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	12	replace
511	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  null  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	12	replace
512	[BUG]  [BUGGY]  if(currModule!=  null  ||  currModule!=  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  null  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	12	replace
513	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  null  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  null  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	12	replace
514	[BUG]  [BUGGY]  if(currModule  ==  null  ||  currModule!=  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  null  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  null  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	12	replace
515	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	12	replace
516	[BUG]  [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    null    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	68	12	replace
517	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
518	[BUG]  [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (currModule  >>  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (currModule  >>  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (currModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (currModule  >>  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
519	[BUG]  [BUGGY]  moduleGraph  =  compiler.getModuleGraph(varModule,  currModule);  [CE]  class,  interface,  or  enum  expected  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  moduleGraph  =  compiler.getModuleGraph(varModule,  currModule);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	moduleGraph  =  compiler.getModuleGraph(varModule,  currModule);	  moduleGraph    =    compiler.getModuleGraph();    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
520	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  If(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  If(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    If(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	94	None	add
521	[BUG]  [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if  (varModule  ==  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  if  (varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if    (varModule    ==    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if  (varModule  ==  currModule  ||  varModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
522	[BUG]  [BUGGY]  t.report(n,  UNDEFINED_EXTERN_VAR_ERROR,  currModule);  [CE]  class,  interface,  or  enum  expected  [FE]                    RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  UNDEFINED_EXTERN_VAR_ERROR,  currModule);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  UNDEFINED_EXTERN_VAR_ERROR,  currModule);	  t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule);    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
523	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  If(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  If(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    If(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  	non-compiled	[CE]  ';'  expected	26	None	add
524	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule!=  currModule  &&  varModule  >=  null  &&  moduleGraph  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  if(varModule!=  currModule  &&  varModule  >=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    if(varModule!=  currModule  &&  varModule  >=  null  &&  moduleGraph  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
525	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  If(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  If(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    varModule!=    null)    {    If(varModule!=  currModule  &&  currModule!=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	119	None	add
526	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
527	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  If(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  If(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    If(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	112	None	add
528	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  ||  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    if(varModule!=  currModule  &&  varModule  ==  null  ||  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
529	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule  >>  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule  >>  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    if(varModule  >>  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
530	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph  >=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
531	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  If(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  If(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    If(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  ';'  expected	100	None	add
532	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  ||  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule  ==  null  ||  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
533	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule  >=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule  >=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
534	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  If(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  If(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    If(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	126	None	add
535	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule  >>  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule  >>  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
536	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  If(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  If(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    currModule!=    null    &&    currModule!=    null)    {    If(varModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	54	None	add
537	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  varModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if    (currModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	4	12	replace
538	[BUG]  [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  varModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if    (currModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	4	12	replace
539	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule  ==  varModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule  ==  varModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule    ==    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	21	12	replace
540	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule  ==  varModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule  ==  varModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule  ==  varModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule    ==    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	21	12	replace
541	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  currModule  ==  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	12	replace
542	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  currModule  ==  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  currModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  currModule  ==  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	12	replace
543	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  currModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  ||  currModule  ==  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	10	replace
544	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  currModule  ==  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  currModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  ||  currModule  ==  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	10	replace
545	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	12	replace
546	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  currModule!=  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  currModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  ||  currModule!=  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	12	replace
547	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  currModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  currModule  ||  currModule  ==  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	10	replace
548	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  currModule  ==  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  currModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  currModule  ||  currModule  ==  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    ||    currModule!=    null    ||    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	72	10	replace
549	[BUG]  [BUGGY]  t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule.getName());  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  UNDEFINED_EXTERNS_ERROR,  currModule.getName());	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName());    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
550	[BUG]  [BUGGY]  t.report(n,  INVALID_FUNCTION_DECL,  currModule.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  INVALID_FUNCTION_DECL,  currModule.getName());  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  INVALID_FUNCTION_DECL,  currModule.getName());	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName());    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
551	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  ||  varModule  ==  null  ||  varModule!=  null)  {	  if(varModule    ==    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	92	12	replace
552	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule  ==  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  ||  varModule  ==  null  ||  varModule!=  null)  {	  if(varModule    ==    currModule    ||    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	92	12	replace
553	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  currModule  ||  varModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  currModule  ||  varModule  ==  null  ||  varModule!=  null)  {	  if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	127	12	replace
554	[BUG]  [BUGGY]  if(currModule  ==  currModule  ||  varModule  ==  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  currModule  ||  varModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  currModule  ||  varModule  ==  null  ||  varModule!=  null)  {	  if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	127	12	replace
555	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  varModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	127	14	replace
556	[BUG]  [BUGGY]  if(currModule  ==  varModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  varModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	127	14	replace
557	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  ||  currModule  ==  null  &&  currModule!=  null)  {	  if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	127	10	replace
558	[BUG]  [BUGGY]  if(varModule!=  null  ||  currModule  ==  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  ||  currModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  ||  currModule  ==  null  &&  currModule!=  null)  {	  if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	127	10	replace
559	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph  >>  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph  >>  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    if(varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
560	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if    (varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	77	5	replace
561	[BUG]  [BUGGY]  if(currModule!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if    (varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	77	5	replace
562	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  varModule!=  null  ||  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if    (varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	77	12	replace
563	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  varModule!=  null  ||  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if    (varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	77	12	replace
564	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {	  if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	127	12	replace
565	[BUG]  [BUGGY]  if(currModule  ==  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {	  if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	127	12	replace
566	[BUG]  [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule);  [CE]  class,  interface,  or  enum  expected  [FE]                      RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule);	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule);    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
567	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	12	replace
568	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  varModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	122	12	replace
569	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(currModule!=  null  &&  currModule  >=  null  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  if(currModule!=  null  &&  currModule  >=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    if(currModule!=  null  &&  currModule  >=  null  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
570	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varName!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varName!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	5	12	replace
571	[BUG]  [BUGGY]  if(varName!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varName!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varName!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	5	12	replace
572	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	5	12	replace
573	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	5	12	replace
574	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(!sanityCheck  &&  moduleGraph.dependsOn(varModule,  currModule))  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(!sanityCheck  &&  moduleGraph.dependsOn(varModule,  currModule))  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	5	17	replace
575	[BUG]  [BUGGY]  if(!sanityCheck  &&  moduleGraph.dependsOn(varModule,  currModule))  {  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(!sanityCheck  &&  moduleGraph.dependsOn(varModule,  currModule))  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(!sanityCheck  &&  moduleGraph.dependsOn(varModule,  currModule))  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	5	17	replace
576	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    If(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	107	12	replace
577	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    If(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	107	12	replace
578	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(!sanityCheck  &&  currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(!sanityCheck  &&  currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule    >=    null)    {    	compilable	  [FE]  RuntimeException  	39	12	replace
579	[BUG]  [BUGGY]  if(!sanityCheck  &&  currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(!sanityCheck  &&  currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(!sanityCheck  &&  currModule!=  currModule  &&  varModule!=  null  &&  currModule!=  null)  {	  if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (varModule    ==    currModule    &&    varModule!=    null    &&    currModule    >=    null)    {    	compilable	  [FE]  RuntimeException  	39	12	replace
580	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(!sanityCheck  &&  currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(!sanityCheck  &&  currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=    null    &&    currModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	14	9	replace
581	[BUG]  [BUGGY]  if(!sanityCheck  &&  currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(!sanityCheck  &&  currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(!sanityCheck  &&  currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=    null    &&    currModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	14	9	replace
582	[BUG]  [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule.getName(),  varName);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule.getName(),  varName);	  t.report(n,    NAME_REFERENCE_IN_EXTERNS_ERROR,    currModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
583	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	101	12	replace
584	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	101	12	replace
585	[BUG]  [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule!=  null  &&  currModule  >=  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  if(currModule!=  null  &&  currModule  >=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(currModule!=  null  &&  currModule  >=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
586	[BUG]  [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule  >>  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule!=  null)  {  if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule  >>  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule    ==    varModule    &&    varModule!=    null    &&    currModule!=    null)    {    if(currModule  ==  varModule  &&  varModule!=  null  &&  currModule  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	123	None	add
587	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    	compilable	  [FE]  RuntimeException  	46	12	replace
588	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    	compilable	  [FE]  RuntimeException  	46	12	replace
589	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(!sanityCheck  &&  currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(!sanityCheck  &&  currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	73	12	replace
590	[BUG]  [BUGGY]  if(!sanityCheck  &&  currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(!sanityCheck  &&  currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(!sanityCheck  &&  currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	73	12	replace
591	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    	compilable	  [FE]  RuntimeException  	27	12	replace
592	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph  ==  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    	compilable	  [FE]  RuntimeException  	27	12	replace
593	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph  ==  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    	compilable	  [FE]  RuntimeException  	27	12	replace
594	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph  ==  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph  ==  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph    ==    null)    {    	compilable	  [FE]  RuntimeException  	27	12	replace
595	[BUG]  [BUGGY]  moduleGraph  =  compiler.getModuleGraphFor(varModule);  [CE]  class,  interface,  or  enum  expected  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  moduleGraph  =  compiler.getModuleGraphFor(varModule);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	moduleGraph  =  compiler.getModuleGraphFor(varModule);	  moduleGraph    =    compiler.getModuleGraph();    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
596	[BUG]  [BUGGY]  t.report(n,  HARD_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [CE]  class,  interface,  or  enum  expected  [FE]                  RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  HARD_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  HARD_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);	  t.report(n,    UNDEFINED_MODULE_DEP_ERROR,    currModule.getName(),    varName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
597	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	19	12	replace
598	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	19	12	replace
599	[BUG]  [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    if(varModule!=  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
600	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varName!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varName!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    If    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	118	5	replace
601	[BUG]  [BUGGY]  if(varName!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varName!=  null  &&  currModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varName!=  null  &&  currModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    If    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	118	5	replace
602	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varName!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varName!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (currModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	7	7	replace
603	[BUG]  [BUGGY]  if(varName!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varName!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varName!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (currModule    ==    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	7	7	replace
604	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  If(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  If(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    If(varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
605	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph.dependsOn(varModule,  varModule))  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph.dependsOn(varModule,  varModule))  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	66	12	replace
606	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph.dependsOn(varModule,  varModule))  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph.dependsOn(varModule,  varModule))  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  &&  moduleGraph.dependsOn(varModule,  varModule))  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	66	12	replace
607	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  moduleGraph.dependsOn(varModule,  varModule))  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  moduleGraph.dependsOn(varModule,  varModule))  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	66	12	replace
608	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  moduleGraph.dependsOn(varModule,  varModule))  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  moduleGraph.dependsOn(varModule,  varModule))  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  moduleGraph.dependsOn(varModule,  varModule))  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	66	12	replace
609	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  If(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  If(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    ||    varModule!=    null    &&    moduleGraph!=    null)    {    If(varModule!=  currModule  ||  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
610	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=    null    &&    currModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	13	12	replace
611	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  currModule  &&  currModule!=  null  &&  currModule!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    currModule!=    null)    {    if(varModule!=    null    &&    currModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	13	12	replace
612	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	23	5	replace
613	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  ||  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    ||    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	23	5	replace
614	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	34	12	replace
615	[BUG]  [BUGGY]  if(currModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  currModule  ||  varModule  ==  null  &&  currModule!=  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	34	12	replace
616	[BUG]  [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName());  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName());	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName(),    varModule.getName());    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
617	[BUG]  [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  If(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  If(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule!=    varModule    ||    varModule!=    null    &&    currModule!=    null)    {    If(currModule!=  varModule  ||  varModule!=  null  &&  currModule!=  null)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
618	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	29	12	replace
619	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule  ==  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	29	12	replace
620	[BUG]  [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                        RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule.getName());  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  DUPLICATED_MODULE_DEP_ERROR,  currModule.getName());	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName());    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
621	[BUG]  [BUGGY]  t.report(n,  UNDEFINED_MODULE_DEP_ERROR,  currModule.getName());  [CE]  class,  interface,  or  enum  expected  [FE]                          RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  t.report(n,  UNDEFINED_MODULE_DEP_ERROR,  currModule.getName());  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	t.report(n,  UNDEFINED_MODULE_DEP_ERROR,  currModule.getName());	  t.report(n,    MISSING_MODULE_DEP_ERROR,    currModule.getName());    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
622	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  ||  varModule!=  null  &&  varModule  ==  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	76	12	replace
623	[BUG]  [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  varModule  ==  null)  {  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  ||  varModule!=  null  &&  varModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  ||  varModule!=  null  &&  varModule  ==  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	76	12	replace
624	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	113	12	replace
625	[BUG]  [BUGGY]  if(varModule  ==  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	113	12	replace
626	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  varModule  ==  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	113	12	replace
627	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  ||  varModule!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  ||  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  varModule  ==  null  ||  varModule!=  null)  {	  if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	113	12	replace
628	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  varModule!=  currModule  &&  moduleGraph!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	97	5	replace
629	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  varModule!=  currModule  &&  moduleGraph!=  null)  {	  if(varModule!=    null    &&    currModule!=    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	97	5	replace
630	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  moduleGraph!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  moduleGraph!=  null  &&  varModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	95	5	replace
631	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  moduleGraph!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  moduleGraph!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  moduleGraph!=  null  &&  varModule!=  null)  {	  if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	95	5	replace
632	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	12	replace
633	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  ||  varModule  ==  null  &&  varModule!=  null)  {	  if(varModule!=    currModule    ||    varModule    ==    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	90	12	replace
634	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varName!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varName!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if    (varModule    ==    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	75	12	replace
635	[BUG]  [BUGGY]  if(varName!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varName!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varName!=  null  &&  currModule!=  currModule  &&  varModule!=  null  &&  varModule!=  null)  {	  if    (varModule!=    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    if    (varModule    ==    currModule    &&    varModule!=    null    &&    varModule!=    null)    {    	compilable	  [FE]  RuntimeException  	75	12	replace
636	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule  >>  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule!=  null)  {  if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule  >>  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    currModule    &&    varModule    ==    null    &&    varModule!=    null)    {    if(varModule!=  currModule  &&  varModule  ==  null  &&  varModule  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
637	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph.dependsOn(varModule,  varModule))  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph.dependsOn(varModule,  varModule))  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	12	replace
638	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph.dependsOn(varModule,  varModule))  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph.dependsOn(varModule,  varModule))  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  null  &&  currModule!=  null  &&  moduleGraph.dependsOn(varModule,  varModule))  {	  if(varModule!=    null    &&    currModule!=    null)    {    	compilable	  [FE]  RuntimeException  	86	12	replace
639	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	47	12	replace
640	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=  null  &&  currModule!=  currModule  &&  varModule  ==  null  &&  moduleGraph!=  null)  {	  if(varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule!=    currModule    &&    varModule    ==    null    &&    moduleGraph!=    null)    {    	compilable	  [FE]  RuntimeException  	47	12	replace
641	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule!=  currModule  &&  varModule!=  null  &&  currModule  ==  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	8	17	replace
642	[BUG]  [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  currModule  ==  null)  {  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  currModule  &&  varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=  currModule  &&  varModule!=  null  &&  currModule  ==  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	8	17	replace
643	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varName!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varName!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	8	7	replace
644	[BUG]  [BUGGY]  if(varName!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varName!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varName!=  null  &&  currModule!=  null  &&  currModule!=  null  &&  currModule!=  null)  {	  if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule!=    null)    {    if    (currModule!=    currModule    &&    varModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	8	7	replace
645	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph  >=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph  >=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph  >=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
646	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule  >=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  currModule!=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph!=  null  &&  currModule  >=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    currModule!=    null    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph!=  null  &&  currModule  >=  null  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
647	[BUG]  [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph  >=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(moduleGraph!=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(moduleGraph  >=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(moduleGraph!=    null    &&    varModule!=    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(moduleGraph  >=  null  &&  varModule!=  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
648	[BUG]  [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph  >>  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph!=  null)  {  if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph  >>  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule    ==    currModule    &&    varModule!=    null    &&    moduleGraph!=    null)    {    if(varModule  ==  currModule  &&  varModule!=  null  &&  moduleGraph  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
649	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=    currModule    ||    varModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	33	17	replace
650	[BUG]  [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule  ==  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=    currModule    ||    varModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	33	17	replace
651	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	add	if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=    currModule    ||    varModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	33	12	replace
652	[BUG]  [BUGGY]  if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(currModule  ==  currModule  ||  varModule!=  null  &&  currModule  ==  null)  {	  if(varModule!=    currModule    ||    varModule!=    null    &&    currModule!=    null)    {    if(varModule!=    currModule    ||    varModule!=    null    &&    currModule    ==    null)    {    	compilable	  [FE]  RuntimeException  	33	12	replace
653	[BUG]  [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule  >=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      CompilerInput  varInput  =  var.input;  if  (currInput  ==  varInput  ||  currInput  ==  null  ||  varInput  ==  null)  {  return;  }  JSModule  currModule  =  currInput.getModule();  JSModule  varModule  =  varInput.getModule();  JSModuleGraph  moduleGraph  =  compiler.getModuleGraph();      [BUGGY]  if(varModule!=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  if(varModule  >=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {  [BUGGY]      if  (moduleGraph.dependsOn(currModule,  varModule))  {  }  else  {  if  (!sanityCheck  &&  scope.isGlobal())  {  if  (moduleGraph.dependsOn(varModule,  currModule))  {  t.report(n,  VIOLATED_MODULE_DEP_ERROR,  currModule.getName(),  varModule.getName(),  varName);  }  else  {  [CLASS]  VarCheck  NameRefInExternsCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  CompilerInput  currInput  synthesizedExternsInput  varInput  AbstractCompiler  compiler  Set  varsToDeclareInExterns  boolean  sanityCheck  strictExternCheck  Scope  scope  NodeTraversal  t  DiagnosticType  INVALID_FUNCTION_DECL  MISSING_MODULE_DEP_ERROR  NAME_REFERENCE_IN_EXTERNS_ERROR  STRICT_MODULE_DEP_ERROR  UNDEFINED_EXTERN_VAR_ERROR  UNDEFINED_VAR_ERROR  VIOLATED_MODULE_DEP_ERROR  Var  var  Node  externs  n  parent  root  synthesizedExternsRoot  JSModule  currModule  varModule  String  varName  JSModuleGraph  moduleGraph  	projects/Closure79/src/com/google/javascript/jscomp/VarCheck.java	0.3730019232961255	177	177	5	replace	if(varModule!=    null    &&    currModule!=    currModule    &&    varModule!=    null)    {    if(varModule  >=  null  &&  currModule!=  currModule  &&  varModule!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
