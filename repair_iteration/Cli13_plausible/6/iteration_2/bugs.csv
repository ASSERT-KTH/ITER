bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
2	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted,  subsequentSplit))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted,  subsequentSplit))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted,  subsequentSplit))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
3	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  	non-compiled	[CE]  'else'  without  'if'	10	None	add
4	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {	  	non-compiled	[CE]  'else'  without  'if'	10	None	add
5	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option))  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option))  {	  	non-compiled	[CE]  'else'  without  'if'	10	None	add
6	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(alwaysQuoted))  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(alwaysQuoted))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else  if(commandLine!=  null  &&  commandLine.looksLikeOption(alwaysQuoted))  {	  	non-compiled	[CE]  'else'  without  'if'	10	None	add
7	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  minimum)  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  minimum)  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  minimum)  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
8	[BUG]  [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  commandLine.size()  >  maximum)  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  commandLine.size()  >  maximum)  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(arguments.looksLikeOption(allValuesQuoted)&&  commandLine.size()  >  maximum)  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
9	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.size()  >  maximum)  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.size()  >  maximum)  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)&&  arguments.size()  >  maximum)  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	17	None	replace
10	[BUG]  [BUGGY]  CommandLine  commandLine  =  commandLine.getCommandLine();  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  commandLine.getCommandLine();  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  commandLine.getCommandLine();	      if(commandLine.looksLikeOption(allValuesQuoted))    {    while(arguments.hasNext()    &&    (argumentCount    <    maximum))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
11	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(arguments);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(arguments);  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  option.getCommandLine(arguments);	      CommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
12	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getArgumentLine();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  option.getArgumentLine();  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  option.getArgumentLine();	      CommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
13	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.previous())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.previous())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)&&  arguments.previous())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	9	None	replace
14	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  commandLine.previous())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  commandLine.previous())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)&&  commandLine.previous())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	9	None	replace
15	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.previous())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.previous())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  arguments.previous())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	9	None	replace
16	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option))  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	11	None	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
18	[BUG]  [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
19	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(option,  allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  if(commandLine.looksLikeOption(option,  allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine.looksLikeOption(option,  allValuesQuoted))  {  arguments.previous();  break;  }	      if(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
20	[BUG]  [BUGGY]  commandLine.looksLikeOption(option,  allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  commandLine.looksLikeOption(option,  allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.looksLikeOption(option,  allValuesQuoted))  {  arguments.previous();  break;  }	      if(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
21	[BUG]  [BUGGY]  commandLine.looksLikeOption(option,  arguments.next()))  {  arguments.previous();  break;  }  [CE]  ';'  expected  [FE]                    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  commandLine.looksLikeOption(option,  arguments.next()))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.looksLikeOption(option,  arguments.next()))  {  arguments.previous();  break;  }	      if(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
22	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.size()  -  1);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.size()  -  1);  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getArgumentLine(arguments.size()  -  1);	      CommandLine    commandLine    =    options.getArgumentLine();    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
23	[BUG]  [BUGGY]  CommandLine  commandLine  =  arguments.getArgumentLine();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  arguments.getArgumentLine();  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  arguments.getArgumentLine();	      CommandLine    commandLine    =    options.getArgumentLine();    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
24	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.previous());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  commandLine.addValue(option,  arguments.previous());  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.previous());	      commandLine.addValue(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
25	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next(),  values);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  commandLine.addValue(option,  arguments.next(),  values);  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.next(),  values);	      commandLine.addValue(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
26	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	8	None	replace
27	[BUG]  [BUGGY]  else  if(option.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(option.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
28	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
29	[BUG]  [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
30	[BUG]  [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  If(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  If(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    If(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
31	[BUG]  [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQUoted))  {  arguments.previous();  break;  }  [CE]  cannot  find  symbol  allValuesQUoted  [FE]        ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQUoted))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQUoted))  {  arguments.previous();  break;  }	  	non-compiled	[CE]  cannot  find  symbol  allValuesQUoted	1	None	add
32	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  initialSplit)  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  while(arguments.hasNext()  &&  initialSplit)  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&  initialSplit)  {  arguments.previous();  break;  }	      if(commandLine.looksLikeOption(allValuesQuoted))    {    while(arguments.hasNext()    &&    initialSplit)    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
33	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  initialSplit)  {  commandLine.addValue(option,  arguments.next());  break;  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  while(arguments.hasNext()  &&  initialSplit)  {  commandLine.addValue(option,  arguments.next());  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&  initialSplit)  {  commandLine.addValue(option,  arguments.next());  break;  }	      if(commandLine.looksLikeOption(allValuesQuoted))    {    while(arguments.hasNext()    &&    initialSplit)    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
34	[BUG]  [BUGGY]  commandLine.addValue(option,  options.next(),  arguments.previous());  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  commandLine.addValue(option,  options.next(),  arguments.previous());  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  options.next(),  arguments.previous());	      commandLine.addValue(option,    options.next());    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
35	[BUG]  [BUGGY]  commandLine.addValue(option,  options.get(argumentCount  -  1));  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  commandLine.addValue(option,  options.get(argumentCount  -  1));  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  options.get(argumentCount  -  1));	      commandLine.addValue(option,    options.next());    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
36	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.toString());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.toString());  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(commandLine.toString());	      CommandLine    commandLine    =    resources.get(commandLine);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
37	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine  -  1);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine  -  1);  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(commandLine  -  1);	      CommandLine    commandLine    =    resources.get(commandLine);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
38	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.substring(1));  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.substring(1));  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(commandLine.substring(1));	      CommandLine    commandLine    =    resources.get(commandLine);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
39	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next());  break;  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  commandLine.addValue(option,  arguments.next());  break;  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.next());  break;	      if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
40	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
41	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(defaultValuesQuoted)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(defaultValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(defaultValuesQuoted)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
42	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(alwaysQuoted)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(alwaysQuoted)&&  arguments.hasNext())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(alwaysQuoted)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
43	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
44	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(commandLine);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(commandLine);  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(commandLine);	      CommandLine    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
45	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(ALLValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  ALLValuesQuoted  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(ALLValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(ALLValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  ALLValuesQuoted	12	None	replace
46	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(ALLValuesQuoted))  {  [CE]  cannot  find  symbol  ALLValuesQuoted  [FE]            ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(ALLValuesQuoted))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(ALLValuesQuoted))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  ALLValuesQuoted	12	None	replace
47	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine()  +  1;  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine()  +  1;  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getArgumentLine()  +  1;	      CommandLine    commandLine    =    options.getArgumentLine();    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
48	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.length);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.length);  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getArgumentLine(arguments.length);	      CommandLine    commandLine    =    options.getArgumentLine();    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkState(commandLine.looksLikeOption(allValuesQuoted));  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  Preconditions.checkState(commandLine.looksLikeOption(allValuesQuoted));  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	Preconditions.checkState(commandLine.looksLikeOption(allValuesQuoted));	      if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
50	[BUG]  [BUGGY]  commandLine.addValue(option,  options.next(),  arguments.maximumSplit);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  commandLine.addValue(option,  options.next(),  arguments.maximumSplit);  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  options.next(),  arguments.maximumSplit);	      commandLine.addValue(option,    options.next());    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
51	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentCount.hasNext())  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentCount.hasNext())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentCount.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
52	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentField.hasNext())  {  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentField.hasNext())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentField.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
53	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    ArgumentImpl  commandLine  =  options.get(commandLine.getValue());	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
54	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    ArgumentImpl  commandLine  =  options.getCommandLine();	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
55	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(option,  arguments))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  if(commandLine.looksLikeOption(option,  arguments))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine.looksLikeOption(option,  arguments))  {  arguments.previous();  break;  }	      if(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
56	[BUG]  [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(defaultValuesQuoted))  {  arguments.previous();  break;  }  [CE]  cannot  find  symbol  defaultValuesQuoted  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(defaultValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(defaultValuesQuoted))  {  arguments.previous();  break;  }	  	non-compiled	[CE]  cannot  find  symbol  defaultValuesQuoted	1	None	add
57	[BUG]  [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
58	[BUG]  [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(defaultValues))  {  arguments.previous();  break;  }  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(defaultValues))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(defaultValues))  {  arguments.previous();  break;  }	  	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	1	None	add
59	[BUG]  [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }	  	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	1	None	add
60	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(ALLValuesQuoted))  {  [CE]  cannot  find  symbol  ALLValuesQuoted  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(ALLValuesQuoted))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(ALLValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  ALLValuesQuoted	11	None	replace
61	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
62	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.remove());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  commandLine.addValue(option,  arguments.remove());  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.remove());	      commandLine.addValue(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
63	[BUG]  [BUGGY]  commandLine.addValue(arguments.next());  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  commandLine.addValue(arguments.next());  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(arguments.next());	      commandLine.addValue(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
64	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine  +  1);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine  +  1);  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(commandLine  +  1);	      CommandLine    commandLine    =    resources.get(commandLine);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
65	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  arguments.previous();  break;  }	      if(commandLine.looksLikeOption(allValuesQuoted))    {    while(arguments.hasNext()    &&    (argumentCount    <    maximum))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
66	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
67	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
68	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  	non-compiled	[CE]  'else'  without  'if'	10	None	add
69	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  	non-compiled	[CE]  'else'  without  'if'	10	None	add
70	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)	  	non-compiled	[CE]  ')'  expected	10	None	add
71	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuo  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuo  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuo	  	non-compiled	[CE]  ')'  expected	10	None	add
72	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted	  	non-compiled	[CE]  ')'  expected	10	None	add
73	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(option);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(option);  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(option);	      CommandLine    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
74	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  initialSplit)  {  commandLine.previous();  break;  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  while(arguments.hasNext()  &&  initialSplit)  {  commandLine.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&  initialSplit)  {  commandLine.previous();  break;  }	      if(commandLine.looksLikeOption(allValuesQuoted))    {    while(arguments.hasNext()    &&    initialSplit)    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
75	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  initialSplit)  {  commands.previous();  break;  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  while(arguments.hasNext()  &&  initialSplit)  {  commands.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&  initialSplit)  {  commands.previous();  break;  }	      if(commandLine.looksLikeOption(allValuesQuoted))    {    while(arguments.hasNext()    &&    initialSplit)    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
76	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.createCommandLine();  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  option.createCommandLine();  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  option.createCommandLine();	      CommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
77	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.findCommandLine();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  option.findCommandLine();  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  option.findCommandLine();	      CommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
78	[BUG]  [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximum)  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(arguments.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximum)  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
79	[BUG]  [BUGGY]  else  if(parameters.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  parameters  [FE]            ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(parameters.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximum)  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(parameters.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximum)  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  parameters	17	None	replace
80	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  arguments.previous())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  arguments.previous())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  arguments.previous())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.previous())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	9	None	replace
81	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  argumentCount.previous())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  argumentCount.previous())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)&&  argumentCount.previous())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	9	None	replace
82	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {	  	non-compiled	[CE]  'else'  without  'if'	10	None	add
83	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
84	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.next());  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.next());  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(arguments.next());	      if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
85	[BUG]  [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
86	[BUG]  [BUGGY]  while(commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  while(commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }	      if(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
87	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(option,  arguments.next()))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  if(commandLine.looksLikeOption(option,  arguments.next()))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine.looksLikeOption(option,  arguments.next()))  {  arguments.previous();  break;  }	      if(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
88	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(option,  argumentCount))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  if(commandLine.looksLikeOption(option,  argumentCount))  {  arguments.previous();  break;  }  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine.looksLikeOption(option,  argumentCount))  {  arguments.previous();  break;  }	      if(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
89	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.size()  -  1);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.size()  -  1);  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(arguments.size()  -  1);	      CommandLine    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
90	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.size());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.size());  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getArgumentLine(arguments.size());	      CommandLine    commandLine    =    options.getArgumentLine();    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
91	[BUG]  [BUGGY]  CommandLine  commandLine  =  arguments.get(initialSplit);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  CommandLine  commandLine  =  arguments.get(initialSplit);  [BUGGY]    else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  arguments.get(initialSplit);	      if(commandLine.looksLikeOption(allValuesQuoted))    {    while(arguments.hasNext()    &&    initialSplit)    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
92	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
93	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	8	1	replace
94	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
95	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argument.hasNext())  {  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argument.hasNext())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argument.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
96	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(allValuesQUoted)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }      [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(allValuesQUoted)&&  arguments.hasNext())  {  [BUGGY]    arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(allValuesQUoted)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
