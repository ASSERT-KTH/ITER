bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  if(argumentCount  >  1)  {  ++argumentCount;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  if(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  if(argumentCount  >  1)  {  ++argumentCount;  }	  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    If(argumentCount    >    argumentCount)    {    ++argumentCount;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
2	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  if(argumentCount  >  2)  {  ++argumentCount;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  if(argumentCount  >  2)  {  ++argumentCount;  }	  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    If(argumentCount    >    argumentCount)    {    ++argumentCount;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
3	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }	  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    If(argumentCount    >    argumentCount)    {    ++argumentCount;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
4	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	29	1	add
5	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	29	1	add
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	29	1	add
7	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	29	1	add
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	29	1	add
9	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	29	1	add
10	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	29	1	add
11	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	29	1	add
12	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	29	1	add
13	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	29	1	add
14	[BUG]  [BUGGY]  Arguments  arguments  =  option.getArgumentCount()  -  1;  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Arguments  arguments  =  option.getArgumentCount()  -  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Arguments  arguments  =  option.getArgumentCount()  -  1;	  Arguments    arguments    =    options.getArgumentCount()    -    1;    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
15	[BUG]  [BUGGY]  Arguments  argument  =  options.getArgumentCount()  -  1;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Arguments  argument  =  options.getArgumentCount()  -  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Arguments  argument  =  options.getArgumentCount()  -  1;	  Arguments    arguments    =    options.getArgumentCount()    -    1;    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
16	[BUG]  [BUGGY]  Argument  argument  =  arguments.getArgument(option.nextToken());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  arguments.getArgument(option.nextToken());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  arguments.getArgument(option.nextToken());	  Argument    argument    =    options.getArgument(arguments.nextToken());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
17	[BUG]  [BUGGY]  Argument  argument  =  arguments.getArgument(arguments.nextToken());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  arguments.getArgument(arguments.nextToken());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  arguments.getArgument(arguments.nextToken());	  Argument    argument    =    options.getArgument(arguments.nextToken());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
18	[BUG]  [BUGGY]  ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  ArgumentCount  <  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  <  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  <  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  warnings.add(token);  [CE]  cannot  find  symbol  token  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  warnings.add(token);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	warnings.add(token);	  warnings.add(option);    	non-compiled	[CE]  cannot  find  symbol  token	104	None	replace
22	[BUG]  [BUGGY]  commands.add(option);  [CE]  cannot  find  symbol  commands  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  commands.add(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	commands.add(option);	  warnings.add(option);    	non-compiled	[CE]  cannot  find  symbol  commands	104	None	replace
23	[BUG]  [BUGGY]  advocates.add(option);  [CE]  cannot  find  symbol  advocates  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  advocates.add(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	advocates.add(option);	  warnings.add(option);    	non-compiled	[CE]  cannot  find  symbol  advocates	104	None	replace
24	[BUG]  [BUGGY]  Argument  argument  =  resources.getArgument(option);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  resources.getArgument(option);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  resources.getArgument(option);	  Argument    argument    =    options.getArgument(option);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
25	[BUG]  [BUGGY]  Argument  argument  =  arguments.getArgument(option);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  arguments.getArgument(option);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  arguments.getArgument(option);	  Argument    argument    =    options.getArgument(option);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
26	[BUG]  [BUGGY]  Argument  argument  =  values.getArgument(option);  [CE]  cannot  find  symbol  values  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  values.getArgument(option);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  values.getArgument(option);	  Argument    argument    =    options.getArgument(option);    	non-compiled	[CE]  cannot  find  symbol  values	40	None	replace
27	[BUG]  [BUGGY]  Argument  arguments  =  options.getArgumentCount()  -  1;  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  arguments  =  options.getArgumentCount()  -  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  arguments  =  options.getArgumentCount()  -  1;	  Argument    arguments    =    options.getArgumentCount();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	110	None	replace
28	[BUG]  [BUGGY]  Argument  arguments  =  options.getArgumentCount()  +  1;  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  arguments  =  options.getArgumentCount()  +  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  arguments  =  options.getArgumentCount()  +  1;	  Argument    arguments    =    options.getArgumentCount();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	110	None	replace
29	[BUG]  [BUGGY]  Argument  arguments  =  options.getArgumentCount()  -  2;  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  arguments  =  options.getArgumentCount()  -  2;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  arguments  =  options.getArgumentCount()  -  2;	  Argument    arguments    =    options.getArgumentCount();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	110	None	replace
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        argumentCount)        {        ++argumentCount;        }        if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	51	1	add
31	[BUG]  [BUGGY]  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        argumentCount)        {        ++argumentCount;        }        if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	51	1	add
32	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        argumentCount)        {        ++argumentCount;        }        if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	51	1	add
33	[BUG]  [BUGGY]  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        argumentCount)        {        ++argumentCount;        }        if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	51	1	add
34	[BUG]  [BUGGY]  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argu  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argu  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        argumentCount)        {        ++argumentCount;        }        if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argu	  	non-compiled	[CE]  ';'  expected	51	None	add
35	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(option,  arguments.nextToken());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCommandLine.this.addValue(option,  arguments.nextToken());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(option,  arguments.nextToken());	  MutableCommandLine.this.addValue(option,    values.nextToken());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
36	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(option,  allValues.nextToken());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCommandLine.this.addValue(option,  allValues.nextToken());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(option,  allValues.nextToken());	  MutableCommandLine.this.addValue(option,    values.nextToken());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
37	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(option,  options.nextToken());  [CE]  cannot  find  symbol  options  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCommandLine.this.addValue(option,  options.nextToken());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(option,  options.nextToken());	  MutableCommandLine.this.addValue(option,    values.nextToken());    	non-compiled	[CE]  cannot  find  symbol  options	85	None	replace
38	[BUG]  [BUGGY]  Argument  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  parameters.nextToken());  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  parameters.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  parameters.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    parameters.nextToken());    }    	non-compiled	[CE]  ';'  expected	80	None	replace
39	[BUG]  [BUGGY]  arguments.size()  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  parameters.nextToken());  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.size()  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  parameters.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.size()  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  parameters.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    parameters.nextToken());    }    	non-compiled	[CE]  not  a  statement	80	None	replace
40	[BUG]  [BUGGY]  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  parameters.nextToken());  }  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  parameters.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  parameters.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    parameters.nextToken());    }    	non-compiled	[CE]  not  a  statement	80	None	replace
41	[BUG]  [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(option,  arguments);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(option,  arguments);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  getArgumentImpl(option,  arguments);	  ArgumentImpl    argument    =    getArgumentImpl(option);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
42	[BUG]  [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(arguments,  option);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(arguments,  option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  getArgumentImpl(arguments,  option);	  ArgumentImpl    argument    =    getArgumentImpl(option);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
43	[BUG]  [BUGGY]  String  argumentCount  =  arguments.get(0).toString()  +  1;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  arguments.get(0).toString()  +  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  arguments.get(0).toString()  +  1;	  String    argumentCount    =    arguments.get(0).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	48	None	replace
44	[BUG]  [BUGGY]  String  argumentCount  =  arguments.get(0).toString()  +  2;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  arguments.get(0).toString()  +  2;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  arguments.get(0).toString()  +  2;	  String    argumentCount    =    arguments.get(0).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	48	None	replace
45	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	92	1	add
46	[BUG]  [BUGGY]  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	92	1	add
47	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	92	1	add
48	[BUG]  [BUGGY]  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	92	1	add
49	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	92	1	add
50	[BUG]  [BUGGY]  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	92	1	add
51	[BUG]  [BUGGY]  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >>  2)  {  ++argumentCount;  }  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >>  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  >>  2)  {  ++argumentCount;  }	  	non-compiled	[CE]  incompatible  types	92	None	add
52	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(option,  arguments,  token);  [CE]  cannot  find  symbol  token  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCommandLine.this.addValue(option,  arguments,  token);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(option,  arguments,  token);	  MutableCommandLine.this.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol  token	84	None	replace
53	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(option,  arguments,  allValues);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCommandLine.this.addValue(option,  arguments,  allValues);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(option,  arguments,  allValues);	  MutableCommandLine.this.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
54	[BUG]  [BUGGY]  argumentCount  =  token.nextToken();  [CE]  cannot  find  symbol  token  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  =  token.nextToken();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  =  token.nextToken();	  argumentCount    =    arguments.nextToken();    	non-compiled	[CE]  cannot  find  symbol  token	103	None	replace
55	[BUG]  [BUGGY]  arguments.nextToken();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.nextToken();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.nextToken();	  argumentCount    =    arguments.nextToken();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
56	[BUG]  [BUGGY]  argumentCount  =  options.nextToken();  [CE]  cannot  find  symbol  options  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  =  options.nextToken();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  =  options.nextToken();	  argumentCount    =    arguments.nextToken();    	non-compiled	[CE]  cannot  find  symbol  options	103	None	replace
57	[BUG]  [BUGGY]  ArgumentImpl  argument  =  options.getArgumentImpl();  [CE]  cannot  find  symbol  options  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  options.getArgumentImpl();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  options.getArgumentImpl();	  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=    2)    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol  options	61	None	replace
58	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
59	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
60	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
61	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
62	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
63	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
64	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
65	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
66	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
67	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
68	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  if(argumentCount  ==  2)  {  ++argumentCount;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  if(argumentCount  ==  2)  {  ++argumentCount;  }	  if(argumentCount    ==    2)    {    ++argumentCount;    }    If(argumentCount    ==    2)    {    ++argumentCount;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
69	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  if(argumentCount  ==  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  if(argumentCount  ==  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  if(argumentCount  ==  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(argumentCount    ==    2)    {    ++argumentCount;    }    If(argumentCount    ==    2)    {    ++argumentCount;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
70	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  if(argumentCount  ==  1)  {  ++argumentCount;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  if(argumentCount  ==  1)  {  ++argumentCount;  }	  if(argumentCount    ==    2)    {    ++argumentCount;    }    If(argumentCount    ==    2)    {    ++argumentCount;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
71	[BUG]  [BUGGY]  ArgumentImpl  argument  =  resources.get(argumentCount);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  resources.get(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  resources.get(argumentCount);	  ArgumentImpl    argument    =    options.get(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
72	[BUG]  [BUGGY]  ArgumentImpl  argument  =  options.get(argumentCount  -  1);  [CE]  cannot  find  symbol  options  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  options.get(argumentCount  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  options.get(argumentCount  -  1);	  ArgumentImpl    argument    =    options.get(argumentCount);    	non-compiled	[CE]  cannot  find  symbol  options	57	None	replace
73	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	34	1	add
74	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	34	1	add
75	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	34	1	add
76	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	34	1	add
77	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  If(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  If(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    If(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	non-compiled	[CE]  ';'  expected	34	None	add
78	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  method.addValue(option,  allValues);  }  [CE]  cannot  find  symbol  method  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  method.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  method.addValue(option,  allValues);  }	  	non-compiled	[CE]  cannot  find  symbol  method	34	None	add
79	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  ALLValues);  }  [CE]  cannot  find  symbol  ALLValues  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  ALLValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  ALLValues);  }	  	non-compiled	[CE]  cannot  find  symbol  ALLValues	34	None	add
80	[BUG]  [BUGGY]  String  argumentCount  =  options.getArgumentCount()  -  1;  arguments.add(values.nextToken());  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  options.getArgumentCount()  -  1;  arguments.add(values.nextToken());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.getArgumentCount()  -  1;  arguments.add(values.nextToken());	  String    argumentCount    =    options.getArgumentCount();    arguments.add(values.nextToken());    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	111	None	replace
81	[BUG]  [BUGGY]  arguments.add(values.nextToken());  [CE]  cannot  find  symbol  values  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(values.nextToken());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(values.nextToken());	  String    argumentCount    =    options.getArgumentCount();    arguments.add(values.nextToken());    	non-compiled	[CE]  cannot  find  symbol  values	111	None	replace
82	[BUG]  [BUGGY]  String  argumentCount  =  options.getArgumentCount();  arguments.add(argumentCount,  values.nextToken());  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  options.getArgumentCount();  arguments.add(argumentCount,  values.nextToken());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.getArgumentCount();  arguments.add(argumentCount,  values.nextToken());	  String    argumentCount    =    options.getArgumentCount();    arguments.add(values.nextToken());    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	111	None	replace
83	[BUG]  [BUGGY]  String  argumentCount  =  options.getArgumentCount()  +  1;  arguments.add(values.nextToken());  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  options.getArgumentCount()  +  1;  arguments.add(values.nextToken());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.getArgumentCount()  +  1;  arguments.add(values.nextToken());	  String    argumentCount    =    options.getArgumentCount();    arguments.add(values.nextToken());    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	111	None	replace
84	[BUG]  [BUGGY]  arguments.size()  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.size()  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.size()  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    options.nextToken());    }    	non-compiled	[CE]  not  a  statement	78	None	replace
85	[BUG]  [BUGGY]  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    options.nextToken());    }    	non-compiled	[CE]  not  a  statement	78	None	replace
86	[BUG]  [BUGGY]  Argument  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    options.nextToken());    }    	non-compiled	[CE]  ';'  expected	78	None	replace
87	[BUG]  [BUGGY]  ArgumentImpl  arguments  =  options.getValues();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  arguments  =  options.getValues();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  arguments  =  options.getValues();	  if(argumentCount    ==    1)    {    ++argumentCount;    }    If(argumentCount    ==    1)    {    ++argumentCount;    }    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	83	None	replace
88	[BUG]  [BUGGY]  ArgumentImpl  arguments  =  options.getArgumentImpl();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  arguments  =  options.getArgumentImpl();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  arguments  =  options.getArgumentImpl();	  if(argumentCount    ==    1)    {    ++argumentCount;    }    If(argumentCount    ==    1)    {    ++argumentCount;    }    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	83	None	replace
89	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  if(argumentCount  >  0)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    >    0)    {    ++argumentCount;    }    if(argumentCount  >  0)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
90	[BUG]  [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  if(argumentCount  >  0)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  if(argumentCount  >  0)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    0)    {    ++argumentCount;    }    if(argumentCount  >  0)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
91	[BUG]  [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  If(argumentCount  >  0)  {  ++argumentCount;  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  If(argumentCount  >  0)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    0)    {    ++argumentCount;    }    If(argumentCount  >  0)  {  ++argumentCount;  }	  	non-compiled	[CE]  ';'  expected	14	None	add
92	[BUG]  [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  int  argumentCount  >  0)  {  ++argumentCount;  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  int  argumentCount  >  0)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    0)    {    ++argumentCount;    }    int  argumentCount  >  0)  {  ++argumentCount;  }	  	non-compiled	[CE]  ';'  expected	14	None	add
93	[BUG]  [BUGGY]  if(arguments.size()  >  argumentCount.size())  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(arguments.size()  >  argumentCount.size())  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(arguments.size()  >  argumentCount.size())  {  ++argumentCount;  }	  if(arguments.size()    >    arguments.size())    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
94	[BUG]  [BUGGY]  if(arguments.size()  <  arguments.size())  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(arguments.size()  <  arguments.size())  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(arguments.size()  <  arguments.size())  {  ++argumentCount;  }	  if(arguments.size()    >    arguments.size())    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
95	[BUG]  [BUGGY]  String  argumentCount  =  arguments.getArgumentCount()  +  1;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  arguments.getArgumentCount()  +  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  arguments.getArgumentCount()  +  1;	  String    argumentCount    =    arguments.getArgumentCount();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	46	None	replace
96	[BUG]  [BUGGY]  String  argumentCount  =  values.getArgumentCount();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  values.getArgumentCount();  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  values.getArgumentCount();	  String    argumentCount    =    arguments.getArgumentCount();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	46	None	replace
97	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  ==  2)  {  ++argumentCount;  }	  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount    ==    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	30	1	replace
98	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  ==  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  ==  2)  {  ++argumentCount;  }	  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount    ==    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	30	1	replace
99	[BUG]  [BUGGY]  String  argumentCount  =  values.get(argumentCount);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  values.get(argumentCount);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  values.get(argumentCount);	  String    argumentCount    =    arguments.get(argumentCount);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	19	None	replace
100	[BUG]  [BUGGY]  String  argumentCount  =  arguments.get(id);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  arguments.get(id);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  arguments.get(id);	  String    argumentCount    =    arguments.get(argumentCount);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	19	None	replace
101	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	81	1	add
102	[BUG]  [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	81	1	add
103	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	81	1	add
104	[BUG]  [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	81	1	add
105	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	81	1	add
106	[BUG]  [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	81	1	add
107	[BUG]  [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >>  1)  {  ++argumentCount;  }  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >>  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  >>  1)  {  ++argumentCount;  }	  	non-compiled	[CE]  incompatible  types	81	None	add
108	[BUG]  [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  [Delete]  1)  {  ++argumentCount;  }  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  [Delete]  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  [Delete]  1)  {  ++argumentCount;  }	  	non-compiled	[CE]  ')'  expected	81	None	add
109	[BUG]  [BUGGY]  String  argumentCount  =  options.get(option);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  options.get(option);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.get(option);	  String    argumentCount    =    arguments.get(option);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	17	None	replace
110	[BUG]  [BUGGY]  String  argumentCount  =  values.get(option);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  values.get(option);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  values.get(option);	  String    argumentCount    =    arguments.get(option);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	17	None	replace
111	[BUG]  [BUGGY]  String  argumentCount  =  arguments.get(option.toString());  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  arguments.get(option.toString());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  arguments.get(option.toString());	  String    argumentCount    =    arguments.get(option);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	17	None	replace
112	[BUG]  [BUGGY]  String  argumentCount  =  arguments.get(option,  values.nextToken());  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  arguments.get(option,  values.nextToken());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  arguments.get(option,  values.nextToken());	  String    argumentCount    =    arguments.get(option);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	17	None	replace
113	[BUG]  [BUGGY]  validateValues(option,  allValues);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  validateValues(option,  allValues);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	validateValues(option,  allValues);	  validateValues(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
114	[BUG]  [BUGGY]  validateValues(option,  arguments,  allValues);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  validateValues(option,  arguments,  allValues);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	validateValues(option,  arguments,  allValues);	  validateValues(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
115	[BUG]  [BUGGY]  validateValues(option,  arguments,  argumentCount);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  validateValues(option,  arguments,  argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	validateValues(option,  arguments,  argumentCount);	  validateValues(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
116	[BUG]  [BUGGY]  validateValues(option,  arguments,  values);  [CE]  cannot  find  symbol  values  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  validateValues(option,  arguments,  values);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	validateValues(option,  arguments,  values);	  validateValues(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol  values	105	None	replace
117	[BUG]  [BUGGY]  Option  token  =  option.getValue();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Option  token  =  option.getValue();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Option  token  =  option.getValue();	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
118	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    >    2)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	98	1	add
119	[BUG]  [BUGGY]  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    2)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	98	1	add
120	[BUG]  [BUGGY]  if(argumentCount  >  2)  {  ++argumentCount;  }  If(argumentCount  >  2)  {  ++argumentCount;  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  2)  {  ++argumentCount;  }  If(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    2)    {    ++argumentCount;    }    If(argumentCount  >  2)  {  ++argumentCount;  }	  	non-compiled	[CE]  ';'  expected	98	None	add
121	[BUG]  [BUGGY]  if(argumentCount  >  2)  {  ++argumentCount;  }  int  argumentCount  >  2)  {  ++argumentCount;  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  2)  {  ++argumentCount;  }  int  argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    2)    {    ++argumentCount;    }    int  argumentCount  >  2)  {  ++argumentCount;  }	  	non-compiled	[CE]  ';'  expected	98	None	add
122	[BUG]  [BUGGY]  Argument  argument  =  resources.getArgumentValue(option);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  resources.getArgumentValue(option);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  resources.getArgumentValue(option);	  Argument    argument    =    options.getArgumentValue(option);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
123	[BUG]  [BUGGY]  Argument  argument  =  arguments.getArgumentValue(option);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  arguments.getArgumentValue(option);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  arguments.getArgumentValue(option);	  Argument    argument    =    options.getArgumentValue(option);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
124	[BUG]  [BUGGY]  Argument  argument  =  values.getArgumentValue(option);  [CE]  cannot  find  symbol  values  [FE]                        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  values.getArgumentValue(option);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  values.getArgumentValue(option);	  Argument    argument    =    options.getArgumentValue(option);    	non-compiled	[CE]  cannot  find  symbol  values	97	None	replace
125	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,	  	non-compiled	[CE]  ')'  expected	70	None	add
126	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }	  	compilable	  [FE]  ComparisonFailure  	70	1	add
127	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }	  	compilable	  [FE]  ComparisonFailure  	70	1	add
128	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }	  	compilable	  [FE]  ComparisonFailure  	70	1	add
129	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }	  	compilable	  [FE]  ComparisonFailure  	70	1	add
130	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,	  	non-compiled	[CE]  ')'  expected	70	None	add
131	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  argumentCount);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  argumentCount);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  argumentCount);  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	70	None	add
132	[BUG]  [BUGGY]  arguments.add(option.getArgumentCount());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(option.getArgumentCount());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(option.getArgumentCount());	  String    argumentCount    =    options.getArgumentCount()    -    1;    arguments.add(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
133	[BUG]  [BUGGY]  Argument  arguments.add(option.getArgumentCount());  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  arguments.add(option.getArgumentCount());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  arguments.add(option.getArgumentCount());	  String    argumentCount    =    options.getArgumentCount()    -    1;    arguments.add(argumentCount);    	non-compiled	[CE]  ';'  expected	76	None	replace
134	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  >  1)  {  ++argumentCount;  }  else  if(argumentCount  >  2)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	5	1	replace
135	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  if(argumentCount  >  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  1)  {  ++argumentCount;  }  else  if(argumentCount  >  2)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	5	1	replace
136	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  if(argumentCount  <  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  >  1)  {  ++argumentCount;  }  else  if(argumentCount  <  2)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	5	1	replace
137	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  if(argumentCount  <  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  if(argumentCount  <  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  1)  {  ++argumentCount;  }  else  if(argumentCount  <  2)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	5	1	replace
138	[BUG]  [BUGGY]  Argument  argument  =  arguments.getArgumentCount(argumentCount);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  arguments.getArgumentCount(argumentCount);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  arguments.getArgumentCount(argumentCount);	  Argument    argument    =    arguments.getArgument(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
139	[BUG]  [BUGGY]  if(argumentCount  >  allValues.size())  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  allValues.size())  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  allValues.size())  {  ++argumentCount;  }	  if(argumentCount    >    options.size())    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
140	[BUG]  [BUGGY]  ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  arguments.nextToken());  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  arguments.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  arguments.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    arguments.nextToken());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
141	[BUG]  [BUGGY]  ArgumentCount  <  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  arguments.nextToken());  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  <  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  arguments.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  <  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  arguments.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    arguments.nextToken());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
142	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(argumentCount);  arguments.add(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	arguments.add(argumentCount);    arguments.add(argumentCount);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
143	[BUG]  [BUGGY]  arguments.add(argumentCount);  arguments.add(argumentCount);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(argumentCount);  arguments.add(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(argumentCount);    arguments.add(argumentCount);	  	compilable	  [FE]  ComparisonFailure  	68	1	add
144	[BUG]  [BUGGY]  arguments.add(argumentCount);  Arguments.add(argumentCount);  [CE]  cannot  find  symbol  Arguments  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(argumentCount);  Arguments.add(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(argumentCount);    Arguments.add(argumentCount);	  	non-compiled	[CE]  cannot  find  symbol  Arguments	68	None	add
145	[BUG]  [BUGGY]  arguments.add(argumentCount);  Argument  argumentCount  =  options.getArgumentCount();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(argumentCount);  Argument  argumentCount  =  options.getArgumentCount();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(argumentCount);    Argument  argumentCount  =  options.getArgumentCount();	  	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	68	None	add
146	[BUG]  [BUGGY]  arguments.add(argumentCount);  Argument  argumentCount  =  options.getArgumentCount();  arguments.add(argumentCount);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(argumentCount);  Argument  argumentCount  =  options.getArgumentCount();  arguments.add(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(argumentCount);    Argument  argumentCount  =  options.getArgumentCount();  arguments.add(argumentCount);	  	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	68	None	add
147	[BUG]  [BUGGY]  arguments.add(argumentCount);  Argument  argumentCount  =  arguments.get(argumentCount);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(argumentCount);  Argument  argumentCount  =  arguments.get(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(argumentCount);    Argument  argumentCount  =  arguments.get(argumentCount);	  	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	68	None	add
148	[BUG]  [BUGGY]  Argument  argument  =  options.getArgumentName(argumentCount);  [CE]  cannot  find  symbol  options  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  options.getArgumentName(argumentCount);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgumentName(argumentCount);	  Argument    argument    =    options.getArgument(argumentName);    	non-compiled	[CE]  cannot  find  symbol  options	42	None	replace
149	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
150	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
151	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
152	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
153	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
154	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
155	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >>  1)  {  ++argumentCount;  }  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >>  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >>  1)  {  ++argumentCount;  }	  	non-compiled	[CE]  incompatible  types	25	None	add
156	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >>  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >>  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >>  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }	  	non-compiled	[CE]  incompatible  types	25	None	add
157	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
158	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
159	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
160	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
161	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
162	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
163	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
164	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
165	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
166	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
167	[BUG]  [BUGGY]  arguments.add(token);  [CE]  cannot  find  symbol  token  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(token);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(token);	  arguments.add(option);    	non-compiled	[CE]  cannot  find  symbol  token	107	None	replace
168	[BUG]  [BUGGY]  ArgumentImpl  arguments  =  option.getArgumentImpl();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  arguments  =  option.getArgumentImpl();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  arguments  =  option.getArgumentImpl();	  arguments.add(option);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	107	None	replace
169	[BUG]  [BUGGY]  argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }	  argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  not  a  statement	102	None	replace
170	[BUG]  [BUGGY]  arguments.size()  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.size()  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.size()  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }	  argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  not  a  statement	102	None	replace
171	[BUG]  [BUGGY]  argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  not  a  statement	102	None	replace
172	[BUG]  [BUGGY]  argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.getToken());  }  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.getToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.getToken());  }	  argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  not  a  statement	102	None	replace
173	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
174	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
175	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
176	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
177	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
178	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
179	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
180	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
181	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argu  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argu  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argu	  	non-compiled	[CE]  ';'  expected	1	None	add
182	[BUG]  [BUGGY]  Context.checkState(argumentCount  >  1);  [CE]  cannot  find  symbol  Context  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Context.checkState(argumentCount  >  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Context.checkState(argumentCount  >  1);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    ALLValues);    }    	non-compiled	[CE]  cannot  find  symbol  Context	109	None	replace
183	[BUG]  [BUGGY]  validateValues();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  validateValues();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	validateValues();	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    ALLValues);    }    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
184	[BUG]  [BUGGY]  Argument  argumentCount  =  options.getArgumentCount()  -  1;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argumentCount  =  options.getArgumentCount()  -  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argumentCount  =  options.getArgumentCount()  -  1;	  Argument    argumentCount    =    options.getArgumentCount();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	12	None	replace
185	[BUG]  [BUGGY]  Argument  argumentCount  =  options.getArgumentCount()  +  1;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argumentCount  =  options.getArgumentCount()  +  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argumentCount  =  options.getArgumentCount()  +  1;	  Argument    argumentCount    =    options.getArgumentCount();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	12	None	replace
186	[BUG]  [BUGGY]  Argument  argumentCount  =  arguments.getArgumentCount();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argumentCount  =  arguments.getArgumentCount();  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argumentCount  =  arguments.getArgumentCount();	  Argument    argumentCount    =    options.getArgumentCount();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	12	None	replace
187	[BUG]  [BUGGY]  Argument  argumentCount  =  options.getArgumentCount()  -  2;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argumentCount  =  options.getArgumentCount()  -  2;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argumentCount  =  options.getArgumentCount()  -  2;	  Argument    argumentCount    =    options.getArgumentCount();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	12	None	replace
188	[BUG]  [BUGGY]  String  argumentCount  =  resources.get(option);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  resources.get(option);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  resources.get(option);	  String    argumentCount    =    resources.get(token);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	94	None	replace
189	[BUG]  [BUGGY]  String  argumentCount  =  resources.get(argumentCount);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  resources.get(argumentCount);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  resources.get(argumentCount);	  String    argumentCount    =    resources.get(token);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	94	None	replace
190	[BUG]  [BUGGY]  String  argumentCount  =  resources.get(args.size()  -  1);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  resources.get(args.size()  -  1);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  resources.get(args.size()  -  1);	  String    argumentCount    =    resources.get(token);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	94	None	replace
191	[BUG]  [BUGGY]  String  argumentCount  =  resources.get(argument);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  resources.get(argument);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  resources.get(argument);	  String    argumentCount    =    resources.get(token);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	94	None	replace
192	[BUG]  [BUGGY]  validateToken(token);  [CE]  cannot  find  symbol  token  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  validateToken(token);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	validateToken(token);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    If(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol  token	36	None	replace
193	[BUG]  [BUGGY]  validate(token);  [CE]  cannot  find  symbol  token  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  validate(token);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	validate(token);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    If(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol  token	36	None	replace
194	[BUG]  [BUGGY]  commandLine.addValue(option,  allValues.nextToken());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  commandLine.addValue(option,  allValues.nextToken());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	commandLine.addValue(option,  allValues.nextToken());	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
195	[BUG]  [BUGGY]  validateValues(option,  arguments.nextToken());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  validateValues(option,  arguments.nextToken());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	validateValues(option,  arguments.nextToken());	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
196	[BUG]  [BUGGY]  String  token  =  options.getValue(argumentCount);  [CE]  cannot  find  symbol  options  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  token  =  options.getValue(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  token  =  options.getValue(argumentCount);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  cannot  find  symbol  options	100	None	replace
197	[BUG]  [BUGGY]  String  argumentCount  =  options.getArgumentCount(1);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  options.getArgumentCount(1);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.getArgumentCount(1);	  String    argumentCount    =    options.getArgumentCount(0);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	47	None	replace
198	[BUG]  [BUGGY]  String  argumentCount  =  options.getArgumentCount(0)  +  1;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  options.getArgumentCount(0)  +  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.getArgumentCount(0)  +  1;	  String    argumentCount    =    options.getArgumentCount(0);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	47	None	replace
199	[BUG]  [BUGGY]  String  argumentCount  =  options.getArgumentCount(arguments.size()  -  1);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  options.getArgumentCount(arguments.size()  -  1);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.getArgumentCount(arguments.size()  -  1);	  String    argumentCount    =    options.getArgumentCount(0);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	47	None	replace
200	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(option);  arguments.add(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	arguments.add(option);    arguments.add(option);	  	compilable	  [FE]  ComparisonFailure  	106	1	add
201	[BUG]  [BUGGY]  arguments.add(option);  arguments.add(option);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(option);  arguments.add(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(option);    arguments.add(option);	  	compilable	  [FE]  ComparisonFailure  	106	1	add
202	[BUG]  [BUGGY]  arguments.add(option);  ArgumentImpl  argument  =  options.get(option);  [CE]  cannot  find  symbol  options  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(option);  ArgumentImpl  argument  =  options.get(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(option);    ArgumentImpl  argument  =  options.get(option);	  	non-compiled	[CE]  cannot  find  symbol  options	106	None	add
203	[BUG]  [BUGGY]  arguments.add(option);  ArgumentImpl  commandLine  =  options.get(option);  [CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(option);  ArgumentImpl  commandLine  =  options.get(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(option);    ArgumentImpl  commandLine  =  options.get(option);	  	non-compiled	[CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	106	None	add
204	[BUG]  [BUGGY]  arguments.add(option);  ArgumentImpl  argument  =  options.get(token);  [CE]  cannot  find  symbol  token  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(option);  ArgumentImpl  argument  =  options.get(token);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(option);    ArgumentImpl  argument  =  options.get(token);	  	non-compiled	[CE]  cannot  find  symbol  token	106	None	add
205	[BUG]  [BUGGY]  arguments.add(option);  ArgumentImpl  commandLine  =  options.get(token);  [CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(option);  ArgumentImpl  commandLine  =  options.get(token);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(option);    ArgumentImpl  commandLine  =  options.get(token);	  	non-compiled	[CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	106	None	add
206	[BUG]  [BUGGY]  arguments.size()  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  keys.nextToken());  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.size()  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  keys.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.size()  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  keys.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    keys.nextToken());    }    	non-compiled	[CE]  not  a  statement	79	None	replace
207	[BUG]  [BUGGY]  Argument  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  keys.nextToken());  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  keys.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  keys.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    keys.nextToken());    }    	non-compiled	[CE]  ';'  expected	79	None	replace
208	[BUG]  [BUGGY]  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  keys.nextToken());  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  keys.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  keys.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    keys.nextToken());    }    	non-compiled	[CE]  not  a  statement	79	None	replace
209	[BUG]  [BUGGY]  String  argumentCount  =  arguments.get(option).toString();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  arguments.get(option).toString();  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  arguments.get(option).toString();	  String    argumentCount    =    values.get(option).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	112	None	replace
210	[BUG]  [BUGGY]  String  argumentCount  =  values.get(option).toString()  +  1;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  values.get(option).toString()  +  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  values.get(option).toString()  +  1;	  String    argumentCount    =    values.get(option).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	112	None	replace
211	[BUG]  [BUGGY]  ArgumentImpl  argument  =  resources.get(argumentCount  -  1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  resources.get(argumentCount  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  resources.get(argumentCount  -  1);	  ArgumentImpl    argument    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
212	[BUG]  [BUGGY]  ArgumentImpl  argument  =  commands.get(argumentCount  -  1);  [CE]  cannot  find  symbol  commands  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  commands.get(argumentCount  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  commands.get(argumentCount  -  1);	  ArgumentImpl    argument    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  cannot  find  symbol  commands	7	None	replace
213	[BUG]  [BUGGY]  Argument  argument  =  options.getArgument(option.nextToken());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  options.getArgument(option.nextToken());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgument(option.nextToken());	  Argument    argument    =    options.getArgument(values.nextToken());    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
214	[BUG]  [BUGGY]  Argument  argument  =  arguments.getArgument(values.nextToken());  [CE]  cannot  find  symbol  values  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  arguments.getArgument(values.nextToken());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  arguments.getArgument(values.nextToken());	  Argument    argument    =    options.getArgument(values.nextToken());    	non-compiled	[CE]  cannot  find  symbol  values	96	None	replace
215	[BUG]  [BUGGY]  Argument  argument  =  resources.getArgument(values.nextToken());  [CE]  cannot  find  symbol  values  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  resources.getArgument(values.nextToken());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  resources.getArgument(values.nextToken());	  Argument    argument    =    options.getArgument(values.nextToken());    	non-compiled	[CE]  cannot  find  symbol  values	96	None	replace
216	[BUG]  [BUGGY]  ArgumentImpl  argument  =  arguments.get(argumentCount  +  1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  arguments.get(argumentCount  +  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  arguments.get(argumentCount  +  1);	  ArgumentImpl    argument    =    arguments.get(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
217	[BUG]  [BUGGY]  ArgumentCount  <  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  <  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  <  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
218	[BUG]  [BUGGY]  ArgumentCount  <  =  arguments.size())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  <  =  arguments.size())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  <  =  arguments.size())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
219	[BUG]  [BUGGY]  String  argumentCount  =  options.getArgumentCount()  /  1;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  options.getArgumentCount()  /  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.getArgumentCount()  /  1;	  String    argumentCount    =    options.getArgumentCount()    +    1;    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	45	None	replace
220	[BUG]  [BUGGY]  Argument  argument  =  resources.getArgument(arguments);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  resources.getArgument(arguments);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  resources.getArgument(arguments);	  Argument    argument    =    options.getArgument(arguments);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
221	[BUG]  [BUGGY]  Argument  argument  =  arguments.getArgument(arguments);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  arguments.getArgument(arguments);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  arguments.getArgument(arguments);	  Argument    argument    =    options.getArgument(arguments);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
222	[BUG]  [BUGGY]  Argument  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  ';'  expected	77	None	replace
223	[BUG]  [BUGGY]  arguments.size()  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.size()  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.size()  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	77	None	replace
224	[BUG]  [BUGGY]  arguments.size()  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.size()  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.size()  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	77	None	replace
225	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.size()  >  1?  arguments.intValue()  :  0;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Integer  argumentCount  =  arguments.size()  >  1?  arguments.intValue()  :  0;  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Integer  argumentCount  =  arguments.size()  >  1?  arguments.intValue()  :  0;	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(argument,    0,    arguments,    0,    argumentCount);    }    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	72	None	replace
226	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.size()  >  1?  arguments.get(0):  arguments.get(1);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Integer  argumentCount  =  arguments.size()  >  1?  arguments.get(0):  arguments.get(1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Integer  argumentCount  =  arguments.size()  >  1?  arguments.get(0):  arguments.get(1);	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(argument,    0,    arguments,    0,    argumentCount);    }    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	72	None	replace
227	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.size()  >  1?  arguments.get(argumentCount):  0;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Integer  argumentCount  =  arguments.size()  >  1?  arguments.get(argumentCount):  0;  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Integer  argumentCount  =  arguments.size()  >  1?  arguments.get(argumentCount):  0;	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(argument,    0,    arguments,    0,    argumentCount);    }    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	72	None	replace
228	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.size()  >  1?  arguments.get(id):  0;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Integer  argumentCount  =  arguments.size()  >  1?  arguments.get(id):  0;  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Integer  argumentCount  =  arguments.size()  >  1?  arguments.get(id):  0;	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(argument,    0,    arguments,    0,    argumentCount);    }    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	72	None	replace
229	[BUG]  [BUGGY]  Argument  argument  =  arguments.getArgument(id);  [CE]  id  has  private  access  in  OptionImpl  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  arguments.getArgument(id);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  arguments.getArgument(id);	  Argument    argument    =    options.getArgument(id);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	13	None	replace
230	[BUG]  [BUGGY]  Context.checkState(argumentCount  ==  arguments.size());  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Context.checkState(argumentCount  ==  arguments.size());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Context.checkState(argumentCount  ==  arguments.size());	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
231	[BUG]  [BUGGY]  Context.checkState(argumentCount  ==  2);  [CE]  cannot  find  symbol  Context  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Context.checkState(argumentCount  ==  2);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Context.checkState(argumentCount  ==  2);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol  Context	35	None	replace
232	[BUG]  [BUGGY]  Context.checkState(argumentCount  ==  1);  [CE]  cannot  find  symbol  Context  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Context.checkState(argumentCount  ==  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Context.checkState(argumentCount  ==  1);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol  Context	35	None	replace
233	[BUG]  [BUGGY]  String  argumentCount  =  arguments.get(1).toString();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  arguments.get(1).toString();  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  arguments.get(1).toString();	  String    argumentCount    =    values.get(1).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	66	None	replace
234	[BUG]  [BUGGY]  String  argumentCount  =  values.get(1).toString()  +  1;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  values.get(1).toString()  +  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  values.get(1).toString()  +  1;	  String    argumentCount    =    values.get(1).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	66	None	replace
235	[BUG]  [BUGGY]  String  argumentCount  =  options.get(argumentCount);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  options.get(argumentCount);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.get(argumentCount);	  String    argumentCount    =    options.get(token);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	20	None	replace
236	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    2)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	4	1	add
237	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    2)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	4	1	add
238	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    2)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	4	1	add
239	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    2)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	4	1	add
240	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }  If(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }  If(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    2)    {    ++argumentCount;    }    If(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }	  	non-compiled	[CE]  ';'  expected	4	None	add
241	[BUG]  [BUGGY]  String  argumentCount  =  values.getArgumentCount()  -  1;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  values.getArgumentCount()  -  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  values.getArgumentCount()  -  1;	  String    argumentCount    =    arguments.getArgumentCount()    -    1;    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	65	None	replace
242	[BUG]  [BUGGY]  Arguments  arguments  =  resources.getArgumentCount()  -  1;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Arguments  arguments  =  resources.getArgumentCount()  -  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Arguments  arguments  =  resources.getArgumentCount()  -  1;	  Arguments    arguments    =    resources.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
243	[BUG]  [BUGGY]  Arguments  arguments  =  resources.getArgumentCount()  +  1;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Arguments  arguments  =  resources.getArgumentCount()  +  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Arguments  arguments  =  resources.getArgumentCount()  +  1;	  Arguments    arguments    =    resources.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
244	[BUG]  [BUGGY]  Context.checkState(argumentCount  >  1)  {  ++argumentCount;  }  else  {  methodLine.addValue(option,  allValues);  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Context.checkState(argumentCount  >  1)  {  ++argumentCount;  }  else  {  methodLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Context.checkState(argumentCount  >  1)  {  ++argumentCount;  }  else  {  methodLine.addValue(option,  allValues);  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    methodLine.addValue(option,    allValues);    }    	non-compiled	[CE]  ';'  expected	108	None	replace
245	[BUG]  [BUGGY]  Context.checkState(argumentCount  >  1  ||  argumentCount  >  1)  {  ++argumentCount;  }  else  {  methodLine.addValue(option,  allValues);  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Context.checkState(argumentCount  >  1  ||  argumentCount  >  1)  {  ++argumentCount;  }  else  {  methodLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Context.checkState(argumentCount  >  1  ||  argumentCount  >  1)  {  ++argumentCount;  }  else  {  methodLine.addValue(option,  allValues);  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    methodLine.addValue(option,    allValues);    }    	non-compiled	[CE]  ';'  expected	108	None	replace
246	[BUG]  [BUGGY]  Context.checkState(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Context.checkState(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Context.checkState(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    methodLine.addValue(option,    allValues);    }    	non-compiled	[CE]  ';'  expected	108	None	replace
247	[BUG]  [BUGGY]  Context.checkState(argumentCount  >  1)  {  argumentCount;  }  else  {  methodLine.addValue(option,  allValues);  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Context.checkState(argumentCount  >  1)  {  argumentCount;  }  else  {  methodLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Context.checkState(argumentCount  >  1)  {  argumentCount;  }  else  {  methodLine.addValue(option,  allValues);  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    methodLine.addValue(option,    allValues);    }    	non-compiled	[CE]  ';'  expected	108	None	replace
248	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  if(argumentCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  if(argumentCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  if(argumentCount  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    1)    {    ++argumentCount;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
249	[BUG]  [BUGGY]  ArgumentImpl  argument  =  resources.get(option);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  resources.get(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  resources.get(option);	  ArgumentImpl    argument    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
250	[BUG]  [BUGGY]  ArgumentImpl  argument  =  arguments.get(option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  arguments.get(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  arguments.get(option);	  ArgumentImpl    argument    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
251	[BUG]  [BUGGY]  ArgumentImpl  argument  =  options.get(token);  [CE]  cannot  find  symbol  token  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  options.get(token);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  options.get(token);	  ArgumentImpl    argument    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol  token	87	None	replace
252	[BUG]  [BUGGY]  String  argumentsCount  =  options.getArgumentCount();  [CE]  cannot  find  symbol  options  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentsCount  =  options.getArgumentCount();  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentsCount  =  options.getArgumentCount();	  String    argumentCount    =    options.getArgumentCount()    -    2;    	non-compiled	[CE]  cannot  find  symbol  options	73	None	replace
253	[BUG]  [BUGGY]  String  argumentCount  =  option.getArgumentCount();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  option.getArgumentCount();  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  option.getArgumentCount();	  String    argumentCount    =    options.getArgumentCount()    -    2;    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	73	None	replace
254	[BUG]  [BUGGY]  ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    options.nextToken());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
255	[BUG]  [BUGGY]  ArgumentCount  <  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  <  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  <  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    options.nextToken());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
256	[BUG]  [BUGGY]  ArgumentCount  <  =  arguments.size())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  <  =  arguments.size())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  <  =  arguments.size())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    options.nextToken());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
257	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  if(argumentCount  ==  1)  {  ++argumentCount;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  1)  {  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  1)  {  if(argumentCount  ==  1)  {  ++argumentCount;  }	  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount    >=    1)    {    ++argumentCount;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
258	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  if(argumentCount  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  1)  {  if(argumentCount  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  1)  {  if(argumentCount  ==  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount    >=    1)    {    ++argumentCount;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
259	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  if(argumentCount  >=  1)  {  ++argumentCount;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  1)  {  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  1)  {  if(argumentCount  >=  1)  {  ++argumentCount;  }	  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount    >=    1)    {    ++argumentCount;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
260	[BUG]  [BUGGY]  ArgumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }	  if(argumentCount    >    0)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	101	None	replace
261	[BUG]  [BUGGY]  ArgumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  if(argumentCount    >    0)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	101	None	replace
262	[BUG]  [BUGGY]  argumentCount  >  0  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  >  0  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  0  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  if(argumentCount    >    0)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	101	None	replace
263	[BUG]  [BUGGY]  ArgumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }	  if(argumentCount    >    0)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	101	None	replace
264	[BUG]  [BUGGY]  String  argumentCount  =  values.get(argument);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  values.get(argument);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  values.get(argument);	  String    argumentCount    =    values.get(token);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	18	None	replace
265	[BUG]  [BUGGY]  ArgumentImpl  argument  =  resources.getArgumentImpl(argumentCount);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  resources.getArgumentImpl(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  resources.getArgumentImpl(argumentCount);	  ArgumentImpl    argument    =    options.getArgumentImpl(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
266	[BUG]  [BUGGY]  ArgumentImpl  argument  =  arguments.getArgumentImpl(argumentCount);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  arguments.getArgumentImpl(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  arguments.getArgumentImpl(argumentCount);	  ArgumentImpl    argument    =    options.getArgumentImpl(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
267	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    2)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	38	1	add
268	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    2)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	38	1	add
269	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    2)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	38	1	add
270	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    2)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	38	1	add
271	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  If(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  If(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    2)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    If(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	non-compiled	[CE]  ';'  expected	38	None	add
272	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  method.addValue(option,  allValues);  }  [CE]  cannot  find  symbol  method  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  method.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    2)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  method.addValue(option,  allValues);  }	  	non-compiled	[CE]  cannot  find  symbol  method	38	None	add
273	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  ALLValues);  }  [CE]  cannot  find  symbol  ALLValues  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  ALLValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    2)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  ALLValues);  }	  	non-compiled	[CE]  cannot  find  symbol  ALLValues	38	None	add
274	[BUG]  [BUGGY]  int  argumentCount  =  arguments.size();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  int  argumentCount  =  arguments.size();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	int  argumentCount  =  arguments.size();	  if(argumentCount    >    1)    {    ++argumentCount;    }    int    argumentCount    >    1)    {    ++argumentCount;    }    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	95	None	replace
275	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  <  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  <  1)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    int    argumentCount    >    1)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	95	1	replace
276	[BUG]  [BUGGY]  if(argumentCount  <  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  <  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  <  1)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    int    argumentCount    >    1)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	95	1	replace
277	[BUG]  [BUGGY]  Arguments  arguments  =  option.getArgumentCount()  -  2;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Arguments  arguments  =  option.getArgumentCount()  -  2;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Arguments  arguments  =  option.getArgumentCount()  -  2;	  Arguments    arguments    =    option.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
278	[BUG]  [BUGGY]  if(arguments.size()  <  argumentCount)  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(arguments.size()  <  argumentCount)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(arguments.size()  <  argumentCount)  {  ++argumentCount;  }	  if(arguments.size()    >    argumentCount)    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
279	[BUG]  [BUGGY]  if(arguments.size()  >  minimum)  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(arguments.size()  >  minimum)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(arguments.size()  >  minimum)  {  ++argumentCount;  }	  if(arguments.size()    >    argumentCount)    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
280	[BUG]  [BUGGY]  if(arguments.size()  >  argumentsCount)  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(arguments.size()  >  argumentsCount)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(arguments.size()  >  argumentsCount)  {  ++argumentCount;  }	  if(arguments.size()    >    argumentCount)    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
281	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    >=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
282	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    >=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
283	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    >=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
284	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    >=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
285	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    >=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
286	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    >=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
287	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  >>  1)  {  ++argumentCount;  }  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  >>  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    >=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  >>  1)  {  ++argumentCount;  }	  	non-compiled	[CE]  incompatible  types	27	None	add
288	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >>  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >>  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    >=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >>  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }	  	non-compiled	[CE]  incompatible  types	27	None	add
289	[BUG]  [BUGGY]  Argument  argument  =  resources.getArgument(argument);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  resources.getArgument(argument);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  resources.getArgument(argument);	  Argument    argument    =    options.getArgument(argument);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
290	[BUG]  [BUGGY]  Argument  argument  =  arguments.getArgument(argument);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  arguments.getArgument(argument);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  arguments.getArgument(argument);	  Argument    argument    =    options.getArgument(argument);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
291	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    >=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
292	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    >=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
293	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    >=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
294	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    >=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
295	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    >=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
296	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    >=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
297	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  >>  2)  {  ++argumentCount;  }  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  >>  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    >=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  >>  2)  {  ++argumentCount;  }	  	non-compiled	[CE]  incompatible  types	62	None	add
298	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >>  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >>  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    >=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >>  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  	non-compiled	[CE]  incompatible  types	62	None	add
299	[BUG]  [BUGGY]  Arguments  argument  =  arguments.getArgumentCount();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Arguments  argument  =  arguments.getArgumentCount();  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Arguments  argument  =  arguments.getArgumentCount();	  Arguments    argument    =    options.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
300	[BUG]  [BUGGY]  arguments.size()  >  argumentCount)  {  ++argumentCount;  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.size()  >  argumentCount)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.size()  >  argumentCount)  {  ++argumentCount;  }	  argumentCount    >    argumentCount)    {    ++argumentCount;    }    	non-compiled	[CE]  not  a  statement	67	None	replace
301	[BUG]  [BUGGY]  ArgumentCount  >  argumentCount)  {  ++argumentCount;  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  >  argumentCount)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  argumentCount)  {  ++argumentCount;  }	  argumentCount    >    argumentCount)    {    ++argumentCount;    }    	non-compiled	[CE]  not  a  statement	67	None	replace
302	[BUG]  [BUGGY]  Context.checkState(argumentCount  >  1)  {  argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Context.checkState(argumentCount  >  1)  {  argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Context.checkState(argumentCount  >  1)  {  argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    2)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
303	[BUG]  [BUGGY]  Context.checkState(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Context.checkState(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Context.checkState(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    2)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
304	[BUG]  [BUGGY]  Context.checkState(argumentCount  >  1)  {  ++argumentCount;  }  else  {  method.addValue(option,  allValues);  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Context.checkState(argumentCount  >  1)  {  ++argumentCount;  }  else  {  method.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Context.checkState(argumentCount  >  1)  {  ++argumentCount;  }  else  {  method.addValue(option,  allValues);  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    2)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
305	[BUG]  [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(arguments);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(arguments);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  getArgumentImpl(arguments);	  ArgumentImpl    argument    =    getArgumentImpl();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
306	[BUG]  [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(option.getArgumentCount());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(option.getArgumentCount());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  getArgumentImpl(option.getArgumentCount());	  ArgumentImpl    argument    =    getArgumentImpl();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
307	[BUG]  [BUGGY]  String  argumentCount  =  options.get(0).toString()  +  1;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  options.get(0).toString()  +  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.get(0).toString()  +  1;	  String    argumentCount    =    options.get(0).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	50	None	replace
308	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(option,  values);  [CE]  cannot  find  symbol  values  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCommandLine.this.addValue(option,  values);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(option,  values);	  MutableCommandLine.this.addValue(option,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	86	None	replace
309	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(token,  allValues);  [CE]  cannot  find  symbol  token  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCommandLine.this.addValue(token,  allValues);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(token,  allValues);	  MutableCommandLine.this.addValue(option,    allValues);    	non-compiled	[CE]  cannot  find  symbol  token	86	None	replace
310	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(option,  allValues,  token);  [CE]  cannot  find  symbol  token  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCommandLine.this.addValue(option,  allValues,  token);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(option,  allValues,  token);	  MutableCommandLine.this.addValue(option,    allValues);    	non-compiled	[CE]  cannot  find  symbol  token	86	None	replace
311	[BUG]  [BUGGY]  Argument  argument  =  resources.getArgument(argumentCount,  arguments.length);  [CE]  cannot  find  symbol  length  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  resources.getArgument(argumentCount,  arguments.length);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  resources.getArgument(argumentCount,  arguments.length);	  Argument    argument    =    resources.getArgument(argumentCount);    	non-compiled	[CE]  cannot  find  symbol  length	21	None	replace
312	[BUG]  [BUGGY]  Argument  argument  =  resources.getArgument(argumentCount,  arguments.size());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  resources.getArgument(argumentCount,  arguments.size());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  resources.getArgument(argumentCount,  arguments.size());	  Argument    argument    =    resources.getArgument(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
313	[BUG]  [BUGGY]  Argument  argument  =  resources.getArgument(argumentCount  +  1);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  resources.getArgument(argumentCount  +  1);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  resources.getArgument(argumentCount  +  1);	  Argument    argument    =    resources.getArgument(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
314	[BUG]  [BUGGY]  arguments.add(0,  argumentCount);  [CE]  method  add  in  interface  ListIterator<E>  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(0,  argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(0,  argumentCount);	  arguments.add(argumentCount);    	non-compiled	[CE]  method  add  in  interface  ListIterator<E>  cannot  be  applied  to  given  types;	69	None	replace
315	[BUG]  [BUGGY]  arguments.add(id);  [CE]  id  has  private  access  in  OptionImpl  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(id);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(id);	  arguments.add(argumentCount);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	69	None	replace
316	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add( "n ");  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	arguments.add( "n ");	  arguments.add(argumentCount);    	compilable	  [FE]  ComparisonFailure  	69	1	replace
317	[BUG]  [BUGGY]  arguments.add( "n ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add( "n ");  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add( "n ");	  arguments.add(argumentCount);    	compilable	  [FE]  ComparisonFailure  	69	1	replace
318	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
319	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
320	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
321	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
322	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
323	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
324	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
325	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
326	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
327	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
328	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(values,  option);  [CE]  cannot  find  symbol  values  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCommandLine.this.addValue(values,  option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(values,  option);	  MutableCommandLine.this.addValue(option,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	86	None	replace
329	[BUG]  [BUGGY]  Argument  argument  =  resources.getArgument(arguments.nextToken());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  resources.getArgument(arguments.nextToken());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  resources.getArgument(arguments.nextToken());	  Argument    argument    =    options.getArgument(arguments.nextToken());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
330	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  CommandLine  commandLine  =  options.getCommandLine();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	CommandLine  commandLine  =  options.getCommandLine();	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
331	[BUG]  [BUGGY]  MutableCollection  arguments  =  allValues.nextToken();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCollection  arguments  =  allValues.nextToken();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCollection  arguments  =  allValues.nextToken();	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
332	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getCommandLine();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  CommandLine  commandLine  =  option.getCommandLine();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	CommandLine  commandLine  =  option.getCommandLine();	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
333	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  ==  1)  {  ++argumentCount;  }	  if(argumentCount    ==    2)    {    ++argumentCount;    }    If(argumentCount    ==    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	64	1	replace
334	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  ==  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  ==  1)  {  ++argumentCount;  }	  if(argumentCount    ==    2)    {    ++argumentCount;    }    If(argumentCount    ==    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	64	1	replace
335	[BUG]  [BUGGY]  ArgumentCount  >  1  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  >  1  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  1  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	9	None	replace
336	[BUG]  [BUGGY]  ArgumentCount  >  arguments.size())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  >  arguments.size())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  arguments.size())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	9	None	replace
337	[BUG]  [BUGGY]  Arguments  argument  =  resources.getArgumentCount();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Arguments  argument  =  resources.getArgumentCount();  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Arguments  argument  =  resources.getArgumentCount();	  Arguments    arguments    =    resources.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
338	[BUG]  [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(values);  [CE]  cannot  find  symbol  values  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(values);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  getArgumentImpl(values);	  ArgumentImpl    argument    =    getArgumentImpl();    	non-compiled	[CE]  cannot  find  symbol  values	56	None	replace
339	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    >=    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
340	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    >=    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
341	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    >=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
342	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    >=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	27	1	add
343	[BUG]  [BUGGY]  if(arguments.size()  >  1)  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(arguments.size()  >  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(arguments.size()  >  1)  {  ++argumentCount;  }	  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount    >    argumentCount)    ==    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
344	[BUG]  [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(option,  arguments.nextToken());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(option,  arguments.nextToken());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  getArgumentImpl(option,  arguments.nextToken());	  ArgumentImpl    argument    =    getArgumentImpl(option);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
345	[BUG]  [BUGGY]  Arguments  argument  =  option.getArgumentCount();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Arguments  argument  =  option.getArgumentCount();  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Arguments  argument  =  option.getArgumentCount();	  Arguments    argument    =    options.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
346	[BUG]  [BUGGY]  if(arguments.size()  ==  2)  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(arguments.size()  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(arguments.size()  ==  2)  {  ++argumentCount;  }	  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
347	[BUG]  [BUGGY]  Argument  argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }	  argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  ';'  expected	102	None	replace
348	[BUG]  [BUGGY]  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }	  argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  not  a  statement	102	None	replace
349	[BUG]  [BUGGY]  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }	  argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  not  a  statement	102	None	replace
350	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  >  1)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    1)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	2	1	replace
351	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  >  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  >  1)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    1)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	2	1	replace
352	[BUG]  [BUGGY]  ArgumentCount  >  1  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  >  1  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  1  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  not  a  statement	8	None	replace
353	[BUG]  [BUGGY]  ArgumentCount  >  arguments.size())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  >  arguments.size())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  arguments.size())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  not  a  statement	8	None	replace
354	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
355	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	23	1	add
356	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  0)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  ==  0)  {  ++argumentCount;  }	  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount    >=    1)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	28	1	replace
357	[BUG]  [BUGGY]  if(argumentCount  ==  0)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  0)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  0)  {  ++argumentCount;  }	  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount    >=    1)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	28	1	replace
358	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount    >=    1)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	28	1	replace
359	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount    >=    1)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	28	1	replace
360	[BUG]  [BUGGY]  String  argumentCount  =  values.get(values.get(0).toString());  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  values.get(values.get(0).toString());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  values.get(values.get(0).toString());	  String    argumentCount    =    values.get(0).toString()    +    1;    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	49	None	replace
361	[BUG]  [BUGGY]  arguments.add(option);  Argument  argument  =  options.get(token);  [CE]  cannot  find  symbol  token  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(option);  Argument  argument  =  options.get(token);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(option);    Argument  argument  =  options.get(token);	  	non-compiled	[CE]  cannot  find  symbol  token	106	None	add
362	[BUG]  [BUGGY]  arguments.add(option);  Argument  argument  =  options.get(option);  [CE]  cannot  find  symbol  options  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(option);  Argument  argument  =  options.get(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(option);    Argument  argument  =  options.get(option);	  	non-compiled	[CE]  cannot  find  symbol  options	106	None	add
363	[BUG]  [BUGGY]  arguments.add(option);  Argument  option  =  options.getOptionalValue();  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(option);  Argument  option  =  options.getOptionalValue();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(option);    Argument  option  =  options.getOptionalValue();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	106	None	add
364	[BUG]  [BUGGY]  arguments.add(option);  Argument  option  =  options.get(token);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(option);  Argument  option  =  options.get(token);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(option);    Argument  option  =  options.get(token);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	106	None	add
365	[BUG]  [BUGGY]  ArgumentCount  >  1  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  >  1  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  1  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    options.nextToken());    }    	non-compiled	[CE]  not  a  statement	11	None	replace
366	[BUG]  [BUGGY]  ArgumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    options.nextToken());    }    	non-compiled	[CE]  not  a  statement	11	None	replace
367	[BUG]  [BUGGY]  arguments.add(key);  [CE]  cannot  find  symbol  key  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(key);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(key);	  arguments.add(argumentCount);    	non-compiled	[CE]  cannot  find  symbol  key	69	None	replace
368	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
369	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	1	1	add
370	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
371	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
372	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
373	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
374	[BUG]  [BUGGY]  validateValues(arguments);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  validateValues(arguments);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	validateValues(arguments);	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
375	[BUG]  [BUGGY]  Option  token  =  option.getOptionalValue();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Option  token  =  option.getOptionalValue();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Option  token  =  option.getOptionalValue();	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
376	[BUG]  [BUGGY]  Validator  validator  =  getValue(option);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Validator  validator  =  getValue(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Validator  validator  =  getValue(option);	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
377	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount    ==    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	30	1	replace
378	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount    ==    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	30	1	replace
379	[BUG]  [BUGGY]  if(arguments.size()  >  maximum)  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(arguments.size()  >  maximum)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(arguments.size()  >  maximum)  {  ++argumentCount;  }	  if(arguments.size()    >    argumentCount)    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
380	[BUG]  [BUGGY]  if(argumentCount  ==  0)  {  ++argumentCount;  }  else  {  throw  new  OptionException( " ");  }  [CE]  no  suitable  constructor  found  for  OptionException(String)  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  0)  {  ++argumentCount;  }  else  {  throw  new  OptionException( " ");  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  0)  {  ++argumentCount;  }  else  {  throw  new  OptionException( " ");  }	  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount    ==    1)    {    ++argumentCount;    }    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(String)	24	None	replace
381	[BUG]  [BUGGY]  ArgumentImpl  argument  =  values.get(argumentCount  -  1);  [CE]  cannot  find  symbol  values  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  values.get(argumentCount  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  values.get(argumentCount  -  1);	  ArgumentImpl    argument    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  cannot  find  symbol  values	7	None	replace
382	[BUG]  [BUGGY]  Argument  argument  =  options.getArgument(arguments[0]);  [CE]  array  required,  but  ListIterator  found  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  options.getArgument(arguments[0]);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgument(arguments[0]);	  Argument    argument    =    options.getArgument(id);    	non-compiled	[CE]  array  required,  but  ListIterator  found	13	None	replace
383	[BUG]  [BUGGY]  Argument  argument  =  resources.getArgument(id);  [CE]  id  has  private  access  in  OptionImpl  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  resources.getArgument(id);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  resources.getArgument(id);	  Argument    argument    =    options.getArgument(id);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	13	None	replace
384	[BUG]  [BUGGY]  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        argumentCount)        {        ++argumentCount;        }        if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount	  	non-compiled	[CE]  ';'  expected	51	None	add
385	[BUG]  [BUGGY]  Argument  argument  =  resources.getArgument(argumentCount,  arguments.nextToken());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  resources.getArgument(argumentCount,  arguments.nextToken());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  resources.getArgument(argumentCount,  arguments.nextToken());	  Argument    argument    =    resources.getArgument(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
386	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  commandLine.addValue(option,  allValues);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	commandLine.addValue(option,  allValues);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    methodLine.addValue(option,    allValues);    }    	compilable	  [FE]  ComparisonFailure  	108	1	replace
387	[BUG]  [BUGGY]  commandLine.addValue(option,  allValues);  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  commandLine.addValue(option,  allValues);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	commandLine.addValue(option,  allValues);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    methodLine.addValue(option,    allValues);    }    	compilable	  [FE]  ComparisonFailure  	108	1	replace
388	[BUG]  [BUGGY]  Option  option  =  option.getOption( "call ");  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Option  option  =  option.getOption( "call ");  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Option  option  =  option.getOption( "call ");	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    methodLine.addValue(option,    allValues);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	108	None	replace
389	[BUG]  [BUGGY]  MutableCommandLine  commandLine  =  options.getCommandLine();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCommandLine  commandLine  =  options.getCommandLine();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine  commandLine  =  options.getCommandLine();	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    methodLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
390	[BUG]  [BUGGY]  Option  option  =  option.getOption();  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Option  option  =  option.getOption();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Option  option  =  option.getOption();	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    methodLine.addValue(option,    allValues);    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	108	None	replace
391	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >>  2)  {  ++argumentCount;  }  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >>  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  >>  2)  {  ++argumentCount;  }	  	non-compiled	[CE]  incompatible  types	60	None	add
392	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
393	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
394	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
395	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
396	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    >    2)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }	  	compilable	  [FE]  ComparisonFailure  	98	1	add
397	[BUG]  [BUGGY]  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    2)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }	  	compilable	  [FE]  ComparisonFailure  	98	1	add
398	[BUG]  [BUGGY]  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  System.arraycopy(argument,  0,  arguments,  0,  argumentCount);  }  [CE]  cannot  find  symbol  argument  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  System.arraycopy(argument,  0,  arguments,  0,  argumentCount);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    2)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  System.arraycopy(argument,  0,  arguments,  0,  argumentCount);  }	  	non-compiled	[CE]  cannot  find  symbol  argument	98	None	add
399	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  >  2)  {  ++argumentCount;  }	  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    If(argumentCount    >    argumentCount)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	53	1	replace
400	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  >  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  ++argumentCount;  }  else  if(argumentCount  >  2)  {  ++argumentCount;  }	  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    If(argumentCount    >    argumentCount)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	53	1	replace
401	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  ==  1)  {  ++argumentCount;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    If(argumentCount    >    argumentCount)    {    ++argumentCount;    }    	compilable	  [FE]  IllegalArgumentException  	53	1	replace
402	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  ++argumentCount;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    If(argumentCount    >    argumentCount)    {    ++argumentCount;    }    	compilable	  [FE]  IllegalArgumentException  	53	1	replace
403	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  System.arraycopy(argument,  0,  arguments,  0,  argumentCount);  }  [CE]  cannot  find  symbol  argument  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  System.arraycopy(argument,  0,  arguments,  0,  argumentCount);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  System.arraycopy(argument,  0,  arguments,  0,  argumentCount);  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(argument,    0,    arguments,    0,    argumentCount);    }    	non-compiled	[CE]  cannot  find  symbol  argument	72	None	replace
404	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  System.arraycopy(argument,  0,  arguments,  1,  argumentCount);  }  [CE]  cannot  find  symbol  argument  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  System.arraycopy(argument,  0,  arguments,  1,  argumentCount);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  System.arraycopy(argument,  0,  arguments,  1,  argumentCount);  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(argument,    0,    arguments,    0,    argumentCount);    }    	non-compiled	[CE]  cannot  find  symbol  argument	72	None	replace
405	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  System.arraycopy(argument,  0,  argumentCount,  1);  }  [CE]  cannot  find  symbol  argument  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  System.arraycopy(argument,  0,  argumentCount,  1);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  System.arraycopy(argument,  0,  argumentCount,  1);  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(argument,    0,    arguments,    0,    argumentCount);    }    	non-compiled	[CE]  cannot  find  symbol  argument	72	None	replace
406	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arra  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arra  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arra	  	non-compiled	[CE]  ';'  expected	70	None	add
407	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System	  	non-compiled	[CE]  ';'  expected	70	None	add
408	[BUG]  [BUGGY]  argumentCount  =  values.nextToken();  [CE]  cannot  find  symbol  values  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  =  values.nextToken();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  =  values.nextToken();	  argumentCount    =    arguments.nextToken();    	non-compiled	[CE]  cannot  find  symbol  values	103	None	replace
409	[BUG]  [BUGGY]  String  argumentCount  =  resources.get(arguments.size()  -  1);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  resources.get(arguments.size()  -  1);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  resources.get(arguments.size()  -  1);	  String    argumentCount    =    resources.get(token);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	94	None	replace
410	[BUG]  [BUGGY]  String  argumentCount  =  resources.get(arguments.size());  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  resources.get(arguments.size());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  resources.get(arguments.size());	  String    argumentCount    =    resources.get(token);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	94	None	replace
411	[BUG]  [BUGGY]  arguments.add(argumentCount);  Argument  arguments.add(argumentCount);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(argumentCount);  Argument  arguments.add(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(argumentCount);    Argument  arguments.add(argumentCount);	  	non-compiled	[CE]  ';'  expected	68	None	add
412	[BUG]  [BUGGY]  validateValues(values);  [CE]  cannot  find  symbol  values  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  validateValues(values);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	validateValues(values);	  if(argumentCount    ==    1)    {    ++argumentCount;    }    If(argumentCount    ==    1)    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol  values	83	None	replace
413	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  commandLine.addValue(option,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	commandLine.addValue(option,  DEFAULT_INITIAL_SEPARATOR);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    ALLValues);    }    	compilable	  [FE]  ComparisonFailure  	109	1	replace
414	[BUG]  [BUGGY]  commandLine.addValue(option,  DEFAULT_INITIAL_SEPARATOR);  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  commandLine.addValue(option,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	commandLine.addValue(option,  DEFAULT_INITIAL_SEPARATOR);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    ALLValues);    }    	compilable	  [FE]  ComparisonFailure  	109	1	replace
415	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    ALLValues);    }    	compilable	  [FE]  ComparisonFailure  	109	1	replace
416	[BUG]  [BUGGY]  commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING);  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    ALLValues);    }    	compilable	  [FE]  ComparisonFailure  	109	1	replace
417	[BUG]  [BUGGY]  commandLine.addValue(option,  ALLValues);  [CE]  cannot  find  symbol  ALLValues  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  commandLine.addValue(option,  ALLValues);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	commandLine.addValue(option,  ALLValues);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    ALLValues);    }    	non-compiled	[CE]  cannot  find  symbol  ALLValues	109	None	replace
418	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(option,  arguments,  argumentCount);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCommandLine.this.addValue(option,  arguments,  argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(option,  arguments,  argumentCount);	  MutableCommandLine.this.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
419	[BUG]  [BUGGY]  argumentCount  >  arguments.size())  {  ++argumentCount;  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  >  arguments.size())  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  arguments.size())  {  ++argumentCount;  }	  argumentCount    >    argumentCount)    {    ++argumentCount;    }    	non-compiled	[CE]  not  a  statement	67	None	replace
420	[BUG]  [BUGGY]  validateValues(option,  values);  [CE]  cannot  find  symbol  values  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  validateValues(option,  values);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	validateValues(option,  values);	  validateValues(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol  values	105	None	replace
421	[BUG]  [BUGGY]  String  argumentCount  =  options.getArgumentCount(arguments.length);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  options.getArgumentCount(arguments.length);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.getArgumentCount(arguments.length);	  String    argumentCount    =    options.getArgumentCount(0);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	47	None	replace
422	[BUG]  [BUGGY]  ArgumentImpl  argument  =  values.getArgumentImpl(argumentCount);  [CE]  cannot  find  symbol  values  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  values.getArgumentImpl(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  values.getArgumentImpl(argumentCount);	  ArgumentImpl    argument    =    options.getArgumentImpl(argumentCount);    	non-compiled	[CE]  cannot  find  symbol  values	16	None	replace
423	[BUG]  [BUGGY]  cautions.add(option);  [CE]  cannot  find  symbol  cautions  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  cautions.add(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	cautions.add(option);	  warnings.add(option);    	non-compiled	[CE]  cannot  find  symbol  cautions	104	None	replace
424	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  if(argumentCount  ==  2)  {  ++argumentCount;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  1)  {  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  1)  {  if(argumentCount  ==  2)  {  ++argumentCount;  }	  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount    >=    2)    {    ++argumentCount;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
425	[BUG]  [BUGGY]  ArgumentCount  >  1  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  arguments.nextToken());  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  >  1  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  arguments.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  1  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  arguments.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    arguments.nextToken());    }    	non-compiled	[CE]  not  a  statement	10	None	replace
426	[BUG]  [BUGGY]  ArgumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  arguments.nextToken());  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  arguments.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  arguments.nextToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    arguments.nextToken());    }    	non-compiled	[CE]  not  a  statement	10	None	replace
427	[BUG]  [BUGGY]  Argument  argument  =  options.getArgumentValue(argumentCount);  [CE]  cannot  find  symbol  options  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  options.getArgumentValue(argumentCount);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgumentValue(argumentCount);	  Argument    argument    =    options.getArgumentValue(option);    	non-compiled	[CE]  cannot  find  symbol  options	97	None	replace
428	[BUG]  [BUGGY]  Argument  argument  =  option.getArgumentValue(option);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  option.getArgumentValue(option);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  option.getArgumentValue(option);	  Argument    argument    =    options.getArgumentValue(option);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
429	[BUG]  [BUGGY]  if(argumentCount!=  2  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  2  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount!=  2  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }	  if(argumentCount!=    2)    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
430	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	5	1	replace
431	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	5	1	replace
432	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  attributes.nextToken());  }  [CE]  cannot  find  symbol  attributes  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  attributes.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  attributes.nextToken());  }	  if(argumentCount    >    0)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  cannot  find  symbol  attributes	101	None	replace
433	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [CE]  cannot  find  symbol  options  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }	  if(argumentCount    >    0)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  cannot  find  symbol  options	101	None	replace
434	[BUG]  [BUGGY]  String  argumentCount  =  options.get(option).toString();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  options.get(option).toString();  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.get(option).toString();	  String    argumentCount    =    options.get(0).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	50	None	replace
435	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  if(argumentCount  >  0.0)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    >    0)    {    ++argumentCount;    }    if(argumentCount  >  0.0)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
436	[BUG]  [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  if(argumentCount  >  0.0)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  if(argumentCount  >  0.0)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    0)    {    ++argumentCount;    }    if(argumentCount  >  0.0)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	14	1	add
437	[BUG]  [BUGGY]  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	77	None	replace
438	[BUG]  [BUGGY]  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	77	None	replace
439	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  option.addValue(option,  allValues);  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  option.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    2)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  option.addValue(option,  allValues);  }	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
440	[BUG]  [BUGGY]  argumentCount  >  0)  {  ++argumentCount;  }  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  >  0)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  0)  {  ++argumentCount;  }	  if(argumentCount    >    2)    {    ++argumentCount;    }    	non-compiled	[CE]  not  a  statement	99	None	replace
441	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	81	1	add
442	[BUG]  [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	81	1	add
443	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
444	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
445	[BUG]  [BUGGY]  Argument  arguments  =  options.getArgumentArguments();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  arguments  =  options.getArgumentArguments();  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  arguments  =  options.getArgumentArguments();	  Argument    arguments    =    options.getArgumentCount();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	110	None	replace
446	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(token,  values.nextToken());  [CE]  cannot  find  symbol  token  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCommandLine.this.addValue(token,  values.nextToken());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(token,  values.nextToken());	  MutableCommandLine.this.addValue(option,    values.nextToken());    	non-compiled	[CE]  cannot  find  symbol  token	85	None	replace
447	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  ALL_VALues);  }  [CE]  cannot  find  symbol  ALL_VALues  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  ALL_VALues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    2)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  ALL_VALues);  }	  	non-compiled	[CE]  cannot  find  symbol  ALL_VALues	38	None	add
448	[BUG]  [BUGGY]  Argument  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    options.nextToken());    }    	non-compiled	[CE]  ';'  expected	78	None	replace
449	[BUG]  [BUGGY]  ||  arguments.hasMoreTokens())  {  ++argumentCount;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ||  arguments.hasMoreTokens())  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	||  arguments.hasMoreTokens())  {  ++argumentCount;  }	  if(argumentCount    >    0)    {    ++argumentCount;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
450	[BUG]  [BUGGY]  commandLine.addValue(option,  values);  [CE]  cannot  find  symbol  values  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  commandLine.addValue(option,  values);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	commandLine.addValue(option,  values);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    methodLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol  values	108	None	replace
451	[BUG]  [BUGGY]  if(argumentCount  >  resources.size())  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  resources.size())  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  resources.size())  {  ++argumentCount;  }	  if(argumentCount    >    options.size())    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
452	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(option,  values.nextToken(),  allValues);  [CE]  cannot  find  symbol  values  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCommandLine.this.addValue(option,  values.nextToken(),  allValues);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(option,  values.nextToken(),  allValues);	  MutableCommandLine.this.addValue(option,    values.nextToken());    	non-compiled	[CE]  cannot  find  symbol  values	85	None	replace
453	[BUG]  [BUGGY]  Argument  argument  =  options.getArgument(arguments,  option.nextToken());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  options.getArgument(arguments,  option.nextToken());  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgument(arguments,  option.nextToken());	  Argument    argument    =    options.getArgument(arguments.nextToken());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
454	[BUG]  [BUGGY]  ArgumentImpl  argument  =  values.get(argumentCount);  [CE]  cannot  find  symbol  values  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  values.get(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  values.get(argumentCount);	  ArgumentImpl    argument    =    options.get(argumentCount);    	non-compiled	[CE]  cannot  find  symbol  values	57	None	replace
455	[BUG]  [BUGGY]  if(argumentCount  ==  1  ||  arguments.hasMoreTokens())  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  1  ||  arguments.hasMoreTokens())  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1  ||  arguments.hasMoreTokens())  {  ++argumentCount;  }	  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount    ==    2)    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
456	[BUG]  [BUGGY]  String  argumentCount  =  arguments.get(argumentCount  -  1);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  arguments.get(argumentCount  -  1);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  arguments.get(argumentCount  -  1);	  String    argumentCount    =    arguments.get(argumentCount);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	19	None	replace
457	[BUG]  [BUGGY]  Argument  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  ';'  expected	77	None	replace
458	[BUG]  [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  else  {  System.arraycopy(argument,  0,  arguments,  0,  argumentCount);  }  [CE]  cannot  find  symbol  argument  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  else  {  System.arraycopy(argument,  0,  arguments,  0,  argumentCount);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  0)  {  ++argumentCount;  }  else  {  System.arraycopy(argument,  0,  arguments,  0,  argumentCount);  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(argument,    0,    arguments,    0,    argumentCount);    }    	non-compiled	[CE]  cannot  find  symbol  argument	72	None	replace
459	[BUG]  [BUGGY]  validate();  [CE]  no  suitable  method  found  for  validate()  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  validate();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	validate();	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    If(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  no  suitable  method  found  for  validate()	36	None	replace
460	[BUG]  [BUGGY]  validateValues(option);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  validateValues(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	validateValues(option);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    If(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
461	[BUG]  [BUGGY]  ArgumentImpl  arguments  =  option.getArguments();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  arguments  =  option.getArguments();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  arguments  =  option.getArguments();	  arguments.add(option);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	107	None	replace
462	[BUG]  [BUGGY]  ArgumentImpl  arguments  =  option.getArgumentIterator();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  arguments  =  option.getArgumentIterator();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  arguments  =  option.getArgumentIterator();	  arguments.add(option);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	107	None	replace
463	[BUG]  [BUGGY]  arguments.add(option);  Arguments  arguments  =  options.get(option);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(option);  Arguments  arguments  =  options.get(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(option);    Arguments  arguments  =  options.get(option);	  	non-compiled	[CE]  cannot  find  symbol	106	None	add
464	[BUG]  [BUGGY]  arguments.add(option);  Argument  argument  =  options.getArgument();  [CE]  cannot  find  symbol  options  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(option);  Argument  argument  =  options.getArgument();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(option);    Argument  argument  =  options.getArgument();	  	non-compiled	[CE]  cannot  find  symbol  options	106	None	add
465	[BUG]  [BUGGY]  Argument  argument  =  resources.getArgument(argumentCount,  arguments);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  resources.getArgument(argumentCount,  arguments);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  resources.getArgument(argumentCount,  arguments);	  Argument    argument    =    resources.getArgument(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
466	[BUG]  [BUGGY]  Arguments  arguments  =  options.getAllValues();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Arguments  arguments  =  options.getAllValues();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Arguments  arguments  =  options.getAllValues();	  if(argumentCount    >    1)    {    ++argumentCount;    }    If(argumentCount    >    1)    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
467	[BUG]  [BUGGY]  Argument  argument  =  options.getArgumentName(option);  [CE]  cannot  find  symbol  options  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  options.getArgumentName(option);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgumentName(option);	  Argument    argument    =    options.getArgument(argumentName);    	non-compiled	[CE]  cannot  find  symbol  options	42	None	replace
468	[BUG]  [BUGGY]  Argument  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  parameters.nextToken());  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  parameters.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  parameters.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    parameters.nextToken());    }    	non-compiled	[CE]  ';'  expected	80	None	replace
469	[BUG]  [BUGGY]  Method  method  =  options.getMethod( "method ",  DEFAULT_INITIAL_SEPARATOR);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Method  method  =  options.getMethod( "method ",  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Method  method  =  options.getMethod( "method ",  DEFAULT_INITIAL_SEPARATOR);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    method.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
470	[BUG]  [BUGGY]  Method  method  =  options.getMethod( "method ",  DEFAULT_CONSUME_REMAINING);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Method  method  =  options.getMethod( "method ",  DEFAULT_CONSUME_REMAINING);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Method  method  =  options.getMethod( "method ",  DEFAULT_CONSUME_REMAINING);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    method.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
471	[BUG]  [BUGGY]  Method  method  =  options.getMethod( "method ",  DEFAULT_CONSUME_REMAINING,  values.nextToken());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Method  method  =  options.getMethod( "method ",  DEFAULT_CONSUME_REMAINING,  values.nextToken());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Method  method  =  options.getMethod( "method ",  DEFAULT_CONSUME_REMAINING,  values.nextToken());	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    method.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
472	[BUG]  [BUGGY]  ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.getToken());  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.getToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.getToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
473	[BUG]  [BUGGY]  Argument  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  keys.nextToken());  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  keys.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argumentCount  >  1  &&  options.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  keys.nextToken());  }	  argumentCount    >    1    &&    option.hasMoreTokens())    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    keys.nextToken());    }    	non-compiled	[CE]  ';'  expected	79	None	replace
474	[BUG]  [BUGGY]  Arguments  arguments  =  options.getArgumentCount()  /  1;  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Arguments  arguments  =  options.getArgumentCount()  /  1;  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Arguments  arguments  =  options.getArgumentCount()  /  1;	  Arguments    arguments    =    options.getArgumentCount()    -    1;    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
475	[BUG]  [BUGGY]  if(arguments.size()  >  argumentCount.length)  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(arguments.size()  >  argumentCount.length)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(arguments.size()  >  argumentCount.length)  {  ++argumentCount;  }	  if(arguments.size()    >    arguments.size())    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
476	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(option,  arguments,  values);  [CE]  cannot  find  symbol  values  [FE]        ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCommandLine.this.addValue(option,  arguments,  values);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(option,  arguments,  values);	  MutableCommandLine.this.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol  values	84	None	replace
477	[BUG]  [BUGGY]  Argument  argument  =  options.getArgument(values.nextToken(),  option);  [CE]  cannot  find  symbol  values  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  options.getArgument(values.nextToken(),  option);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgument(values.nextToken(),  option);	  Argument    argument    =    options.getArgument(values.nextToken());    	non-compiled	[CE]  cannot  find  symbol  values	96	None	replace
478	[BUG]  [BUGGY]  String  arguments  =  values.get(0).toString();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  arguments  =  values.get(0).toString();  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  arguments  =  values.get(0).toString();	  String    argumentCount    =    values.get(0).toString()    +    1;    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	49	None	replace
479	[BUG]  [BUGGY]  Context.checkState(values.hasMoreTokens());  [CE]  cannot  find  symbol  values  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Context.checkState(values.hasMoreTokens());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Context.checkState(values.hasMoreTokens());	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol  values	35	None	replace
480	[BUG]  [BUGGY]  Context.checkState(values.nextToken()  ==  null);  [CE]  cannot  find  symbol  values  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Context.checkState(values.nextToken()  ==  null);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Context.checkState(values.nextToken()  ==  null);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol  values	35	None	replace
481	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1))  {  ++argumentCount;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1))  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1))  {  ++argumentCount;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
482	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  argument,  0,  argumentCount);  }  [CE]  cannot  find  symbol  argument  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  argument,  0,  argumentCount);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  argument,  0,  argumentCount);  }	  	non-compiled	[CE]  cannot  find  symbol  argument	70	None	add
483	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }	  	compilable	  [FE]  ComparisonFailure  	70	1	add
484	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }	  	compilable	  [FE]  ComparisonFailure  	70	1	add
485	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        if(argumentCount    >    1)    {    ++argumentCount;    System.arraycopy(arguments,    0,    arguments,    0,    argumentCount);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,	  	non-compiled	[CE]  ')'  expected	70	None	add
486	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  0)  {  ++argumentCount;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  ==  0)  {  ++argumentCount;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(argumentCount    ==    2)    {    ++argumentCount;    }    If(argumentCount    ==    2)    {    ++argumentCount;    }    	compilable	  [FE]  IllegalArgumentException  	64	1	replace
487	[BUG]  [BUGGY]  if(argumentCount  ==  0)  {  ++argumentCount;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  ==  0)  {  ++argumentCount;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  0)  {  ++argumentCount;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(argumentCount    ==    2)    {    ++argumentCount;    }    If(argumentCount    ==    2)    {    ++argumentCount;    }    	compilable	  [FE]  IllegalArgumentException  	64	1	replace
488	[BUG]  [BUGGY]  String  argumentCount  =  resources.get(0);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  resources.get(0);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  resources.get(0);	  String    argumentCount    =    resources.get(token);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	94	None	replace
489	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	34	1	add
490	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	34	1	add
491	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1  ||  argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1  ||  argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	34	1	add
492	[BUG]  [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1  ||  argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1  ||  argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        >        1)        {        ++argumentCount;        }        else        {        commandLine.addValue(option,        allValues);        }        if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1  ||  argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	34	1	add
493	[BUG]  [BUGGY]  String  argumentCount  =  values.get(0);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                      ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  String  argumentCount  =  values.get(0);  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  values.get(0);	  String    argumentCount    =    values.get(token);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	18	None	replace
494	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
495	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	60	1	add
496	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >>  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >>  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount!=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >>  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }	  	non-compiled	[CE]  incompatible  types	60	None	add
497	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(values,  option,  allValues);  [CE]  cannot  find  symbol  values  [FE]            ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  MutableCommandLine.this.addValue(values,  option,  allValues);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(values,  option,  allValues);	  MutableCommandLine.this.addValue(option,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	86	None	replace
498	[BUG]  [BUGGY]  Argument  argument  =  options.getArgument();  [CE]  cannot  find  symbol  options  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argument  =  options.getArgument();  [BUGGY]      ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgument();	  String    argumentCount    =    options.getArgumentCount();    arguments.add(values.nextToken());    	non-compiled	[CE]  cannot  find  symbol  options	111	None	replace
499	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
500	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
501	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
502	[BUG]  [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        1)        {        ++argumentCount;        }        if(argumentCount!=    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	25	1	add
503	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    >=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
504	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    >=    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	62	1	add
505	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
506	[BUG]  [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount        ==        2)        {        ++argumentCount;        }        if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	58	1	add
507	[BUG]  [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }	  if(argumentCount    >    0)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
508	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  <  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  <  2)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	5	1	replace
509	[BUG]  [BUGGY]  if(argumentCount  <  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(argumentCount  <  2)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  <  2)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount    >    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	5	1	replace
510	[BUG]  [BUGGY]  ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.getToken());  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.getToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  <  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.getToken());  }	  ArgumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    options.nextToken());    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
511	[BUG]  [BUGGY]  arguments.add(values.get(argumentCount  -  1));  [CE]  cannot  find  symbol  values  [FE]    ComparisonFailure    [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  arguments.add(values.get(argumentCount  -  1));  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(values.get(argumentCount  -  1));	  arguments.add(argumentCount);    	non-compiled	[CE]  cannot  find  symbol  values	69	None	replace
512	[BUG]  [BUGGY]  ArgumentImpl  argument  =  values.get(option);  [CE]  cannot  find  symbol  values  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  values.get(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  values.get(option);	  ArgumentImpl    argument    =    options.get(option);    	non-compiled	[CE]  cannot  find  symbol  values	87	None	replace
513	[BUG]  [BUGGY]  if(arguments.size()  >  arguments.length)  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  if(arguments.size()  >  arguments.length)  {  ++argumentCount;  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(arguments.size()  >  arguments.length)  {  ++argumentCount;  }	  if(arguments.size()    >    argumentCount)    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
514	[BUG]  [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(arguments.size());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(arguments.size());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  getArgumentImpl(arguments.size());	  ArgumentImpl    argument    =    getArgumentImpl();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
515	[BUG]  [BUGGY]  Argument  argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  Argument  argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  ';'  expected	102	None	replace
516	[BUG]  [BUGGY]  argumentCount  >  1  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {      [BUGGY]  argumentCount  >  1  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  1  &&  arguments.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }	  argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues.nextToken());    }    	non-compiled	[CE]  not  a  statement	102	None	replace
