bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	6	1	add
2	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	6	1	add
3	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  If(argumentCount  >  1)  {  ++argumentCount;  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  If(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    1)    {    ++argumentCount;    }    If(argumentCount  >  1)  {  ++argumentCount;  }	  	non-compiled	[CE]  ';'  expected	6	None	add
4	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	6	1	add
5	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	6	1	add
6	[BUG]  [BUGGY]  ArgumentImpl  argument  =  arguments.get(argumentCount);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  ArgumentImpl  argument  =  arguments.get(argumentCount);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  arguments.get(argumentCount);	  if(argumentCount    ==    2)    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
7	[BUG]  [BUGGY]  ArgumentImpl  argument  =  arguments.get(argumentCount  -  1);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  ArgumentImpl  argument  =  arguments.get(argumentCount  -  1);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  arguments.get(argumentCount  -  1);	  if(argumentCount    ==    2)    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
8	[BUG]  [BUGGY]  ArgumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  ArgumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	17	None	replace
9	[BUG]  [BUGGY]  ArgumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  ArgumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	17	None	replace
10	[BUG]  [BUGGY]  ArgumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  arguments.nextToken());  }  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  ArgumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  arguments.nextToken());  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  arguments.nextToken());  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	17	None	replace
11	[BUG]  [BUGGY]  ArgumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [CE]  not  a  statement  [FE]              ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  ArgumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	17	None	replace
12	[BUG]  [BUGGY]  Argument  argumentCount  =  options.getArgumentCount();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Argument  argumentCount  =  options.getArgumentCount();  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argumentCount  =  options.getArgumentCount();	      String    argumentCount    =    options.getArgumentCount();    arguments.add(argumentCount);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	3	None	replace
13	[BUG]  [BUGGY]  Argument  argument  =  options.getArgument(id);  [CE]  id  has  private  access  in  OptionImpl  [FE]              ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Argument  argument  =  options.getArgument(id);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgument(id);	      String    argumentCount    =    options.getArgumentCount();    arguments.add(argumentCount);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	3	None	replace
14	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  >  0)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	7	1	replace
15	[BUG]  [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  0)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	7	1	replace
16	[BUG]  [BUGGY]  ArgumentImpl  argument  =  options.getArgumentImpl(argumentCount);  [CE]  cannot  find  symbol  options  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  ArgumentImpl  argument  =  options.getArgumentImpl(argumentCount);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  options.getArgumentImpl(argumentCount);	  if(argumentCount    >    1)    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol  options	7	None	replace
17	[BUG]  [BUGGY]  String  argumentCount  =  arguments.get(option);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  arguments.get(option);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  arguments.get(option);	      String    argumentCount    =    arguments.get(token);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	5	None	replace
18	[BUG]  [BUGGY]  String  argumentCount  =  values.get(token);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  values.get(token);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  values.get(token);	      String    argumentCount    =    arguments.get(token);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	5	None	replace
19	[BUG]  [BUGGY]  String  argumentCount  =  arguments.get(argumentCount);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  arguments.get(argumentCount);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  arguments.get(argumentCount);	      String    argumentCount    =    arguments.get(token);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	5	None	replace
20	[BUG]  [BUGGY]  String  argumentCount  =  options.get(token);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  options.get(token);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.get(token);	      String    argumentCount    =    arguments.get(token);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	5	None	replace
21	[BUG]  [BUGGY]  Argument  argument  =  resources.getArgument(argumentCount);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Argument  argument  =  resources.getArgument(argumentCount);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  resources.getArgument(argumentCount);	      Argument    argument    =    options.getArgument(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
22	[BUG]  [BUGGY]  Argument  argument  =  arguments.getArgument(argumentCount);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Argument  argument  =  arguments.getArgument(argumentCount);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  arguments.getArgument(argumentCount);	      Argument    argument    =    options.getArgument(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
23	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
24	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
26	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount!=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
28	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  >=  1)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  >=  1)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
29	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
30	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    ==    1)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	13	1	add
31	[BUG]  [BUGGY]  if(arguments.size()  >  argumentCount)  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(arguments.size()  >  argumentCount)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(arguments.size()  >  argumentCount)  {  ++argumentCount;  }	  if(argumentCount    >    arguments.size())    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
32	[BUG]  [BUGGY]  if(argumentCount  >  options.size())  {  ++argumentCount;  }  [CE]  cannot  find  symbol  options  [FE]            ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  options.size())  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  options.size())  {  ++argumentCount;  }	  if(argumentCount    >    arguments.size())    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol  options	8	None	replace
33	[BUG]  [BUGGY]  if(arguments.size()  >  arguments.size())  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(arguments.size()  >  arguments.size())  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(arguments.size()  >  arguments.size())  {  ++argumentCount;  }	  if(argumentCount    >    arguments.size())    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
34	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	18	1	add
35	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	18	1	add
36	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  If(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  If(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    If(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	non-compiled	[CE]  ';'  expected	18	None	add
37	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  method.addValue(option,  allValues);  }  [CE]  cannot  find  symbol  method  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  method.addValue(option,  allValues);  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  method.addValue(option,  allValues);  }	  	non-compiled	[CE]  cannot  find  symbol  method	18	None	add
38	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	18	1	add
39	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  2)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	  	compilable	  [FE]  ComparisonFailure  	18	1	add
40	[BUG]  [BUGGY]  Argument  argument  =  options.getArgument(option);  [CE]  cannot  find  symbol  options  [FE]              ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Argument  argument  =  options.getArgument(option);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgument(option);	      Argument    argument    =    options.getArgument(token);    	non-compiled	[CE]  cannot  find  symbol  options	4	None	replace
41	[BUG]  [BUGGY]  Argument  argument  =  options.getArgument(argument);  [CE]  cannot  find  symbol  options  [FE]                ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Argument  argument  =  options.getArgument(argument);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgument(argument);	      Argument    argument    =    options.getArgument(token);    	non-compiled	[CE]  cannot  find  symbol  options	4	None	replace
42	[BUG]  [BUGGY]  Argument  argument  =  options.getArgument(argumentName);  [CE]  cannot  find  symbol  argumentName  [FE]                  ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Argument  argument  =  options.getArgument(argumentName);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgument(argumentName);	      Argument    argument    =    options.getArgument(token);    	non-compiled	[CE]  cannot  find  symbol  argumentName	4	None	replace
43	[BUG]  [BUGGY]  Arguments  arguments  =  options.getArgumentCount()  -  1;  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Arguments  arguments  =  options.getArgumentCount()  -  1;  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Arguments  arguments  =  options.getArgumentCount()  -  1;	      Arguments    arguments    =    options.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
44	[BUG]  [BUGGY]  Arguments  arguments  =  option.getArgumentCount();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Arguments  arguments  =  option.getArgumentCount();  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Arguments  arguments  =  option.getArgumentCount();	      Arguments    arguments    =    options.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
45	[BUG]  [BUGGY]  String  argumentCount  =  options.getArgumentCount()  +  1;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  options.getArgumentCount()  +  1;  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.getArgumentCount()  +  1;	      String    argumentCount    =    options.getArgumentCount();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	1	None	replace
46	[BUG]  [BUGGY]  String  argumentCount  =  arguments.getArgumentCount();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  arguments.getArgumentCount();  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  arguments.getArgumentCount();	      String    argumentCount    =    options.getArgumentCount();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	1	None	replace
47	[BUG]  [BUGGY]  String  argumentCount  =  options.getArgumentCount(0);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  options.getArgumentCount(0);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.getArgumentCount(0);	      String    argumentCount    =    options.getArgumentCount();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	1	None	replace
48	[BUG]  [BUGGY]  String  argumentCount  =  arguments.get(0).toString();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  arguments.get(0).toString();  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  arguments.get(0).toString();	      String    argumentCount    =    values.get(0).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	20	None	replace
49	[BUG]  [BUGGY]  String  argumentCount  =  values.get(0).toString()  +  1;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  values.get(0).toString()  +  1;  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  values.get(0).toString()  +  1;	      String    argumentCount    =    values.get(0).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	20	None	replace
50	[BUG]  [BUGGY]  String  argumentCount  =  options.get(0).toString();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  options.get(0).toString();  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.get(0).toString();	      String    argumentCount    =    values.get(0).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	20	None	replace
51	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	9	1	add
52	[BUG]  [BUGGY]  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	9	1	add
53	[BUG]  [BUGGY]  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  If(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  If(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    If(argumentCount  >  argumentCount)  {  ++argumentCount;  }	  	non-compiled	[CE]  ';'  expected	9	None	add
54	[BUG]  [BUGGY]  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  ==  ++argumentCount;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  if(argumentCount  >  argumentCount)  ==  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    if(argumentCount  >  argumentCount)  ==  ++argumentCount;  }	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
55	[BUG]  [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(option);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl(option);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  getArgumentImpl(option);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
56	[BUG]  [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  ArgumentImpl  argument  =  getArgumentImpl();  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  getArgumentImpl();	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
57	[BUG]  [BUGGY]  ArgumentImpl  argument  =  options.get(argumentCount);  [CE]  cannot  find  symbol  options  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  ArgumentImpl  argument  =  options.get(argumentCount);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  options.get(argumentCount);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol  options	19	None	replace
58	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	15	1	add
59	[BUG]  [BUGGY]  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  ==  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	15	1	add
60	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	15	1	add
61	[BUG]  [BUGGY]  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount!=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	15	1	add
62	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	15	1	add
63	[BUG]  [BUGGY]  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  2)  {  ++argumentCount;  }  if(argumentCount  >=  2)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    ==    2)    {    ++argumentCount;    }    if(argumentCount  >=  2)  {  ++argumentCount;  }	  	compilable	  [FE]  ComparisonFailure  	15	1	add
64	[BUG]  [BUGGY]  if(argumentCount  ==  2)  {  ++argumentCount;  }  If(argumentCount  ==  2)  {  ++argumentCount;  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  2)  {  ++argumentCount;  }  If(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    ==    2)    {    ++argumentCount;    }    If(argumentCount  ==  2)  {  ++argumentCount;  }	  	non-compiled	[CE]  ';'  expected	15	None	add
65	[BUG]  [BUGGY]  String  argumentCount  =  arguments.getArgumentCount()  -  1;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  arguments.getArgumentCount()  -  1;  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  arguments.getArgumentCount()  -  1;	      String    argumentCount    =    options.getArgumentCount()    -    1;    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	12	None	replace
66	[BUG]  [BUGGY]  String  argumentCount  =  values.get(1).toString();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  values.get(1).toString();  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  values.get(1).toString();	      String    argumentCount    =    values.get(0).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	20	None	replace
67	[BUG]  [BUGGY]  argumentCount  >  argumentCount)  {  ++argumentCount;  }  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  argumentCount  >  argumentCount)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  argumentCount)  {  ++argumentCount;  }	  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    	non-compiled	[CE]  not  a  statement	10	None	replace
68	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  arguments.add(argumentCount);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	arguments.add(argumentCount);	  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	10	1	replace
69	[BUG]  [BUGGY]  arguments.add(argumentCount);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  arguments.add(argumentCount);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(argumentCount);	  if(argumentCount    >    argumentCount)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	10	1	replace
70	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }	  	compilable	  [FE]  ComparisonFailure  	6	1	add
71	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(arguments,  0,  arguments,  0,  argumentCount);  }	  	compilable	  [FE]  ComparisonFailure  	6	1	add
72	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(argument,  0,  arguments,  0,  argumentCount);  }  [CE]  cannot  find  symbol  argument  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(argument,  0,  arguments,  0,  argumentCount);  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    1)    {    ++argumentCount;    }    if(argumentCount  >  1)  {  ++argumentCount;  System.arraycopy(argument,  0,  arguments,  0,  argumentCount);  }	  	non-compiled	[CE]  cannot  find  symbol  argument	6	None	add
73	[BUG]  [BUGGY]  String  argumentCount  =  options.getArgumentCount()  -  2;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  options.getArgumentCount()  -  2;  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.getArgumentCount()  -  2;	      String    argumentCount    =    options.getArgumentCount()    -    1;    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	12	None	replace
74	[BUG]  [BUGGY]  Argument  argument  =  options.getArgument(arguments.nextToken());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Argument  argument  =  options.getArgument(arguments.nextToken());  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgument(arguments.nextToken());	      Argument    argument    =    options.getArgument(token);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
75	[BUG]  [BUGGY]  Argument  argument  =  options.getArgument(arguments);  [CE]  cannot  find  symbol  options  [FE]                ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Argument  argument  =  options.getArgument(arguments);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgument(arguments);	      Argument    argument    =    options.getArgument(token);    	non-compiled	[CE]  cannot  find  symbol  options	4	None	replace
76	[BUG]  [BUGGY]  String  argumentCount  =  options.getArgumentCount()  -  1;  arguments.add(argumentCount);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  options.getArgumentCount()  -  1;  arguments.add(argumentCount);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.getArgumentCount()  -  1;  arguments.add(argumentCount);	      String    argumentCount    =    options.getArgumentCount();    arguments.add(argumentCount);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	3	None	replace
77	[BUG]  [BUGGY]  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	17	None	replace
78	[BUG]  [BUGGY]  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  options.nextToken());  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	17	None	replace
79	[BUG]  [BUGGY]  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  keys.nextToken());  }  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  keys.nextToken());  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  keys.nextToken());  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	17	None	replace
80	[BUG]  [BUGGY]  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  parameters.nextToken());  }  [CE]  not  a  statement  [FE]              ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  parameters.nextToken());  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  1  &&  option.hasMoreTokens())  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  parameters.nextToken());  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	17	None	replace
81	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount!=  1)  {  ++argumentCount;  }	  if(argumentCount    ==    1)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	14	1	replace
82	[BUG]  [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount!=  1)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount!=  1)  {  ++argumentCount;  }	  if(argumentCount    ==    1)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	14	1	replace
83	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  If(argumentCount  ==  1)  {  ++argumentCount;  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  If(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    ==    1)    {    ++argumentCount;    }    If(argumentCount  ==  1)  {  ++argumentCount;  }	  	non-compiled	[CE]  ';'  expected	13	None	add
84	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(option,  arguments);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  MutableCommandLine.this.addValue(option,  arguments);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(option,  arguments);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
85	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(option,  values.nextToken());  [CE]  cannot  find  symbol  values  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  MutableCommandLine.this.addValue(option,  values.nextToken());  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(option,  values.nextToken());	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol  values	19	None	replace
86	[BUG]  [BUGGY]  MutableCommandLine.this.addValue(option,  allValues);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  MutableCommandLine.this.addValue(option,  allValues);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	MutableCommandLine.this.addValue(option,  allValues);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
87	[BUG]  [BUGGY]  ArgumentImpl  argument  =  options.get(option);  [CE]  cannot  find  symbol  options  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  ArgumentImpl  argument  =  options.get(option);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	ArgumentImpl  argument  =  options.get(option);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol  options	19	None	replace
88	[BUG]  [BUGGY]  if(argumentCount  >  values.size())  {  ++argumentCount;  }  [CE]  cannot  find  symbol  values  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  values.size())  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  values.size())  {  ++argumentCount;  }	  if(argumentCount    >    arguments.size())    {    ++argumentCount;    }    	non-compiled	[CE]  cannot  find  symbol  values	8	None	replace
89	[BUG]  [BUGGY]  Argument  argument  =  values.getArgument(argumentCount);  [CE]  cannot  find  symbol  values  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Argument  argument  =  values.getArgument(argumentCount);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  values.getArgument(argumentCount);	      Argument    argument    =    options.getArgument(argumentCount);    	non-compiled	[CE]  cannot  find  symbol  values	11	None	replace
90	[BUG]  [BUGGY]  Arguments  argument  =  options.getArgumentCount();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Arguments  argument  =  options.getArgumentCount();  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Arguments  argument  =  options.getArgumentCount();	      Arguments    arguments    =    options.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
91	[BUG]  [BUGGY]  Arguments  arguments  =  resources.getArgumentCount();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Arguments  arguments  =  resources.getArgumentCount();  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Arguments  arguments  =  resources.getArgumentCount();	      Arguments    arguments    =    options.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
92	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount!=  2)  {  ++argumentCount;  }	  if(argumentCount    ==    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	16	1	replace
93	[BUG]  [BUGGY]  if(argumentCount!=  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount!=  2)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount!=  2)  {  ++argumentCount;  }	  if(argumentCount    ==    2)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	16	1	replace
94	[BUG]  [BUGGY]  String  argumentCount  =  resources.get(token);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  resources.get(token);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  resources.get(token);	      String    argumentCount    =    arguments.get(token);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	5	None	replace
95	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  int  argumentCount  >  1)  {  ++argumentCount;  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  int  argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    1)    {    ++argumentCount;    }    int  argumentCount  >  1)  {  ++argumentCount;  }	  	non-compiled	[CE]  ';'  expected	6	None	add
96	[BUG]  [BUGGY]  Argument  argument  =  options.getArgument(values.nextToken());  [CE]  cannot  find  symbol  values  [FE]              ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Argument  argument  =  options.getArgument(values.nextToken());  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgument(values.nextToken());	      Argument    argument    =    options.getArgument(token);    	non-compiled	[CE]  cannot  find  symbol  values	4	None	replace
97	[BUG]  [BUGGY]  Argument  argument  =  options.getArgumentValue(option);  [CE]  cannot  find  symbol  options  [FE]                ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Argument  argument  =  options.getArgumentValue(option);  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  argument  =  options.getArgumentValue(option);	      Argument    argument    =    options.getArgument(token);    	non-compiled	[CE]  cannot  find  symbol  options	4	None	replace
98	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  >  2)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	7	1	replace
99	[BUG]  [BUGGY]  if(argumentCount  >  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  2)  {  ++argumentCount;  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  2)  {  ++argumentCount;  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    	compilable	  [FE]  ComparisonFailure  	7	1	replace
100	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
101	[BUG]  [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  cannot  find  symbol  values  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  0)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  cannot  find  symbol  values	17	None	replace
102	[BUG]  [BUGGY]  argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues.nextToken());  }	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    values.nextToken());    }    	non-compiled	[CE]  not  a  statement	17	None	replace
103	[BUG]  [BUGGY]  argumentCount  =  arguments.nextToken();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  argumentCount  =  arguments.nextToken();  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	argumentCount  =  arguments.nextToken();	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
104	[BUG]  [BUGGY]  warnings.add(option);  [CE]  cannot  find  symbol  warnings  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  warnings.add(option);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	warnings.add(option);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol  warnings	19	None	replace
105	[BUG]  [BUGGY]  validateValues(option,  arguments);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  validateValues(option,  arguments);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	validateValues(option,  arguments);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
106	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  arguments.add(option);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	arguments.add(option);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	compilable	  [FE]  ComparisonFailure  	19	1	replace
107	[BUG]  [BUGGY]  arguments.add(option);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  arguments.add(option);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	arguments.add(option);	  if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    	compilable	  [FE]  ComparisonFailure  	19	1	replace
108	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  methodLine.addValue(option,  allValues);  }  [CE]  cannot  find  symbol  methodLine  [FE]    ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  methodLine.addValue(option,  allValues);  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  methodLine.addValue(option,  allValues);  }	  	non-compiled	[CE]  cannot  find  symbol  methodLine	18	None	add
109	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  ALLValues);  }  [CE]  cannot  find  symbol  ALLValues  [FE]      ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  ALLValues);  }  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount    >    1)    {    ++argumentCount;    }    else    {    commandLine.addValue(option,    allValues);    }    if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  ALLValues);  }	  	non-compiled	[CE]  cannot  find  symbol  ALLValues	18	None	add
110	[BUG]  [BUGGY]  Argument  arguments  =  options.getArgumentCount();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  Argument  arguments  =  options.getArgumentCount();  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	Argument  arguments  =  options.getArgumentCount();	      String    argumentCount    =    options.getArgumentCount();    arguments.add(argumentCount);    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	3	None	replace
111	[BUG]  [BUGGY]  String  argumentCount  =  options.getArgumentCount();  arguments.add(values.nextToken());  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  options.getArgumentCount();  arguments.add(values.nextToken());  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  options.getArgumentCount();  arguments.add(values.nextToken());	      String    argumentCount    =    options.getArgumentCount();    arguments.add(argumentCount);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	3	None	replace
112	[BUG]  [BUGGY]  String  argumentCount  =  values.get(option).toString();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure    [CONTEXT]    arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {    [BUGGY]  String  argumentCount  =  values.get(option).toString();  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	String  argumentCount  =  values.get(option).toString();	      String    argumentCount    =    values.get(0).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	20	None	replace
