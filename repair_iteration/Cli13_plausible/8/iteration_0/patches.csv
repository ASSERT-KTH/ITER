bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    String  argumentCount  =  options.getArgumentCount();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]    ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    String  argumentCount  =  options.getArgumentCount();  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    String  argumentCount  =  options.getArgumentCount();		non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	16	None	add
2	[BUG]  [BUGGY]    Arguments  arguments  =  options.getArgumentCount();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    Arguments  arguments  =  options.getArgumentCount();  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    Arguments  arguments  =  options.getArgumentCount();		non-compiled	[CE]  cannot  find  symbol	16	None	add
3	[BUG]  [BUGGY]    String  argumentCount  =  options.getArgumentCount();  arguments.add(argumentCount);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    String  argumentCount  =  options.getArgumentCount();  arguments.add(argumentCount);  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    String  argumentCount  =  options.getArgumentCount();  arguments.add(argumentCount);		non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	16	None	add
4	[BUG]  [BUGGY]    Argument  argument  =  options.getArgument(token);  [CE]  cannot  find  symbol  token  [FE]          ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    Argument  argument  =  options.getArgument(token);  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    Argument  argument  =  options.getArgument(token);		non-compiled	[CE]  cannot  find  symbol  token	16	None	add
5	[BUG]  [BUGGY]    String  argumentCount  =  arguments.get(token);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    String  argumentCount  =  arguments.get(token);  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    String  argumentCount  =  arguments.get(token);		non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	16	None	add
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  >  1)  {  ++argumentCount;  }	++argumentCount;  	compilable	  [FE]  ComparisonFailure  	15	1	replace
7	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  1)  {  ++argumentCount;  }	++argumentCount;  	compilable	  [FE]  ComparisonFailure  	15	1	replace
8	[BUG]  [BUGGY]  if(argumentCount  >  arguments.size())  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  if(argumentCount  >  arguments.size())  {  ++argumentCount;  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  arguments.size())  {  ++argumentCount;  }	++argumentCount;  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  >  argumentCount)  {  ++argumentCount;  }	++argumentCount;  	compilable	  [FE]  ComparisonFailure  	15	1	replace
10	[BUG]  [BUGGY]  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  if(argumentCount  >  argumentCount)  {  ++argumentCount;  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  argumentCount)  {  ++argumentCount;  }	++argumentCount;  	compilable	  [FE]  ComparisonFailure  	15	1	replace
11	[BUG]  [BUGGY]    Argument  argument  =  options.getArgument(argumentCount);  [CE]  cannot  find  symbol  options  [FE]    ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    Argument  argument  =  options.getArgument(argumentCount);  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    Argument  argument  =  options.getArgument(argumentCount);		non-compiled	[CE]  cannot  find  symbol  options	16	None	add
12	[BUG]  [BUGGY]    String  argumentCount  =  options.getArgumentCount()  -  1;  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]      ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    String  argumentCount  =  options.getArgumentCount()  -  1;  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    String  argumentCount  =  options.getArgumentCount()  -  1;		non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	16	None	add
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  ==  1)  {  ++argumentCount;  }	++argumentCount;  	compilable	  [FE]  ComparisonFailure  	15	1	replace
14	[BUG]  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  if(argumentCount  ==  1)  {  ++argumentCount;  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  1)  {  ++argumentCount;  }	++argumentCount;  	compilable	  [FE]  ComparisonFailure  	15	1	replace
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  ==  2)  {  ++argumentCount;  }	++argumentCount;  	compilable	  [FE]  ComparisonFailure  	15	1	replace
16	[BUG]  [BUGGY]  if(argumentCount  ==  2)  {  ++argumentCount;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  if(argumentCount  ==  2)  {  ++argumentCount;  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  ==  2)  {  ++argumentCount;  }	++argumentCount;  	compilable	  [FE]  ComparisonFailure  	15	1	replace
17	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [CE]  cannot  find  symbol  values  [FE]    ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  values.nextToken());  }	++argumentCount;  	non-compiled	[CE]  cannot  find  symbol  values	15	None	replace
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	++argumentCount;  	compilable	  [FE]  ComparisonFailure  	15	1	replace
19	[BUG]  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	if(argumentCount  >  1)  {  ++argumentCount;  }  else  {  commandLine.addValue(option,  allValues);  }	++argumentCount;  	compilable	  [FE]  ComparisonFailure  	15	1	replace
20	[BUG]  [BUGGY]    String  argumentCount  =  values.get(0).toString();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]    ComparisonFailure  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    String  argumentCount  =  values.get(0).toString();  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    String  argumentCount  =  values.get(0).toString();		non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	16	None	add
