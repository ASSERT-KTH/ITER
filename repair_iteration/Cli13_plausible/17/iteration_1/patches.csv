bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Validator  validator  =  resources.get(commandLine);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  resources.get(commandLine);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.get(commandLine);	      Validator    validator    =    options.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  Validator  validator  =  commandLine.get(option);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  commandLine.get(option);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.get(option);	      Validator    validator    =    options.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
3	[BUG]  [BUGGY]  Validator  validator  =  commands.get(commandLine);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  commands.get(commandLine);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commands.get(commandLine);	      Validator    validator    =    options.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  Validator  validator  =  options.validate();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  options.validate();  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.validate();	      Validator    validator    =    option.validate();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(values);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  option.validateValue(values);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validateValue(values);	      Validator    validator    =    option.validate();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  Validator  validator  =  commandLine.validate(option);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  commandLine.validate(option);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.validate(option);	      Validator    validator    =    option.validate(commandLine);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  values);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  option.validate(commandLine,  values);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  values);	      Validator    validator    =    option.validate(commandLine);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  valueDefaults);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  option.validate(commandLine,  valueDefaults);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  valueDefaults);	      Validator    validator    =    option.validate(commandLine);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  Validator  validator  =  commandline.validate(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  commandline.validate(option);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandline.validate(option);	      Validator    validator    =    option.validate(commandLine);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  Validator  validator  =(ValueImpl)values.get(0);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =(ValueImpl)values.get(0);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =(ValueImpl)values.get(0);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  if  (values.size()  <  minimum)  {  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	add	if  (values.size()  <  minimum)  {	  if    (values.size()    <    maximum)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
12	[BUG]  [BUGGY]  if  (values.size()  <  minimum)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  if  (values.size()  <  minimum)  {  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	if  (values.size()  <  minimum)  {	  if    (values.size()    <    maximum)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
13	[BUG]  [BUGGY]  if  (values.size()  <  =  maximum)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  if  (values.size()  <  =  maximum)  {  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	if  (values.size()  <  =  maximum)  {	  if    (values.size()    <    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
14	[BUG]  [BUGGY]  if  (values.size()  <  maximum)  {  if  (values.size()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  if  (values.size()  <  maximum)  {  if  (values.size()  <  maximum)  {  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	if    (values.size()    <    maximum)    {    if  (values.size()  <  maximum)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
15	[BUG]  [BUGGY]  if  (values.size()  <  maximum)  {  If  (values.size()  <  maximum)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  if  (values.size()  <  maximum)  {  If  (values.size()  <  maximum)  {  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	if    (values.size()    <    maximum)    {    If  (values.size()  <  maximum)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
16	[BUG]  [BUGGY]  if  (values.size()  <  maximum)  {  if  (values.size()  <  maximal)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  if  (values.size()  <  maximum)  {  if  (values.size()  <  maximal)  {  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	if    (values.size()    <    maximum)    {    if  (values.size()  <  maximal)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
17	[BUG]  [BUGGY]  Validator  validator  =  values.getValue(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  values.getValue(option);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  values.getValue(option);	      Validator    validator    =    options.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
18	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(option);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  resources.getValue(option);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.getValue(option);	      Validator    validator    =    options.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(option);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  commandLine.getValue(option);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.getValue(option);	      Validator    validator    =    options.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  values);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  getValue(option,  values);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  values);	      Validator    validator    =    getValue(option);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
21	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  resources);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  getValue(option,  resources);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  resources);	      Validator    validator    =    getValue(option);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
22	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  values.size());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  getValue(option,  values.size());  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  values.size());	      Validator    validator    =    getValue(option);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
23	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(commandLine);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  resources.getValue(commandLine);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.getValue(commandLine);	      Validator    validator    =    options.getValue(commandLine);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
24	[BUG]  [BUGGY]  Validator  validator  =  commands.getValue(commandLine);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  commands.getValue(commandLine);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commands.getValue(commandLine);	      Validator    validator    =    options.getValue(commandLine);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
25	[BUG]  [BUGGY]  Validator  validator  =  commands.getValue(option);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  commands.getValue(option);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commands.getValue(option);	      Validator    validator    =    options.getValue(commandLine);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
26	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  option.validate(values,  minimum);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  minimum);	      Validator    validator    =    option.validate(values);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  defaultValues);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  option.validate(values,  defaultValues);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  defaultValues);	      Validator    validator    =    option.validate(values);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  valueCount);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  option.validate(values,  valueCount);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  valueCount);	      Validator    validator    =    option.validate(values);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  values);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  option.validate(values,  values);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  values);	      Validator    validator    =    option.validate(values);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  Validator  validator  =  getValues(option);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  getValues(option);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValues(option);	      Validator    validator    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  Validator  validator  =  getValues().iterator();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  getValues().iterator();  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValues().iterator();	      Validator    validator    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  Validator  validator  =  getValuesInvalid(option);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  getValuesInvalid(option);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValuesInvalid(option);	      Validator    validator    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  id);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  option.validate(values,  id);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  id);	      Validator    validator    =    option.validate(values);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
34	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  options);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  getValue(option,  options);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  options);	      Validator    validator    =    getValue(option);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
35	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  option.validate(values,  option);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  option);	      Validator    validator    =    option.validate();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  Validator  validator  =  option.validate(defaultValues);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  option.validate(defaultValues);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(defaultValues);	      Validator    validator    =    option.validate();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
37	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  value);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  option.validate(commandLine,  value);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  value);	      Validator    validator    =    option.validate(commandLine);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  option.getValue(option);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.getValue(option);	      Validator    validator    =    options.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
39	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(option,  values);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  options.getValue(option,  values);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.getValue(option,  values);	      Validator    validator    =    options.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
40	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  defaultValues);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  getValue(option,  defaultValues);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  defaultValues);	      Validator    validator    =    getValue(option);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
41	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  value);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  getValue(option,  value);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  value);	      Validator    validator    =    getValue(option);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
42	[BUG]  [BUGGY]  Validator  validator  =  getValuesImpl();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  getValuesImpl();  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValuesImpl();	      Validator    validator    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  Validator  validator  =  getValues().values;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  getValues().values;  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValues().values;	      Validator    validator    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  options);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  Validator  validator  =  option.validate(commandLine,  options);  [BUGGY]    if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  options);	      Validator    validator    =    option.validate(commandLine);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  if(values.size()  <  argumentCount)  {  [CE]  cannot  find  symbol  argumentCount  [FE]    AssertionFailedError    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }    [BUGGY]  if(values.size()  <  argumentCount)  {  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	if(values.size()  <  argumentCount)  {	  if    (values.size()    <    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  argumentCount	2	None	replace
