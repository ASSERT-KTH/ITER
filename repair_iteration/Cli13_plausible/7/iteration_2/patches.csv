bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  else  if(initialSplit  ||  arguments.nextToken())  {  [CE]  cannot  find  symbol  initialSplit  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSplit  ||  arguments.nextToken())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSplit  ||  arguments.nextToken())  {	  else    if(subsequentSeparator    ||    arguments.nextToken())    {    	non-compiled	[CE]  cannot  find  symbol  initialSplit	70	None	replace
2	[BUG]  [BUGGY]  else  if(subsequentSeparator  ||  commandLine.nextToken())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSeparator  ||  commandLine.nextToken())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  ||  commandLine.nextToken())  {	  else    if(subsequentSeparator    ||    arguments.nextToken())    {    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
3	[BUG]  [BUGGY]  else  if(initialSeparator  ||  arguments.nextToken())  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  ||  arguments.nextToken())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  ||  arguments.nextToken())  {	  else    if(subsequentSeparator    ||    arguments.nextToken())    {    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
4	[BUG]  [BUGGY]  final  ComparisonFailure  <  Short>  commandLine  =  options.next();  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  ComparisonFailure  <  Short>  commandLine  =  options.next();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  ComparisonFailure  <  Short>  commandLine  =  options.next();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    Short>    commandLine    =    options.next();    	non-compiled	[CE]  'else'  without  'if'	61	None	replace
5	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  Short>  commandLine  =  options.next();  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  Short>  commandLine  =  options.next();  }  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  Short>  commandLine  =  options.next();  }	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    Short>    commandLine    =    options.next();    	non-compiled	[CE]  'else'  without  'if'	61	None	replace
6	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  arguments.size()  >  1)  {  final  ComparisonFailure  <  Short>  commandLine  =  options.next();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSplit  &&  arguments.size()  >  1)  {  final  ComparisonFailure  <  Short>  commandLine  =  options.next();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  &&  arguments.size()  >  1)  {  final  ComparisonFailure  <  Short>  commandLine  =  options.next();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    Short>    commandLine    =    options.next();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
7	[BUG]  [BUGGY]  else  if(initialSplit  &&  option.hasArg())  {  [CE]  cannot  find  symbol  initialSplit  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSplit  &&  option.hasArg())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSplit  &&  option.hasArg())  {	  else    if(subsequentSeparator    &&    option.hasArg())    {    	non-compiled	[CE]  cannot  find  symbol  initialSplit	66	None	replace
8	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  options.hasArg())  {  [CE]  cannot  find  symbol  options  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSeparator  &&  options.hasArg())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  options.hasArg())  {	  else    if(subsequentSeparator    &&    option.hasArg())    {    	non-compiled	[CE]  cannot  find  symbol  options	66	None	replace
9	[BUG]  [BUGGY]  else  if(subsequentSeparator  ||  option.hasArg())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSeparator  ||  option.hasArg())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  ||  option.hasArg())  {	  else    if(subsequentSeparator    &&    option.hasArg())    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
10	[BUG]  [BUGGY]  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.next();  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.next();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.next();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    options.next();    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
11	[BUG]  [BUGGY]  final  ComparisonFailure  <  ComparFailure>  commandLine  =  options.next();  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  ComparisonFailure  <  ComparFailure>  commandLine  =  options.next();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  ComparisonFailure  <  ComparFailure>  commandLine  =  options.next();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    options.next();    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
12	[BUG]  [BUGGY]  final  ComparFailure  <  ComparisonFailure>  commandLine  =  options.next();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  ComparFailure  <  ComparisonFailure>  commandLine  =  options.next();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  ComparFailure  <  ComparisonFailure>  commandLine  =  options.next();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    options.next();    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
13	[BUG]  [BUGGY]  else  if(initialSeparator  ||  arguments.isEmpty())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  ||  arguments.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  ||  arguments.isEmpty())  {	  else    if(initialSeparator    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
14	[BUG]  [BUGGY]  else  if(initialSeparator  &&  argumentLine.isEmpty())  {  [CE]  cannot  find  symbol  argumentLine  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  &&  argumentLine.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  argumentLine.isEmpty())  {	  else    if(initialSeparator    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  argumentLine	51	None	replace
15	[BUG]  [BUGGY]  else  if(consumeSplit  &&  arguments.isEmpty())  {  [CE]  cannot  find  symbol  consumeSplit  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(consumeSplit  &&  arguments.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(consumeSplit  &&  arguments.isEmpty())  {	  else    if(afterSplit    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  consumeSplit	11	None	replace
16	[BUG]  [BUGGY]  else  if(initialSplit  &&  option.hasOptionalArg())  {  [CE]  cannot  find  symbol  initialSplit  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSplit  &&  option.hasOptionalArg())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSplit  &&  option.hasOptionalArg())  {	  else    if(subsequentSeparator    &&    option.hasOptionalArg())    {    	non-compiled	[CE]  cannot  find  symbol  initialSplit	67	None	replace
17	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  options.hasOptionalArg())  {  [CE]  cannot  find  symbol  options  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSeparator  &&  options.hasOptionalArg())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  options.hasOptionalArg())  {	  else    if(subsequentSeparator    &&    option.hasOptionalArg())    {    	non-compiled	[CE]  cannot  find  symbol  options	67	None	replace
18	[BUG]  [BUGGY]  else  if(option.hasOptionalArg()  &&  subsequentSeparator.hasOptionalArg())  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(option.hasOptionalArg()  &&  subsequentSeparator.hasOptionalArg())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(option.hasOptionalArg()  &&  subsequentSeparator.hasOptionalArg())  {	  else    if(subsequentSeparator    &&    option.hasOptionalArg())    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
19	[BUG]  [BUGGY]  else  if(consumeRemaining  &&  arguments.isEmpty())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(consumeRemaining  &&  arguments.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(consumeRemaining  &&  arguments.isEmpty())  {	  else    if(consequentSplit    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
20	[BUG]  [BUGGY]  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  option.getCommandLine();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  option.getCommandLine();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  option.getCommandLine();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
21	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  option.getCommandLine();  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  option.getCommandLine();  }  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  option.getCommandLine();  }	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
22	[BUG]  [BUGGY]  else  if(continuousSplit  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  continuousSplit  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(continuousSplit  &&  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(continuousSplit  &&  arguments.hasMoreTokens())  {	  else    if(initialSplit    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  continuousSplit	20	None	replace
23	[BUG]  [BUGGY]  commandLine.addValue(option,  values);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  values);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  values);	  commandLine.addValue(values,    option);    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
24	[BUG]  [BUGGY]  commandLine.setValue(option,  values);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.setValue(option,  values);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.setValue(option,  values);	  commandLine.addValue(values,    option);    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
25	[BUG]  [BUGGY]  commandLine.removeValue(option,  values);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.removeValue(option,  values);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.removeValue(option,  values);	  commandLine.addValue(values,    option);    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
26	[BUG]  [BUGGY]  commandLine.add(option,  values);  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.add(option,  values);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.add(option,  values);	  commandLine.addValue(values,    option);    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
27	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  arguments.size()  >  1)  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSeparator  &&  arguments.size()  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  arguments.size()  >  1)  {	  else    if(subsequentSeparator    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
28	[BUG]  [BUGGY]  else  if(maximum  &&  arguments.size()  >  minimum)  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(maximum  &&  arguments.size()  >  minimum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(maximum  &&  arguments.size()  >  minimum)  {	  else    if(consequentSplit    &&    arguments.size()    >    minimum)    {    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
29	[BUG]  [BUGGY]  else  if(maximumSplit  &&  arguments.size()  >  minimum)  {  [CE]  cannot  find  symbol  maximumSplit  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(maximumSplit  &&  arguments.size()  >  minimum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(maximumSplit  &&  arguments.size()  >  minimum)  {	  else    if(consequentSplit    &&    arguments.size()    >    minimum)    {    	non-compiled	[CE]  cannot  find  symbol  maximumSplit	71	None	replace
30	[BUG]  [BUGGY]  else  if(currentSplit  &&  arguments.size()  >  minimum)  {  [CE]  cannot  find  symbol  currentSplit  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(currentSplit  &&  arguments.size()  >  minimum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSplit  &&  arguments.size()  >  minimum)  {	  else    if(consequentSplit    &&    arguments.size()    >    minimum)    {    	non-compiled	[CE]  cannot  find  symbol  currentSplit	71	None	replace
31	[BUG]  [BUGGY]  else  if(subsequentSplit  ||  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSplit  ||  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  ||  arguments.hasMoreTokens())  {	  else    if(currentSeparator    ||    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
32	[BUG]  [BUGGY]  else  if(currentSplit  ||  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  currentSplit  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(currentSplit  ||  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSplit  ||  arguments.hasMoreTokens())  {	  else    if(currentSeparator    ||    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  currentSplit	37	None	replace
33	[BUG]  [BUGGY]  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
34	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();  }  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();  }	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
35	[BUG]  [BUGGY]  final  int  argumentCount  =  arguments.size();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  argumentCount  =  arguments.size();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  argumentCount  =  arguments.size();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    argumentCount    =    arguments.size();    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
36	[BUG]  [BUGGY]  final  int  argumentCount  =  arguments.size()  -  1;  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  argumentCount  =  arguments.size()  -  1;  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  argumentCount  =  arguments.size()  -  1;	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    argumentCount    =    arguments.size();    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
37	[BUG]  [BUGGY]  final  char  argumentCount  =  arguments.size();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  char  argumentCount  =  arguments.size();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  char  argumentCount  =  arguments.size();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    argumentCount    =    arguments.size();    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
38	[BUG]  [BUGGY]  ArgumentImpl  resources  =  options.findResources();  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  ArgumentImpl  resources  =  options.findResources();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  options.findResources();	  ArgumentImpl    resources    =    option.findResources();    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
39	[BUG]  [BUGGY]  ArgumentImpl  resources  =  option.findResources(arguments);  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  ArgumentImpl  resources  =  option.findResources(arguments);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  option.findResources(arguments);	  ArgumentImpl    resources    =    option.findResources();    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
40	[BUG]  [BUGGY]  else  if(expectedSplit  &&  argumentCount  >  1)  {  [CE]  cannot  find  symbol  expectedSplit  [FE]        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(expectedSplit  &&  argumentCount  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(expectedSplit  &&  argumentCount  >  1)  {	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    else    if(subsequentSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  expectedSplit	39	None	replace
41	[BUG]  [BUGGY]  final  int  maximal  =  arguments.size();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  maximal  =  arguments.size();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  maximal  =  arguments.size();	  final    int    maximum    =    arguments.size()    +    1;    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
42	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next(),  token);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  arguments.next(),  token);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  arguments.next(),  token);	  commandLine.addValue(option,    options.next(),    token);    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
43	[BUG]  [BUGGY]  commandLine.addValue(option,  options.nextToken(),  token);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  options.nextToken(),  token);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  options.nextToken(),  token);	  commandLine.addValue(option,    options.next(),    token);    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
44	[BUG]  [BUGGY]  commandLine.addValue(option,  options.next(),  token,  nextSplit);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  options.next(),  token,  nextSplit);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  options.next(),  token,  nextSplit);	  commandLine.addValue(option,    options.next(),    token);    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
45	[BUG]  [BUGGY]  commandLine.addValue(option,  token,  arguments.nextToken());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  token,  arguments.nextToken());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  token,  arguments.nextToken());	  commandLine.addValue(option,    token,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
46	[BUG]  [BUGGY]  commandLine.addValue(option,  token,  values.next());  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  token,  values.next());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  token,  values.next());	  commandLine.addValue(option,    token,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
47	[BUG]  [BUGGY]  commandLine.addValue(option,  token,  options.next());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  token,  options.next());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  token,  options.next());	  commandLine.addValue(option,    token,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
48	[BUG]  [BUGGY]  else  if(initialSplit  &&  arguments.isEmpty())  {  [CE]  cannot  find  symbol  initialSplit  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSplit  &&  arguments.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSplit  &&  arguments.isEmpty())  {	  else    if(subsequentSeparator    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  initialSplit	83	None	replace
49	[BUG]  [BUGGY]  else  if(subsequentSeparator  ||  arguments.isEmpty())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSeparator  ||  arguments.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  ||  arguments.isEmpty())  {	  else    if(subsequentSeparator    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
50	[BUG]  [BUGGY]  else  if(afterSplit  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  afterSplit  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(afterSplit  &&  arguments.size()  >  maximum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(afterSplit  &&  arguments.size()  >  maximum)  {	  else    if(initialSplit    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  afterSplit	33	None	replace
51	[BUG]  [BUGGY]  else  if(secondSplit  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  secondSplit  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(secondSplit  &&  arguments.size()  >  maximum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(secondSplit  &&  arguments.size()  >  maximum)  {	  else    if(initialSplit    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  secondSplit	33	None	replace
52	[BUG]  [BUGGY]  commandLine.addValue(option,  token,  false);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  token,  false);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  token,  false);	  commandLine.addValue(option,    token,    true);    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
53	[BUG]  [BUGGY]  commandLine.removeValue(option,  token,  true);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.removeValue(option,  token,  true);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.removeValue(option,  token,  true);	  commandLine.addValue(option,    token,    true);    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
54	[BUG]  [BUGGY]  commandLine.setValue(option,  token,  false);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.setValue(option,  token,  false);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.setValue(option,  token,  false);	  commandLine.addValue(option,    token,    true);    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
55	[BUG]  [BUGGY]  commandLine.addValue(option,  token,  null);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  token,  null);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  token,  null);	  commandLine.addValue(option,    token,    true);    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
56	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.createCommandLine(arguments);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  option.createCommandLine(arguments);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  option.createCommandLine(arguments);	  CommandLine    commandLine    =    option.createCommandLine();    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
57	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.createCommandLine();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  options.createCommandLine();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  options.createCommandLine();	  CommandLine    commandLine    =    option.createCommandLine();    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
58	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.createCommandLine(commandLine);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  option.createCommandLine(commandLine);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  option.createCommandLine(commandLine);	  CommandLine    commandLine    =    option.createCommandLine();    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
59	[BUG]  [BUGGY]  commandLine.setValue(option,  arguments.nextToken());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.setValue(option,  arguments.nextToken());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.setValue(option,  arguments.nextToken());	  commandLine.addValue(option,    arguments.nextToken());    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
60	[BUG]  [BUGGY]  ArgumentImpl  resources  =  option.findResources(allValuesQuoted);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  ArgumentImpl  resources  =  option.findResources(allValuesQuoted);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  option.findResources(allValuesQuoted);	  ArgumentImpl    resources    =    option.findResources(defaultValuesQuoted);    	non-compiled	[CE]  'else'  without  'if'	44	None	replace
61	[BUG]  [BUGGY]  ArgumentImpl  resources  =  option.findResources(defaultValuesQuoted,  arguments);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  ArgumentImpl  resources  =  option.findResources(defaultValuesQuoted,  arguments);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  option.findResources(defaultValuesQuoted,  arguments);	  ArgumentImpl    resources    =    option.findResources(defaultValuesQuoted);    	non-compiled	[CE]  'else'  without  'if'	44	None	replace
62	[BUG]  [BUGGY]  ArgumentImpl  resources  =  options.findResources(defaultValuesQuoted);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  ArgumentImpl  resources  =  options.findResources(defaultValuesQuoted);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  options.findResources(defaultValuesQuoted);	  ArgumentImpl    resources    =    option.findResources(defaultValuesQuoted);    	non-compiled	[CE]  'else'  without  'if'	44	None	replace
63	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  commandLine.isEmpty())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSplit  &&  commandLine.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  &&  commandLine.isEmpty())  {	  else    if(subsequentSplit    &&    argument.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
64	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  option.isEmpty())  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSplit  &&  option.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  &&  option.isEmpty())  {	  else    if(subsequentSplit    &&    argument.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
65	[BUG]  [BUGGY]  commandLine.setValue(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.setValue(option,  arguments.next());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.setValue(option,  arguments.next());	  commandLine.removeValue(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	79	None	replace
66	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  arguments.size()  >  minimum)  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSeparator  &&  arguments.size()  >  minimum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  arguments.size()  >  minimum)  {	  else    if(subsequentSeparator    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
67	[BUG]  [BUGGY]  else  if(afterSplit)  {  [CE]  cannot  find  symbol  afterSplit  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(afterSplit)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(afterSplit)  {	  else    if(initialSplit)    {    	non-compiled	[CE]  cannot  find  symbol  afterSplit	3	None	replace
68	[BUG]  [BUGGY]  else  if(secondarySeparator)  {  [CE]  cannot  find  symbol  secondarySeparator  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(secondarySeparator)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(secondarySeparator)  {	  else    if(initialSplit)    {    	non-compiled	[CE]  cannot  find  symbol  secondarySeparator	3	None	replace
69	[BUG]  [BUGGY]  else  if(continuousSeparator)  {  [CE]  cannot  find  symbol  continuousSeparator  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(continuousSeparator)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(continuousSeparator)  {	  else    if(initialSplit)    {    	non-compiled	[CE]  cannot  find  symbol  continuousSeparator	3	None	replace
70	[BUG]  [BUGGY]  ArgumentImpl  resources  =  options.getAllResources();  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  ArgumentImpl  resources  =  options.getAllResources();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  options.getAllResources();	  ArgumentImpl    resources    =    options.getResources();    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
71	[BUG]  [BUGGY]  ArgumentImpl  resources  =  options.getOptionalResources();  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  ArgumentImpl  resources  =  options.getOptionalResources();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  options.getOptionalResources();	  ArgumentImpl    resources    =    options.getResources();    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
72	[BUG]  [BUGGY]  else  if(initialSeparator  &&  arguments.size()  >  minimum)  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  &&  arguments.size()  >  minimum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  arguments.size()  >  minimum)  {	  else    if(initialSeparator    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
73	[BUG]  [BUGGY]  else  if(maximumSeparator  &&  arguments.size()  >  initialSeparator)  {  [CE]  cannot  find  symbol  maximumSeparator  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(maximumSeparator  &&  arguments.size()  >  initialSeparator)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(maximumSeparator  &&  arguments.size()  >  initialSeparator)  {	  else    if(initialSeparator    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  maximumSeparator	54	None	replace
74	[BUG]  [BUGGY]  else  if(maximumSeparator  &&  initialSeparator.size()  >  maximum)  {  [CE]  cannot  find  symbol  maximumSeparator  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(maximumSeparator  &&  initialSeparator.size()  >  maximum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(maximumSeparator  &&  initialSeparator.size()  >  maximum)  {	  else    if(initialSeparator    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  maximumSeparator	54	None	replace
75	[BUG]  [BUGGY]  final  int  preferredSeparator  =  options.nextToken();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  preferredSeparator  =  options.nextToken();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  preferredSeparator  =  options.nextToken();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    preferredSeparator    =    options.nextToken();    	non-compiled	[CE]  'else'  without  'if'	41	None	replace
76	[BUG]  [BUGGY]  final  int  subsequentSeparator  =  options.nextToken();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  subsequentSeparator  =  options.nextToken();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  subsequentSeparator  =  options.nextToken();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    preferredSeparator    =    options.nextToken();    	non-compiled	[CE]  'else'  without  'if'	41	None	replace
77	[BUG]  [BUGGY]  final  char  subsequentSplit  =  options.nextToken();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  char  subsequentSplit  =  options.nextToken();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  char  subsequentSplit  =  options.nextToken();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    preferredSeparator    =    options.nextToken();    	non-compiled	[CE]  'else'  without  'if'	41	None	replace
78	[BUG]  [BUGGY]  else  if(initialSeparator  &&  arguments.nextToken().hasMoreTokens())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  &&  arguments.nextToken().hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  arguments.nextToken().hasMoreTokens())  {	  else    if(initialSeparator    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
79	[BUG]  [BUGGY]  else  if(afterSplit  &&  argumentCount  >  1)  {  [CE]  cannot  find  symbol  afterSplit  [FE]        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(afterSplit  &&  argumentCount  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(afterSplit  &&  argumentCount  >  1)  {	  else    if(currentSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  afterSplit	5	None	replace
80	[BUG]  [BUGGY]  else  if(consumeSplit  &&  argumentCount  >  1)  {  [CE]  cannot  find  symbol  consumeSplit  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(consumeSplit  &&  argumentCount  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(consumeSplit  &&  argumentCount  >  1)  {	  else    if(currentSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  consumeSplit	5	None	replace
81	[BUG]  [BUGGY]  final  String  argumentCount  =  options.get(defaultValues.size()  -  1);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  String  argumentCount  =  options.get(defaultValues.size()  -  1);  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  String  argumentCount  =  options.get(defaultValues.size()  -  1);	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    String    argumentCount    =    options.get(defaultValues.size()    -    1);    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
82	[BUG]  [BUGGY]  final  String  argumentCount  =  options.get(defaultValues.size());  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  String  argumentCount  =  options.get(defaultValues.size());  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  String  argumentCount  =  options.get(defaultValues.size());	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    String    argumentCount    =    options.get(defaultValues.size()    -    1);    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
83	[BUG]  [BUGGY]  final  int  subsequentSplitCount  =  options.get(defaultValues.size()  -  1);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  subsequentSplitCount  =  options.get(defaultValues.size()  -  1);  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  subsequentSplitCount  =  options.get(defaultValues.size()  -  1);	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    String    argumentCount    =    options.get(defaultValues.size()    -    1);    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
84	[BUG]  [BUGGY]  final  int  subsequentSeparator  =  options.get(defaultValues.size()  -  1);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  subsequentSeparator  =  options.get(defaultValues.size()  -  1);  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  subsequentSeparator  =  options.get(defaultValues.size()  -  1);	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    String    argumentCount    =    options.get(defaultValues.size()    -    1);    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
85	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(option);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(option);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  options.getCommandLine(option);	  CommandLine    commandLine    =    options.getCommandLine(commandLine);    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
86	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(commandLine,  nextSplit);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(commandLine,  nextSplit);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  options.getCommandLine(commandLine,  nextSplit);	  CommandLine    commandLine    =    options.getCommandLine(commandLine);    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
87	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.getCommandLine(commandLine);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  resources.getCommandLine(commandLine);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  resources.getCommandLine(commandLine);	  CommandLine    commandLine    =    options.getCommandLine(commandLine);    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
88	[BUG]  [BUGGY]  commandLine.addValue(option,  token  +  2);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  token  +  2);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  token  +  2);	  commandLine.addValue(option,    token    +    1);    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
89	[BUG]  [BUGGY]  commandLine.addValue(option,  token  +  3);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  token  +  3);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  token  +  3);	  commandLine.addValue(option,    token    +    1);    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
90	[BUG]  [BUGGY]  final  int  initialSeparator  =  options.nextToken();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  initialSeparator  =  options.nextToken();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  initialSeparator  =  options.nextToken();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    initialSeparator    =    options.nextToken();    	non-compiled	[CE]  'else'  without  'if'	42	None	replace
91	[BUG]  [BUGGY]  final  char  initialSeparator  =  options.nextToken();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  char  initialSeparator  =  options.nextToken();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  char  initialSeparator  =  options.nextToken();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    initialSeparator    =    options.nextToken();    	non-compiled	[CE]  'else'  without  'if'	42	None	replace
92	[BUG]  [BUGGY]  final  String  initialSeparator  =  options.nextToken();  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  String  initialSeparator  =  options.nextToken();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  String  initialSeparator  =  options.nextToken();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    initialSeparator    =    options.nextToken();    	non-compiled	[CE]  'else'  without  'if'	42	None	replace
93	[BUG]  [BUGGY]  else  if(currentSplit  ||  arguments.isEmpty())  {  [CE]  cannot  find  symbol  currentSplit  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(currentSplit  ||  arguments.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSplit  ||  arguments.isEmpty())  {	  else    if(subsequentSplit    ||    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  currentSplit	10	None	replace
94	[BUG]  [BUGGY]  else  if(initialSplit  ||  arguments.isEmpty())  {  [CE]  cannot  find  symbol  initialSplit  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSplit  ||  arguments.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSplit  ||  arguments.isEmpty())  {	  else    if(subsequentSplit    ||    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  initialSplit	10	None	replace
95	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(argumentCount);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(argumentCount);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  option.getCommandLine(argumentCount);	  CommandLine    commandLine    =    option.getCommandLine(commandLine);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
96	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(arguments);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(arguments);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  option.getCommandLine(arguments);	  CommandLine    commandLine    =    option.getCommandLine(commandLine);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
97	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  resources.hasMoreTokens())  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSplit  &&  resources.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  &&  resources.hasMoreTokens())  {	  else    if(subsequentSplit    &&    options.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
98	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  option.hasMoreTokens())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSplit  &&  option.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  &&  option.hasMoreTokens())  {	  else    if(subsequentSplit    &&    options.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
99	[BUG]  [BUGGY]  final  int  initialSeparator  =  arguments.nextToken();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  initialSeparator  =  arguments.nextToken();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  initialSeparator  =  arguments.nextToken();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    initialSeparator    =    arguments.nextToken();    	non-compiled	[CE]  'else'  without  'if'	43	None	replace
100	[BUG]  [BUGGY]  final  char  initialSeparator  =  arguments.nextToken();  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  char  initialSeparator  =  arguments.nextToken();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  char  initialSeparator  =  arguments.nextToken();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    initialSeparator    =    arguments.nextToken();    	non-compiled	[CE]  'else'  without  'if'	43	None	replace
101	[BUG]  [BUGGY]  final  String  initialSeparator  =  arguments.nextToken();  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  String  initialSeparator  =  arguments.nextToken();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  String  initialSeparator  =  arguments.nextToken();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    initialSeparator    =    arguments.nextToken();    	non-compiled	[CE]  'else'  without  'if'	43	None	replace
102	[BUG]  [BUGGY]  else  if(subsplitSeparator  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  subsplitSeparator  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsplitSeparator  &&  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsplitSeparator  &&  arguments.hasMoreTokens())  {	  else    if(consequentSeparator    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  subsplitSeparator	78	None	replace
103	[BUG]  [BUGGY]  commandLine.addValue(option,  options.getToken());  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  options.getToken());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  options.getToken());	  commandLine.addValue(option,    options.nextToken());    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
104	[BUG]  [BUGGY]  commandLine.removeValue(option);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.removeValue(option);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.removeValue(option);	  commandLine.removeValue(token);    	non-compiled	[CE]  'else'  without  'if'	47	None	replace
105	[BUG]  [BUGGY]  else  if(afterSplit  ||  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  afterSplit  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(afterSplit  ||  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(afterSplit  ||  arguments.hasMoreTokens())  {	  else    if(initialSplit    ||    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  afterSplit	36	None	replace
106	[BUG]  [BUGGY]  else  if(consumeSplit  ||  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  consumeSplit  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(consumeSplit  ||  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(consumeSplit  ||  arguments.hasMoreTokens())  {	  else    if(initialSplit    ||    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  consumeSplit	36	None	replace
107	[BUG]  [BUGGY]  ArgumentImpl  resources  =  option.getAllResources(defaultValuesQuoted);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  ArgumentImpl  resources  =  option.getAllResources(defaultValuesQuoted);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  option.getAllResources(defaultValuesQuoted);	  ArgumentImpl    resources    =    option.getAllResources();    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
108	[BUG]  [BUGGY]  else  if(producedSplit  &&  argumentCount  >  1)  {  [CE]  cannot  find  symbol  producedSplit  [FE]        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(producedSplit  &&  argumentCount  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(producedSplit  &&  argumentCount  >  1)  {	  else    if(currentSeparator    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  producedSplit	45	None	replace
109	[BUG]  [BUGGY]  else  if(initialSplit  &&  arguments.hasNext())  {  [CE]  cannot  find  symbol  initialSplit  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSplit  &&  arguments.hasNext())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSplit  &&  arguments.hasNext())  {	  else    if(subsequentSeparator    &&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  initialSplit	82	None	replace
110	[BUG]  [BUGGY]  else  if(subsequentSeparator  ||  arguments.hasNext())  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSeparator  ||  arguments.hasNext())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  ||  arguments.hasNext())  {	  else    if(subsequentSeparator    &&    arguments.hasNext())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	82	None	replace
111	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  arguments.hasNext()  ||  arguments.hasNext())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSeparator  &&  arguments.hasNext()  ||  arguments.hasNext())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  arguments.hasNext()  ||  arguments.hasNext())  {	  else    if(subsequentSeparator    &&    arguments.hasNext())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	82	None	replace
112	[BUG]  [BUGGY]  final  int  maximum  =  argumentCount.size();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  maximum  =  argumentCount.size();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  maximum  =  argumentCount.size();	  final    int    maximum    =    arguments.size()    -    1;    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
113	[BUG]  [BUGGY]  else  if(initialSeparator  &&  commandLine.looksLikeOption(subsequentSeparator))  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  &&  commandLine.looksLikeOption(subsequentSeparator))  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  commandLine.looksLikeOption(subsequentSeparator))  {	  else    if(initialSeparator)    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	68	None	replace
114	[BUG]  [BUGGY]  else  if(initialSeparator  &&  initialSplit)  {  [CE]  cannot  find  symbol  initialSplit  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  &&  initialSplit)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  initialSplit)  {	  else    if(initialSeparator)    {    	non-compiled	[CE]  cannot  find  symbol  initialSplit	68	None	replace
115	[BUG]  [BUGGY]  commandLine.addOption(option,  token);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addOption(option,  token);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addOption(option,  token);	  commandLine.add(option,    token);    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
116	[BUG]  [BUGGY]  commandLine.add(option,  token,  nextSplit);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.add(option,  token,  nextSplit);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.add(option,  token,  nextSplit);	  commandLine.add(option,    token);    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
117	[BUG]  [BUGGY]  CommandLine  commandLine  =  arguments.getArgumentLine();  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  arguments.getArgumentLine();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  arguments.getArgumentLine();	  CommandLine    commandLine    =    options.getArgumentLine();    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
118	[BUG]  [BUGGY]  else  if(consumeRemaining  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(consumeRemaining  &&  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(consumeRemaining  &&  arguments.hasMoreTokens())  {	  else    if(consumeSplit    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
119	[BUG]  [BUGGY]  else  if(currentSplit  &&  argumentCount  >  1)  {  final  int  maximum  =  arguments.size();  [CE]  cannot  find  symbol  currentSplit  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(currentSplit  &&  argumentCount  >  1)  {  final  int  maximum  =  arguments.size();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSplit  &&  argumentCount  >  1)  {  final  int  maximum  =  arguments.size();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    maximum    =    arguments.size();    	non-compiled	[CE]  cannot  find  symbol  currentSplit	40	None	replace
120	[BUG]  [BUGGY]  else  if(currentSplit  &&  argumentCount  >  1)  {  final  int  maximum  =  arguments.size();  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(currentSplit  &&  argumentCount  >  1)  {  final  int  maximum  =  arguments.size();  }  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSplit  &&  argumentCount  >  1)  {  final  int  maximum  =  arguments.size();  }	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    maximum    =    arguments.size();    	non-compiled	[CE]  'else'  without  'if'	40	None	replace
121	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.removeCommandLine();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  options.removeCommandLine();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  options.removeCommandLine();	  CommandLine    commandLine    =    option.removeCommandLine();    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
122	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.next();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  option.next();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  option.next();	  CommandLine    commandLine    =    option.removeCommandLine();    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
123	[BUG]  [BUGGY]  commandLine.setValue(option,  token.next());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.setValue(option,  token.next());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.setValue(option,  token.next());	  commandLine.addValue(token,    option.next());    	non-compiled	[CE]  'else'  without  'if'	55	None	replace
124	[BUG]  [BUGGY]  commandLine.removeValue(option,  token.next());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.removeValue(option,  token.next());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.removeValue(option,  token.next());	  commandLine.addValue(token,    option.next());    	non-compiled	[CE]  'else'  without  'if'	55	None	replace
125	[BUG]  [BUGGY]  commandLine.add(option,  token.next());  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.add(option,  token.next());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.add(option,  token.next());	  commandLine.addValue(token,    option.next());    	non-compiled	[CE]  'else'  without  'if'	55	None	replace
126	[BUG]  [BUGGY]  commandLine.setValue(option,  token,  true);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.setValue(option,  token,  true);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.setValue(option,  token,  true);	  commandLine.setValue(option,    token);    	non-compiled	[CE]  'else'  without  'if'	30	None	replace
127	[BUG]  [BUGGY]  else  if(minimumSplit  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  minimumSplit  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(minimumSplit  &&  arguments.size()  >  maximum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(minimumSplit  &&  arguments.size()  >  maximum)  {	  else    if(subsequentSplit    &&    arguments.size()    >    minimum)    {    	non-compiled	[CE]  cannot  find  symbol  minimumSplit	32	None	replace
128	[BUG]  [BUGGY]  else  if(minimumSplit  &&  arguments.size()  >  minimum)  {  [CE]  cannot  find  symbol  minimumSplit  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(minimumSplit  &&  arguments.size()  >  minimum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(minimumSplit  &&  arguments.size()  >  minimum)  {	  else    if(subsequentSplit    &&    arguments.size()    >    minimum)    {    	non-compiled	[CE]  cannot  find  symbol  minimumSplit	32	None	replace
129	[BUG]  [BUGGY]  commandLine.addValue(option,  token.nextToken());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  token.nextToken());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  token.nextToken());	  commandLine.addValue(option,    token.next());    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
130	[BUG]  [BUGGY]  else  if(initialSeparator  ||  arguments.nextToken().hasMoreTokens())  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  ||  arguments.nextToken().hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  ||  arguments.nextToken().hasMoreTokens())  {	  else    if(initialSeparator    ||    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
131	[BUG]  [BUGGY]  final  int  subsequentSeparator  =  options.get(defaultValues.size());  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  subsequentSeparator  =  options.get(defaultValues.size());  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  subsequentSeparator  =  options.get(defaultValues.size());	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    String    argumentCount    =    options.get(defaultValues.size());    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
132	[BUG]  [BUGGY]  final  int  subsequentSplitCount  =  options.get(defaultValues.size());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  subsequentSplitCount  =  options.get(defaultValues.size());  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  subsequentSplitCount  =  options.get(defaultValues.size());	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    String    argumentCount    =    options.get(defaultValues.size());    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
133	[BUG]  [BUGGY]  final  int  subsequentSplit  =  options.get(defaultValues.size());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  subsequentSplit  =  options.get(defaultValues.size());  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  subsequentSplit  =  options.get(defaultValues.size());	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    String    argumentCount    =    options.get(defaultValues.size());    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
134	[BUG]  [BUGGY]  else  if(secondSplit  &&  argumentCount  >  1)  {  [CE]  cannot  find  symbol  secondSplit  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(secondSplit  &&  argumentCount  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(secondSplit  &&  argumentCount  >  1)  {	  else    if(initialSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  secondSplit	7	None	replace
135	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  resources.hasMoreTokens())  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSeparator  &&  resources.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  resources.hasMoreTokens())  {	  else    if(subsequentSeparator    &&    options.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
136	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  option.hasMoreTokens())  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSeparator  &&  option.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  option.hasMoreTokens())  {	  else    if(subsequentSeparator    &&    options.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
137	[BUG]  [BUGGY]  commandLine.addValue(option,  value);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  value);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  value);	  commandLine.addValue(token,    value);    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
138	[BUG]  [BUGGY]  commandLine.setValue(token,  value);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.setValue(token,  value);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.setValue(token,  value);	  commandLine.addValue(token,    value);    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
139	[BUG]  [BUGGY]  commandLine.addToken(token,  value);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addToken(token,  value);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addToken(token,  value);	  commandLine.addValue(token,    value);    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
140	[BUG]  [BUGGY]  else  if(initialSplit  &&  arguments.size()  >  1)  {  [CE]  cannot  find  symbol  initialSplit  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSplit  &&  arguments.size()  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSplit  &&  arguments.size()  >  1)  {	  else    if(subsequentSplit    &&    arguments.size()    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  initialSplit	6	None	replace
141	[BUG]  [BUGGY]  else  if(currentSplit  &&  arguments.size()  >  1)  {  [CE]  cannot  find  symbol  currentSplit  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(currentSplit  &&  arguments.size()  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSplit  &&  arguments.size()  >  1)  {	  else    if(subsequentSplit    &&    arguments.size()    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  currentSplit	6	None	replace
142	[BUG]  [BUGGY]  else  if(afterSplit  &&  arguments.size()  >  1)  {  [CE]  cannot  find  symbol  afterSplit  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(afterSplit  &&  arguments.size()  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(afterSplit  &&  arguments.size()  >  1)  {	  else    if(subsequentSplit    &&    arguments.size()    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  afterSplit	6	None	replace
143	[BUG]  [BUGGY]  commandLine.addValue(token,  values);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(token,  values);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(token,  values);	  commandLine.addValue(values,    token);    	non-compiled	[CE]  'else'  without  'if'	56	None	replace
144	[BUG]  [BUGGY]  commandLine.addValue(values,  token,  0);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(values,  token,  0);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(values,  token,  0);	  commandLine.addValue(values,    token);    	non-compiled	[CE]  'else'  without  'if'	56	None	replace
145	[BUG]  [BUGGY]  commandLine.addValue(values,  token,  nextSplit);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(values,  token,  nextSplit);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(values,  token,  nextSplit);	  commandLine.addValue(values,    token);    	non-compiled	[CE]  'else'  without  'if'	56	None	replace
146	[BUG]  [BUGGY]  commandLine.add(option,  token  +  1);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.add(option,  token  +  1);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.add(option,  token  +  1);	  commandLine.add(option,    token);    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
147	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  options.isEmpty())  {  [CE]  cannot  find  symbol  options  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSeparator  &&  options.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  options.isEmpty())  {	  else    if(subsequentSeparator    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  options	83	None	replace
148	[BUG]  [BUGGY]  else  if(initialSeparator  &&  arguments.hasNext())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  &&  arguments.hasNext())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  arguments.hasNext())  {	  else    if(subsequentSeparator    &&    arguments.hasNext())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	82	None	replace
149	[BUG]  [BUGGY]  ArgumentImpl  resources  =  option.getAllValues();  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  ArgumentImpl  resources  =  option.getAllValues();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  option.getAllValues();	  ArgumentImpl    resources    =    option.getAllResources();    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
150	[BUG]  [BUGGY]  else  if(currentSeparator  &&  arguments.isEmpty())  {  [CE]  cannot  find  symbol  currentSeparator  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(currentSeparator  &&  arguments.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSeparator  &&  arguments.isEmpty())  {	  else    if(currentSplit    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  currentSeparator	12	None	replace
151	[BUG]  [BUGGY]  else  if(consequentSeparator  &&  arguments.isEmpty())  {  [CE]  cannot  find  symbol  consequentSeparator  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(consequentSeparator  &&  arguments.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(consequentSeparator  &&  arguments.isEmpty())  {	  else    if(currentSplit    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  consequentSeparator	12	None	replace
152	[BUG]  [BUGGY]  else  if(afterSeparator  &&  arguments.isEmpty())  {  [CE]  cannot  find  symbol  afterSeparator  [FE]                      ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(afterSeparator  &&  arguments.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(afterSeparator  &&  arguments.isEmpty())  {	  else    if(currentSplit    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  afterSeparator	12	None	replace
153	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(commandLine);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(commandLine);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  options.getArgumentLine(commandLine);	  CommandLine    commandLine    =    options.getArgumentLine();    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
154	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	add	else  if(commandLine.looksLikeOption(allValuesQuoted))  {	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    else    if(subsequentSplit    &&    argumentCount    >    1)    {    	compilable	  [FE]  ComparisonFailure  	39	1	replace
155	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted))  {	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    else    if(subsequentSplit    &&    argumentCount    >    1)    {    	compilable	  [FE]  ComparisonFailure  	39	1	replace
156	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option))  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(commandLine.looksLikeOption(option))  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(commandLine.looksLikeOption(option))  {	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    else    if(subsequentSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	39	None	replace
157	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(commandLine.looksLikeOption(null))  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	add	else  if(commandLine.looksLikeOption(null))  {	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    else    if(subsequentSplit    &&    argumentCount    >    1)    {    	compilable	  [FE]  ComparisonFailure  	39	1	replace
158	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(null))  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(commandLine.looksLikeOption(null))  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(commandLine.looksLikeOption(null))  {	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    else    if(subsequentSplit    &&    argumentCount    >    1)    {    	compilable	  [FE]  ComparisonFailure  	39	1	replace
159	[BUG]  [BUGGY]  final  int  initialSeparator  =  arguments.size();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  initialSeparator  =  arguments.size();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  initialSeparator  =  arguments.size();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    argumentCount    =    arguments.size();    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
160	[BUG]  [BUGGY]  final  char  subsequentSplit  =  arguments.size();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  char  subsequentSplit  =  arguments.size();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  char  subsequentSplit  =  arguments.size();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    argumentCount    =    arguments.size();    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
161	[BUG]  [BUGGY]  ArgumentImpl  resources  =  options.getOptions();  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  ArgumentImpl  resources  =  options.getOptions();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  options.getOptions();	  ArgumentImpl    resources    =    options.getResources();    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
162	[BUG]  [BUGGY]  else  if(maximum  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(maximum  &&  arguments.size()  >  maximum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(maximum  &&  arguments.size()  >  maximum)  {	  else    if(initialSplit    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
163	[BUG]  [BUGGY]  else  if(afterSeparator  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  afterSeparator  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(afterSeparator  &&  arguments.size()  >  maximum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(afterSeparator  &&  arguments.size()  >  maximum)  {	  else    if(initialSplit    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  afterSeparator	33	None	replace
164	[BUG]  [BUGGY]  commandLine.removeValue(token,  option);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.removeValue(token,  option);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.removeValue(token,  option);	  commandLine.removeValue(option,    token);    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
165	[BUG]  [BUGGY]  Final  int  maximum  =  arguments.size();  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  Final  int  maximum  =  arguments.size();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	Final  int  maximum  =  arguments.size();	  final    int    maximum    =    arguments.size()    +    1;    	non-compiled	[CE]  not  a  statement	26	None	replace
166	[BUG]  [BUGGY]  else  if(initialSeparator  &&  argumentCount  >  1)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  &&  argumentCount  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  argumentCount  >  1)  {	  else    if(subsequentSeparator    &&    argumentCount    >    1)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	69	None	replace
167	[BUG]  [BUGGY]  commandLine.addValue(option,  token).next();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  token).next();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  token).next();	  commandLine.addValue(token,    option.next());    	non-compiled	[CE]  'else'  without  'if'	55	None	replace
168	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(commandLine,  token);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(commandLine,  token);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  options.getCommandLine(commandLine,  token);	  CommandLine    commandLine    =    options.getCommandLine(commandLine);    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
169	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(commandLine,  arguments.next());  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(commandLine,  arguments.next());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  options.getCommandLine(commandLine,  arguments.next());	  CommandLine    commandLine    =    options.getCommandLine(commandLine);    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
170	[BUG]  [BUGGY]  else  if(proposedSeparator  &&  argumentCount  >  1)  {  [CE]  cannot  find  symbol  proposedSeparator  [FE]        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(proposedSeparator  &&  argumentCount  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(proposedSeparator  &&  argumentCount  >  1)  {	  else    if(proposedSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  proposedSeparator	72	None	replace
171	[BUG]  [BUGGY]  else  if(minimumSeparator  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  minimumSeparator  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(minimumSeparator  &&  arguments.size()  >  maximum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(minimumSeparator  &&  arguments.size()  >  maximum)  {	  else    if(subsequentSplit    &&    arguments.size()    >    minimum)    {    	non-compiled	[CE]  cannot  find  symbol  minimumSeparator	32	None	replace
172	[BUG]  [BUGGY]  else  if(minimumSeparator  &&  arguments.size()  >  minimum)  {  [CE]  cannot  find  symbol  minimumSeparator  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(minimumSeparator  &&  arguments.size()  >  minimum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(minimumSeparator  &&  arguments.size()  >  minimum)  {	  else    if(subsequentSplit    &&    arguments.size()    >    minimum)    {    	non-compiled	[CE]  cannot  find  symbol  minimumSeparator	32	None	replace
173	[BUG]  [BUGGY]  final  Short>  commandLine  =  options.next();  [CE]  <identifier>  expected  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  Short>  commandLine  =  options.next();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  Short>  commandLine  =  options.next();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    Short>    commandLine    =    options.next();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
174	[BUG]  [BUGGY]  final  int  subsequentSeparator  =  options.next();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  subsequentSeparator  =  options.next();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  subsequentSeparator  =  options.next();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    Short>    commandLine    =    options.next();    	non-compiled	[CE]  'else'  without  'if'	61	None	replace
175	[BUG]  [BUGGY]  else  if(expectedSplit  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  expectedSplit  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(expectedSplit  &&  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(expectedSplit  &&  arguments.hasMoreTokens())  {	  else    if(consumeSplit    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  expectedSplit	22	None	replace
176	[BUG]  [BUGGY]  else  if(null  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(null  &&  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(null  &&  arguments.hasMoreTokens())  {	  else    if(currentSeparator    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
177	[BUG]  [BUGGY]  final  char  subsequentSeparator  =  options.nextToken();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  char  subsequentSeparator  =  options.nextToken();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  char  subsequentSeparator  =  options.nextToken();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    initialSeparator    =    options.nextToken();    	non-compiled	[CE]  'else'  without  'if'	42	None	replace
178	[BUG]  [BUGGY]  commandLine.addValue(token);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(token);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(token);	  commandLine.removeValue(token);    	non-compiled	[CE]  'else'  without  'if'	47	None	replace
179	[BUG]  [BUGGY]  commandLine.setValue(token);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.setValue(token);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.setValue(token);	  commandLine.removeValue(token);    	non-compiled	[CE]  'else'  without  'if'	47	None	replace
180	[BUG]  [BUGGY]  else  if(initialSeparator  &&  options.hasMoreTokens())  {  [CE]  cannot  find  symbol  options  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  &&  options.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  options.hasMoreTokens())  {	  else    if(subsequentSeparator    &&    options.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  options	59	None	replace
181	[BUG]  [BUGGY]  else  if(currentSeparator  &&  arguments.size()  >  minimum)  {  [CE]  cannot  find  symbol  currentSeparator  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(currentSeparator  &&  arguments.size()  >  minimum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSeparator  &&  arguments.size()  >  minimum)  {	  else    if(consequentSplit    &&    arguments.size()    >    minimum)    {    	non-compiled	[CE]  cannot  find  symbol  currentSeparator	71	None	replace
182	[BUG]  [BUGGY]  final  ComparationFailure  <  ComparisonFailure>  commandLine  =  options.next();  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  ComparationFailure  <  ComparisonFailure>  commandLine  =  options.next();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  ComparationFailure  <  ComparisonFailure>  commandLine  =  options.next();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    options.next();    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
183	[BUG]  [BUGGY]  commandLine.removeValue(token,  true);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.removeValue(token,  true);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.removeValue(token,  true);	  commandLine.addValue(option,    token,    true);    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
184	[BUG]  [BUGGY]  final  int  maximum  =  options.size();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  maximum  =  options.size();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  maximum  =  options.size();	  final    int    maximum    =    arguments.size()    -    1;    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
185	[BUG]  [BUGGY]  else  if(maximumSeparator  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  maximumSeparator  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(maximumSeparator  &&  arguments.size()  >  maximum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(maximumSeparator  &&  arguments.size()  >  maximum)  {	  else    if(initialSeparator    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  maximumSeparator	54	None	replace
186	[BUG]  [BUGGY]  commandLine.setValue(token,  option);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.setValue(token,  option);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.setValue(token,  option);	  commandLine.setValue(option,    token);    	non-compiled	[CE]  'else'  without  'if'	30	None	replace
187	[BUG]  [BUGGY]  else  if(maximum  &&  subsequentSeparator  >  1)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(maximum  &&  subsequentSeparator  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(maximum  &&  subsequentSeparator  >  1)  {	  else    if(initialSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	7	None	replace
188	[BUG]  [BUGGY]  else  if(afterSeparator  &&  argumentCount  >  1)  {  [CE]  cannot  find  symbol  afterSeparator  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(afterSeparator  &&  argumentCount  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(afterSeparator  &&  argumentCount  >  1)  {	  else    if(initialSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  afterSeparator	7	None	replace
189	[BUG]  [BUGGY]  else  if(afterSeparator  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  afterSeparator  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(afterSeparator  &&  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(afterSeparator  &&  arguments.hasMoreTokens())  {	  else    if(initialSplit    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  afterSeparator	20	None	replace
190	[BUG]  [BUGGY]  else  if(pendingSeparator  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  pendingSeparator  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(pendingSeparator  &&  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(pendingSeparator  &&  arguments.hasMoreTokens())  {	  else    if(initialSplit    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  pendingSeparator	20	None	replace
191	[BUG]  [BUGGY]  else  if(afterSequentSeparator)  {  [CE]  cannot  find  symbol  afterSequentSeparator  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(afterSequentSeparator)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(afterSequentSeparator)  {	  else    if(initialSplit)    {    	non-compiled	[CE]  cannot  find  symbol  afterSequentSeparator	3	None	replace
192	[BUG]  [BUGGY]  else  if(pendingSeparator)  {  [CE]  cannot  find  symbol  pendingSeparator  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(pendingSeparator)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(pendingSeparator)  {	  else    if(initialSplit)    {    	non-compiled	[CE]  cannot  find  symbol  pendingSeparator	3	None	replace
193	[BUG]  [BUGGY]  else  if(currentSeparator)  {  [CE]  cannot  find  symbol  currentSeparator  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(currentSeparator)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSeparator)  {	  else    if(initialSplit)    {    	non-compiled	[CE]  cannot  find  symbol  currentSeparator	3	None	replace
194	[BUG]  [BUGGY]  else  if(initialSeparator  &&  options.isEmpty())  {  [CE]  cannot  find  symbol  options  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  &&  options.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  options.isEmpty())  {	  else    if(initialSeparator    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  options	51	None	replace
195	[BUG]  [BUGGY]  else  if(initialSeparator  &&  arguments.size()  >  1)  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  &&  arguments.size()  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  arguments.size()  >  1)  {	  else    if(subsequentSplit    &&    arguments.size()    >    1)    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
196	[BUG]  [BUGGY]  else  if(initialSeparator  &&  initialSeparator.startsWith( "- "))  {  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  &&  initialSeparator.startsWith( "- "))  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  initialSeparator.startsWith( "- "))  {	  else    if(initialSeparator)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	68	None	replace
197	[BUG]  [BUGGY]  else  if(initialSeparator  &&  initialSeparator.hasMoreTokens())  {  [CE]  char  cannot  be  dereferenced  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  &&  initialSeparator.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  initialSeparator.hasMoreTokens())  {	  else    if(initialSeparator)    {    	non-compiled	[CE]  char  cannot  be  dereferenced	68	None	replace
198	[BUG]  [BUGGY]  final  int  initialSeparator  =  options.get(defaultValues.size()  -  1);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  initialSeparator  =  options.get(defaultValues.size()  -  1);  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  initialSeparator  =  options.get(defaultValues.size()  -  1);	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    String    argumentCount    =    options.get(defaultValues.size()    -    1);    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
199	[BUG]  [BUGGY]  else  if(pendingSeparator  ||  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  pendingSeparator  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(pendingSeparator  ||  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(pendingSeparator  ||  arguments.hasMoreTokens())  {	  else    if(initialSplit    ||    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  pendingSeparator	36	None	replace
200	[BUG]  [BUGGY]  commandLine.addValue(option,  values.nextToken());  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  values.nextToken());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  values.nextToken());	  commandLine.addValue(option,    options.nextToken());    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
201	[BUG]  [BUGGY]  commandLine.addValue(option,  options.next(),  token,  subsequentSplit);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  options.next(),  token,  subsequentSplit);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  options.next(),  token,  subsequentSplit);	  commandLine.addValue(option,    options.next(),    token);    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
202	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.createArgumentLine();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  option.createArgumentLine();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  option.createArgumentLine();	  CommandLine    commandLine    =    option.getArgumentLine();    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
203	[BUG]  [BUGGY]  final  ComparisonFailure  <  ComparFailure>  commandLine  =  option.getCommandLine();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  ComparisonFailure  <  ComparFailure>  commandLine  =  option.getCommandLine();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  ComparisonFailure  <  ComparFailure>  commandLine  =  option.getCommandLine();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
204	[BUG]  [BUGGY]  final  ComparFailure  <  ComparisonFailure>  commandLine  =  option.getCommandLine();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  ComparFailure  <  ComparisonFailure>  commandLine  =  option.getCommandLine();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  ComparFailure  <  ComparisonFailure>  commandLine  =  option.getCommandLine();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
205	[BUG]  [BUGGY]  else  if(option.hasOptionalArg())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(option.hasOptionalArg())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(option.hasOptionalArg())  {	  else    if(subsequentSeparator    &&    option.hasOptionalArg())    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
206	[BUG]  [BUGGY]  else  if(currentSeparator  ||  arguments.nextToken())  {  [CE]  cannot  find  symbol  currentSeparator  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(currentSeparator  ||  arguments.nextToken())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSeparator  ||  arguments.nextToken())  {	  else    if(subsequentSeparator    ||    arguments.nextToken())    {    	non-compiled	[CE]  cannot  find  symbol  currentSeparator	70	None	replace
207	[BUG]  [BUGGY]  commandLine.addValue(token,  arguments.nextToken());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(token,  arguments.nextToken());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(token,  arguments.nextToken());	  commandLine.addValue(option,    arguments.nextToken());    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
208	[BUG]  [BUGGY]  commandLine.addValue(token,  options.nextToken());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(token,  options.nextToken());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(token,  options.nextToken());	  commandLine.addValue(option,    arguments.nextToken());    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
209	[BUG]  [BUGGY]  else  if(proposedSequentSeparator  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  proposedSequentSeparator  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(proposedSequentSeparator  &&  arguments.size()  >  maximum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(proposedSequentSeparator  &&  arguments.size()  >  maximum)  {	  else    if(currentSplit    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  proposedSequentSeparator	14	None	replace
210	[BUG]  [BUGGY]  final  ComparisonFailure  <  ComparFailure>  commandLine  =  options.getCommandLine();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  ComparisonFailure  <  ComparFailure>  commandLine  =  options.getCommandLine();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  ComparisonFailure  <  ComparFailure>  commandLine  =  options.getCommandLine();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
211	[BUG]  [BUGGY]  final  ComparationFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  ComparationFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  ComparationFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
212	[BUG]  [BUGGY]  final  int  maximum  =  argument.size();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  maximum  =  argument.size();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  maximum  =  argument.size();	  final    int    maximum    =    arguments.size()    -    2;    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
213	[BUG]  [BUGGY]  final  int  initialSeparator  =  options.get(defaultValues.size());  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  initialSeparator  =  options.get(defaultValues.size());  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  initialSeparator  =  options.get(defaultValues.size());	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    String    argumentCount    =    options.get(defaultValues.size());    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
214	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(commandLine,  token);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(commandLine,  token);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  option.getCommandLine(commandLine,  token);	  CommandLine    commandLine    =    option.getCommandLine(commandLine);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
215	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(commandLine,  arguments);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(commandLine,  arguments);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  option.getCommandLine(commandLine,  arguments);	  CommandLine    commandLine    =    option.getCommandLine(commandLine);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
216	[BUG]  [BUGGY]  final  char  subsequentSeparator  =  arguments.nextToken();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  char  subsequentSeparator  =  arguments.nextToken();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  char  subsequentSeparator  =  arguments.nextToken();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    initialSeparator    =    arguments.nextToken();    	non-compiled	[CE]  'else'  without  'if'	43	None	replace
217	[BUG]  [BUGGY]  else  if(option.hasArg()  &&  subsequentSeparator)  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(option.hasArg()  &&  subsequentSeparator)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(option.hasArg()  &&  subsequentSeparator)  {	  else    if(subsequentSeparator    &&    option.hasArg())    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
218	[BUG]  [BUGGY]  else  if(option  &&  subsequentSeparator.hasArg())  {  [CE]  char  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(option  &&  subsequentSeparator.hasArg())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(option  &&  subsequentSeparator.hasArg())  {	  else    if(subsequentSeparator    &&    option.hasArg())    {    	non-compiled	[CE]  char  cannot  be  dereferenced	66	None	replace
219	[BUG]  [BUGGY]  else  if(proposedSequentSeparator  &&  argumentCount  >  1)  {  [CE]  cannot  find  symbol  proposedSequentSeparator  [FE]        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(proposedSequentSeparator  &&  argumentCount  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(proposedSequentSeparator  &&  argumentCount  >  1)  {	  else    if(currentSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  proposedSequentSeparator	5	None	replace
220	[BUG]  [BUGGY]  else  if(maximumSeparator  &&  argumentCount  >  1)  {  [CE]  cannot  find  symbol  maximumSeparator  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(maximumSeparator  &&  argumentCount  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(maximumSeparator  &&  argumentCount  >  1)  {	  else    if(currentSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  maximumSeparator	5	None	replace
221	[BUG]  [BUGGY]  else  if(null  ||  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(null  ||  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(null  ||  arguments.hasMoreTokens())  {	  else    if(currentSeparator    ||    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
222	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.createCommandLine(null);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  option.createCommandLine(null);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  option.createCommandLine(null);	  CommandLine    commandLine    =    option.createCommandLine();    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
223	[BUG]  [BUGGY]  commandLine.addValue(value,  token);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(value,  token);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(value,  token);	  commandLine.addValue(token,    value);    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
224	[BUG]  [BUGGY]  final  char  preferredSeparator  =  options.nextToken();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  char  preferredSeparator  =  options.nextToken();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  char  preferredSeparator  =  options.nextToken();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    preferredSeparator    =    options.nextToken();    	non-compiled	[CE]  'else'  without  'if'	41	None	replace
225	[BUG]  [BUGGY]  final  String  subsequentSeparator  =  options.nextToken();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  String  subsequentSeparator  =  options.nextToken();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  String  subsequentSeparator  =  options.nextToken();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    preferredSeparator    =    options.nextToken();    	non-compiled	[CE]  'else'  without  'if'	41	None	replace
226	[BUG]  [BUGGY]  else  if(proposedSeparator  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  proposedSeparator  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(proposedSeparator  &&  arguments.size()  >  maximum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(proposedSeparator  &&  arguments.size()  >  maximum)  {	  else    if(currentSeparator    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  proposedSeparator	15	None	replace
227	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.next();  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  options.next();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  options.next();	  CommandLine    commandLine    =    options.getArgumentLine();    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
228	[BUG]  [BUGGY]  final  ComparableFailure  <  ComparisonFailure>  commandLine  =  options.next();  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  ComparableFailure  <  ComparisonFailure>  commandLine  =  options.next();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  ComparableFailure  <  ComparisonFailure>  commandLine  =  options.next();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    options.next();    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
229	[BUG]  [BUGGY]  else  if(subsequentSeparator  ||  arguments.next())  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSeparator  ||  arguments.next())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  ||  arguments.next())  {	  else    if(subsequentSeparator    ||    arguments.nextToken())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	70	None	replace
230	[BUG]  [BUGGY]  else  if(subsequentSplit  ||  argument.isEmpty())  {  [CE]  cannot  find  symbol  argument  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSplit  ||  argument.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  ||  argument.isEmpty())  {	  else    if(subsequentSplit    ||    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  argument	10	None	replace
231	[BUG]  [BUGGY]  else  if(currentSeparator  ||  arguments.isEmpty())  {  [CE]  cannot  find  symbol  currentSeparator  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(currentSeparator  ||  arguments.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSeparator  ||  arguments.isEmpty())  {	  else    if(subsequentSplit    ||    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  currentSeparator	10	None	replace
232	[BUG]  [BUGGY]  ArgumentImpl  resources  =  options.getResources(defaultValuesQuoted);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  ArgumentImpl  resources  =  options.getResources(defaultValuesQuoted);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  options.getResources(defaultValuesQuoted);	  ArgumentImpl    resources    =    options.getResources();    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
233	[BUG]  [BUGGY]  commandLine.removeValue(values,  option);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.removeValue(values,  option);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.removeValue(values,  option);	  commandLine.addValue(values,    option);    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
234	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount.isEmpty())  {  [CE]  int  cannot  be  dereferenced  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSplit  &&  argumentCount.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  &&  argumentCount.isEmpty())  {	  else    if(subsequentSplit    &&    options.isEmpty())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	50	None	replace
235	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.withArgumentLength();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  option.withArgumentLength();  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  option.withArgumentLength();	  CommandLine    commandLine    =    option.getArgumentLine();    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
236	[BUG]  [BUGGY]  else  if(secondarySeparator  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  secondarySeparator  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(secondarySeparator  &&  arguments.size()  >  maximum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(secondarySeparator  &&  arguments.size()  >  maximum)  {	  else    if(initialSeparator    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  secondarySeparator	54	None	replace
237	[BUG]  [BUGGY]  commandLine.removeValue(option,  options.nextToken());  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.removeValue(option,  options.nextToken());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.removeValue(option,  options.nextToken());	  commandLine.addValue(option,    options.nextToken());    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
238	[BUG]  [BUGGY]  else  if(reversedSeparator)  {  [CE]  cannot  find  symbol  reversedSeparator  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(reversedSeparator)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(reversedSeparator)  {	  else    if(initialSplit)    {    	non-compiled	[CE]  cannot  find  symbol  reversedSeparator	3	None	replace
239	[BUG]  [BUGGY]  else  if(proposedSequentSeparator)  {  [CE]  cannot  find  symbol  proposedSequentSeparator  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(proposedSequentSeparator)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(proposedSequentSeparator)  {	  else    if(initialSplit)    {    	non-compiled	[CE]  cannot  find  symbol  proposedSequentSeparator	3	None	replace
240	[BUG]  [BUGGY]  commandLine.moveValue(option,  options.next());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.moveValue(option,  options.next());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.moveValue(option,  options.next());	  commandLine.removeValue(token,    options.next());    	non-compiled	[CE]  'else'  without  'if'	46	None	replace
241	[BUG]  [BUGGY]  ArgumentImpl  resources  =  option.findResources(argumentCount);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  ArgumentImpl  resources  =  option.findResources(argumentCount);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  option.findResources(argumentCount);	  ArgumentImpl    resources    =    option.findResources();    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
242	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  argumentCount  >  maximum)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSeparator  &&  argumentCount  >  maximum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  argumentCount  >  maximum)  {	  else    if(subsequentSeparator    &&    argumentCount    >    1)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	69	None	replace
243	[BUG]  [BUGGY]  else  if(subsequentSplit)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  option.getCommandLine();  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSplit)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  option.getCommandLine();  }  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  option.getCommandLine();  }	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
244	[BUG]  [BUGGY]  else  if(currentSeparator  ==  DEFAULT_INITIAL_SEPARATOR)  {  [CE]  cannot  find  symbol  currentSeparator  [FE]        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(currentSeparator  ==  DEFAULT_INITIAL_SEPARATOR)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSeparator  ==  DEFAULT_INITIAL_SEPARATOR)  {	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    else    if(subsequentSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  currentSeparator	39	None	replace
245	[BUG]  [BUGGY]  commandLine.setValue(values,  token);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.setValue(values,  token);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.setValue(values,  token);	  commandLine.addValue(values,    token);    	non-compiled	[CE]  'else'  without  'if'	56	None	replace
246	[BUG]  [BUGGY]  commandLine.setValue(token,  values);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.setValue(token,  values);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.setValue(token,  values);	  commandLine.addValue(values,    token);    	non-compiled	[CE]  'else'  without  'if'	56	None	replace
247	[BUG]  [BUGGY]  else  if(currentSeparator  &&  arguments.size()  >  1)  {  [CE]  cannot  find  symbol  currentSeparator  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(currentSeparator  &&  arguments.size()  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSeparator  &&  arguments.size()  >  1)  {	  else    if(subsequentSplit    &&    arguments.size()    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  currentSeparator	6	None	replace
248	[BUG]  [BUGGY]  else  if(consequentSplit  &&  arguments.size()  >  1)  {  [CE]  cannot  find  symbol  consequentSplit  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(consequentSplit  &&  arguments.size()  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(consequentSplit  &&  arguments.size()  >  1)  {	  else    if(subsequentSplit    &&    arguments.size()    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  consequentSplit	6	None	replace
249	[BUG]  [BUGGY]  final  boolean  subsequentSplit  =  commandLine.looksLikeOption(secondSeparator);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  boolean  subsequentSplit  =  commandLine.looksLikeOption(secondSeparator);  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  boolean  subsequentSplit  =  commandLine.looksLikeOption(secondSeparator);	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    Short>    commandLine    =    options.next();    	non-compiled	[CE]  'else'  without  'if'	61	None	replace
250	[BUG]  [BUGGY]  commandLine.addValue(option,  token.remove());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.addValue(option,  token.remove());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  token.remove());	  commandLine.addValue(option,    token.next());    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
251	[BUG]  [BUGGY]  final  int  argumentCount  =  options.get(defaultValues.size());  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  argumentCount  =  options.get(defaultValues.size());  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  argumentCount  =  options.get(defaultValues.size());	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    String    argumentCount    =    options.get(defaultValues.size());    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
252	[BUG]  [BUGGY]  else  if(proposedSeparator  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  proposedSeparator  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(proposedSeparator  &&  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(proposedSeparator  &&  arguments.hasMoreTokens())  {	  else    if(initialSplit    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  proposedSeparator	20	None	replace
253	[BUG]  [BUGGY]  else  if(secondarySeparator  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  secondarySeparator  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(secondarySeparator  &&  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(secondarySeparator  &&  arguments.hasMoreTokens())  {	  else    if(initialSplit    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  secondarySeparator	20	None	replace
254	[BUG]  [BUGGY]  else  if(subsequentSplit)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSplit)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();  }  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();  }	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
255	[BUG]  [BUGGY]  else  if(subsequentSplit)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSplit)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    ComparisonFailure    <    ComparisonFailure>    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
256	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentLine.isEmpty())  {  [CE]  cannot  find  symbol  argumentLine  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSplit  &&  argumentLine.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  &&  argumentLine.isEmpty())  {	  else    if(subsequentSplit    &&    argument.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  argumentLine	81	None	replace
257	[BUG]  [BUGGY]  else  if(initialSeparator  &&  option.hasOptionalArg())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  &&  option.hasOptionalArg())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  option.hasOptionalArg())  {	  else    if(subsequentSeparator    &&    option.hasOptionalArg())    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
258	[BUG]  [BUGGY]  else  if(secondarySplit  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  secondarySplit  [FE]                  ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(secondarySplit  &&  arguments.size()  >  maximum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(secondarySplit  &&  arguments.size()  >  maximum)  {	  else    if(initialSplit    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  secondarySplit	33	None	replace
259	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.createCommandLine(argumentCount);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  CommandLine  commandLine  =  option.createCommandLine(argumentCount);  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  option.createCommandLine(argumentCount);	  CommandLine    commandLine    =    option.createCommandLine();    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
260	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  arguments.hasArg())  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(subsequentSeparator  &&  arguments.hasArg())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  arguments.hasArg())  {	  else    if(subsequentSeparator    &&    option.hasArg())    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
261	[BUG]  [BUGGY]  else  if(initialSeparator  &&  option.hasArg())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  &&  option.hasArg())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  option.hasArg())  {	  else    if(subsequentSeparator    &&    option.hasArg())    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
262	[BUG]  [BUGGY]  else  if(preservedSeparator  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  preservedSeparator  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(preservedSeparator  &&  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(preservedSeparator  &&  arguments.hasMoreTokens())  {	  else    if(currentSplit    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  preservedSeparator	53	None	replace
263	[BUG]  [BUGGY]  else  if(consequentSeparator  &&  argumentCount  >  1)  {  [CE]  cannot  find  symbol  consequentSeparator  [FE]        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(consequentSeparator  &&  argumentCount  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(consequentSeparator  &&  argumentCount  >  1)  {	  else    if(currentSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  consequentSeparator	5	None	replace
264	[BUG]  [BUGGY]  commandLine.moveValue(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  commandLine.moveValue(option,  arguments.next());  [BUGGY]      else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.moveValue(option,  arguments.next());	  commandLine.removeValue(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	79	None	replace
265	[BUG]  [BUGGY]  else  if(consequentSeparator  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  consequentSeparator  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(consequentSeparator  &&  arguments.size()  >  maximum)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(consequentSeparator  &&  arguments.size()  >  maximum)  {	  else    if(currentSplit    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  consequentSeparator	14	None	replace
266	[BUG]  [BUGGY]  else  if(secondarySeparator  &&  argumentCount  >  1)  {  [CE]  cannot  find  symbol  secondarySeparator  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(secondarySeparator  &&  argumentCount  >  1)  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(secondarySeparator  &&  argumentCount  >  1)  {	  else    if(initialSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  secondarySeparator	7	None	replace
267	[BUG]  [BUGGY]  else  if(initialSeparator  &&  argumentCount.isEmpty())  {  [CE]  int  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(initialSeparator  &&  argumentCount.isEmpty())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  argumentCount.isEmpty())  {	  else    if(initialSeparator    &&    arguments.isEmpty())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	51	None	replace
268	[BUG]  [BUGGY]  final  int  max  =  arguments.size();  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  max  =  arguments.size();  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  max  =  arguments.size();	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    int    maximum    =    arguments.size();    	non-compiled	[CE]  'else'  without  'if'	40	None	replace
269	[BUG]  [BUGGY]  final  int  argumentCount  =  options.get(defaultValues.size()  -  1);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  final  int  argumentCount  =  options.get(defaultValues.size()  -  1);  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  argumentCount  =  options.get(defaultValues.size()  -  1);	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    final    String    argumentCount    =    options.get(defaultValues.size()    -    1);    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
270	[BUG]  [BUGGY]  else  if(currentSeparator  &&  arguments.hasNext())  {  [CE]  cannot  find  symbol  currentSeparator  [FE]            ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(currentSeparator  &&  arguments.hasNext())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSeparator  &&  arguments.hasNext())  {	  else    if(subsequentSeparator    &&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  currentSeparator	82	None	replace
271	[BUG]  [BUGGY]  else  if(secondarySeparator  ||  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  secondarySeparator  [FE]              ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(secondarySeparator  ||  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(secondarySeparator  ||  arguments.hasMoreTokens())  {	  else    if(initialSplit    ||    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  secondarySeparator	36	None	replace
272	[BUG]  [BUGGY]  else  if(proposedSeparator  ||  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  proposedSeparator  [FE]                ComparisonFailure      [CONTEXT]      commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }        [BUGGY]  else  if(proposedSeparator  ||  arguments.hasMoreTokens())  {  [BUGGY]      final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(proposedSeparator  ||  arguments.hasMoreTokens())  {	  else    if(initialSplit    ||    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  proposedSeparator	36	None	replace
