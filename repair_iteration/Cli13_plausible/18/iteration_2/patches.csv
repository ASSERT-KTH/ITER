bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Validator  validator  =  values.get(defaultValue);  [CE]  cannot  find  symbol  defaultValue  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(defaultValue);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(defaultValue);	  Validator    validator    =    values.get(id);    	non-compiled	[CE]  cannot  find  symbol  defaultValue	7	None	replace
2	[BUG]  [BUGGY]  Validator  validator  =  values.get(arguments);  [CE]  cannot  find  symbol  arguments  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(arguments);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(arguments);	  Validator    validator    =    values.get(id);    	non-compiled	[CE]  cannot  find  symbol  arguments	7	None	replace
3	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  maximum);  [CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  maximum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  minimum,  maximum);	  Validator    validator    =    option.validate(values,    maximum);    	non-compiled	[CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;	10	None	replace
4	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  maximum,  minimum);  [CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  maximum,  minimum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  maximum,  minimum);	  Validator    validator    =    option.validate(values,    maximum);    	non-compiled	[CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;	10	None	replace
5	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  valueCount);  [CE]  cannot  find  symbol  valueCount  [FE]                          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  valueCount);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  minimum,  valueCount);	  Validator    validator    =    option.validate(values,    maximum);    	non-compiled	[CE]  cannot  find  symbol  valueCount	10	None	replace
6	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  maximal);  [CE]  cannot  find  symbol  maximal  [FE]                            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  maximal);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  minimum,  maximal);	  Validator    validator    =    option.validate(values,    maximum);    	non-compiled	[CE]  cannot  find  symbol  maximal	10	None	replace
7	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_CONSUME_REMAINING);    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);	  	non-compiled	[CE]  unreachable  statement	72	None	add
8	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_CONSUME_REMAINING);    Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);	  	non-compiled	[CE]  not  a  statement	72	None	add
9	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_CONSUME_REMAINING);    OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);	  	non-compiled	[CE]  cannot  find  symbol	72	None	add
10	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE;  [CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]          ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE;  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_CONSUME_REMAINING);    Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE;	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)	72	None	add
11	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_CONSUME_REMAINING);    Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);	  	non-compiled	[CE]  ';'  expected	72	None	add
12	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValues(option,  values);  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.getValues(option,  values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.getValues(option,  values);	  Validator    validator    =    commandLine.getValues(option);    	non-compiled	[CE]  incompatible  types	42	None	replace
13	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValues(option,  DEFAULT_INITIAL_SEPARATOR);  [CE]  no  suitable  method  found  for  getValues(Option,char)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.getValues(option,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.getValues(option,  DEFAULT_INITIAL_SEPARATOR);	  Validator    validator    =    commandLine.getValues(option);    	non-compiled	[CE]  no  suitable  method  found  for  getValues(Option,char)	42	None	replace
14	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValues(option,  defaultValues);  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.getValues(option,  defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.getValues(option,  defaultValues);	  Validator    validator    =    commandLine.getValues(option);    	non-compiled	[CE]  incompatible  types	42	None	replace
15	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValues(option,  valueDefaults);  [CE]  cannot  find  symbol  valueDefaults  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.getValues(option,  valueDefaults);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.getValues(option,  valueDefaults);	  Validator    validator    =    commandLine.getValues(option);    	non-compiled	[CE]  cannot  find  symbol  valueDefaults	42	None	replace
16	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_SUBSEQUENT_SEPARATOR);  [CE]  cannot  find  symbol  DEFAULT_CONSUME_REMAINING  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_SUBSEQUENT_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_SUBSEQUENT_SEPARATOR);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_CONSUME_REMAINING,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_CONSUME_REMAINING	101	None	replace
17	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_CONSUME_REMAINING,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	101	None	replace
18	[BUG]  [BUGGY]  Validator  validator  =  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_SUBSEQUENT_SEPARATOR);  [CE]  cannot  find  symbol  DEFAULT_CONSUME_REMAINING  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_SUBSEQUENT_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_SUBSEQUENT_SEPARATOR);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_CONSUME_REMAINING,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_CONSUME_REMAINING	101	None	replace
19	[BUG]  [BUGGY]  Validator  validator  =  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_CONSUME_REMAINING,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	101	None	replace
20	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(argumentCount));  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(argumentCount));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(argumentCount));	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(maximum));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
21	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(maximum));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
22	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNKNOWN_SEPARATOR,  values.get(maximum));  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNKNOWN_SEPARATOR,  values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNKNOWN_SEPARATOR,  values.get(maximum));	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(maximum));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
23	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(values.size());  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(values.size());  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(values.size());	  Validator    validator    =    new    Validator();    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	97	None	replace
24	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(values);  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(values);	  Validator    validator    =    new    Validator();    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	97	None	replace
25	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(values.size()  -  1);  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(values.size()  -  1);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(values.size()  -  1);	  Validator    validator    =    new    Validator();    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	97	None	replace
26	[BUG]  [BUGGY]  Validator  validator  =  getValues().validate(values,  minimum);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues().validate(values,  minimum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues().validate(values,  minimum);	  Validator    validator    =    getValues().validate(values);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
27	[BUG]  [BUGGY]  Validator  validator  =  getValues().validate(values,  maximum);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues().validate(values,  maximum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues().validate(values,  maximum);	  Validator    validator    =    getValues().validate(values);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
28	[BUG]  [BUGGY]  Validator  validator  =  getValues().validate(defaultValues);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues().validate(defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues().validate(defaultValues);	  Validator    validator    =    getValues().validate(values);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
29	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0),  minimum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int)  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0),  minimum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0),  minimum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    values.get(0));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int)	52	None	replace
30	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0),  maximum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int)  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0),  maximum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0),  maximum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    values.get(0));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int)	52	None	replace
31	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(1));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(1));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(1));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    values.get(0));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)	52	None	replace
32	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    values.get(0));    	non-compiled	[CE]  <identifier>  expected	52	None	replace
33	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(id));  [CE]  id  has  private  access  in  OptionImpl  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(id));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(id));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    values.get(argumentCount));    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	95	None	replace
34	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  [CE]  <identifier>  expected  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    values.get(argumentCount));    	non-compiled	[CE]  <identifier>  expected	95	None	replace
35	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR);	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
36	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNKNOWN_SEPARATOR,  DEFAULT_INITIAL_SEPARATOR);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNKNOWN_SEPARATOR,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNKNOWN_SEPARATOR,  DEFAULT_INITIAL_SEPARATOR);	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
37	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_MISSING_VALUES);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_MISSING_VALUES);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_MISSING_VALUES);	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
38	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(minimum));    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));	  	non-compiled	[CE]  unreachable  statement	76	None	add
39	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(minimum));    Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));	  	non-compiled	[CE]  not  a  statement	76	None	add
40	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(minimum));    OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));	  	non-compiled	[CE]  cannot  find  symbol	76	None	add
41	[BUG]  [BUGGY]  Validator  validator  =  null;  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(maximum));  (String)values.get(maximum));  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(maximum));  (String)values.get(maximum));  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(maximum));  (String)values.get(maximum));	          Validator    validator    =    null;    Validator    validator    =    null;    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(maximum));    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	36	None	replace
42	[BUG]  [BUGGY]  Validator  validator  =  null;  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(maximum));  (String)values.get(maximum));  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(maximum));  (String)values.get(maximum));  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(maximum));  (String)values.get(maximum));	          Validator    validator    =    null;    Validator    validator    =    null;    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(maximum));    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	36	None	replace
43	[BUG]  [BUGGY]  Validator  validator  =  null;  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  (String)values.get(maximum));  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  (String)values.get(maximum));  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  (String)values.get(maximum));	          Validator    validator    =    null;    Validator    validator    =    null;    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(maximum));    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	36	None	replace
44	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    	non-compiled	[CE]  not  a  statement	48	None	replace
45	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    	non-compiled	[CE]  not  a  statement	48	None	replace
46	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value   "[testfile.txt  [FE]    junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value     "[testfile.txt    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  }  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	add	if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  }	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value   "[testfile.txt  	59	1	replace
47	[BUG]  [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  }  [FE]  junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value   "[testfile.txt  [FE]    junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value     "[testfile.txt    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  }  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  }	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value   "[testfile.txt  	59	1	replace
48	[BUG]  [BUGGY]  Validator  validator  =  values.get(defaultValues.size()  -  1);  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(defaultValues.size()  -  1);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(defaultValues.size()  -  1);	  Validator    validator    =    values.get(defaultValues.size());    	non-compiled	[CE]  incompatible  types	79	None	replace
49	[BUG]  [BUGGY]  Validator  validator  =  defaultValues.get(values.size()  -  1);  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  defaultValues.get(values.size()  -  1);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  defaultValues.get(values.size()  -  1);	  Validator    validator    =    values.get(defaultValues.size());    	non-compiled	[CE]  incompatible  types	79	None	replace
50	[BUG]  [BUGGY]  Validator  validator  =  values.get(values.size()  -  1);  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(values.size()  -  1);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(values.size()  -  1);	  Validator    validator    =    values.get(defaultValues.size());    	non-compiled	[CE]  incompatible  types	79	None	replace
51	[BUG]  [BUGGY]  Validator  validator  =  defaultValues.get(values.size());  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  defaultValues.get(values.size());  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  defaultValues.get(values.size());	  Validator    validator    =    values.get(defaultValues.size());    	non-compiled	[CE]  incompatible  types	79	None	replace
52	[BUG]  [BUGGY]  Validator  validator  =  getValues(option,  values);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues(option,  values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues(option,  values);	  Validator    validator    =    getValues(option);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
53	[BUG]  [BUGGY]  Validator  validator  =  getValues(option,  values.size());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues(option,  values.size());  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues(option,  values.size());	  Validator    validator    =    getValues(option);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
54	[BUG]  [BUGGY]  Validator  validator  =  getValues(option,  resources);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues(option,  resources);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues(option,  resources);	  Validator    validator    =    getValues(option);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
55	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(0));    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));	  	non-compiled	[CE]  unreachable  statement	83	None	add
56	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(0));    Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));	  	non-compiled	[CE]  not  a  statement	83	None	add
57	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(1));  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(1));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(0));    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(1));	  	non-compiled	[CE]  unreachable  statement	83	None	add
58	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(0));    OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));	  	non-compiled	[CE]  cannot  find  symbol	83	None	add
59	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(1));  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(1));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(0));    Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(1));	  	non-compiled	[CE]  not  a  statement	83	None	add
60	[BUG]  [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0);  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    Option    option    =    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0);    	non-compiled	[CE]  ';'  expected	74	None	replace
61	[BUG]  [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    Option    option    =    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0);    	non-compiled	[CE]  ';'  expected	74	None	replace
62	[BUG]  [BUGGY]  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    Option    option    =    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0);    	non-compiled	[CE]  ';'  expected	74	None	replace
63	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString(),  maximum);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString(),  maximum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString(),  maximum);	  Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    	non-compiled	[CE]  not  a  statement	81	None	replace
64	[BUG]  [BUGGY]  Validator  validator  =  option.getValues(values);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.getValues(values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.getValues(values);	  Validator    validator    =    values.getValues(option);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
65	[BUG]  [BUGGY]  Validator  validator  =  options.getValues(values);  [CE]  cannot  find  symbol  options  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  options.getValues(values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  options.getValues(values);	  Validator    validator    =    values.getValues(option);    	non-compiled	[CE]  cannot  find  symbol  options	40	None	replace
66	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size()  -  1);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,int)  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size()  -  1);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size()  -  1);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.size());    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,int)	38	None	replace
67	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size()  +  1);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,int)  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size()  +  1);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size()  +  1);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.size());    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,int)	38	None	replace
68	[BUG]  [BUGGY]  Validator  validator  =  commands.getValues();  [CE]  cannot  find  symbol  commands  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commands.getValues();  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commands.getValues();	  Validator    validator    =    values.getValues();    	non-compiled	[CE]  cannot  find  symbol  commands	21	None	replace
69	[BUG]  [BUGGY]  Validator  validator  =  getValues(),  values;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues(),  values;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues(),  values;	  Validator    validator    =    getValues().values;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
70	[BUG]  [BUGGY]  Validator  validator  =  getValues(),  values.values;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues(),  values.values;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues(),  values.values;	  Validator    validator    =    getValues().values;    	non-compiled	[CE]  ';'  expected	30	None	replace
71	[BUG]  [BUGGY]  Validator  validator  =  defaultValues.values();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  defaultValues.values();  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  defaultValues.values();	  Validator    validator    =    defaultValues;    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
72	[BUG]  [BUGGY]  Validator  validator  =  defaultValues.iterator();  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  defaultValues.iterator();  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  defaultValues.iterator();	  Validator    validator    =    defaultValues;    	non-compiled	[CE]  incompatible  types	96	None	replace
73	[BUG]  [BUGGY]  Validator  validator  =  defaultValues.isEmpty()?  null  :  defaultValues.get(0);  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  defaultValues.isEmpty()?  null  :  defaultValues.get(0);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  defaultValues.isEmpty()?  null  :  defaultValues.get(0);	  Validator    validator    =    defaultValues;    	non-compiled	[CE]  incompatible  types	96	None	replace
74	[BUG]  [BUGGY]  Validator  validator  =  defaultValues.isEmpty()?  null  :  defaultValues.iterator();  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  defaultValues.isEmpty()?  null  :  defaultValues.iterator();  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  defaultValues.isEmpty()?  null  :  defaultValues.iterator();	  Validator    validator    =    defaultValues;    	non-compiled	[CE]  incompatible  types	96	None	replace
75	[BUG]  [BUGGY]  Validator  validator  =  option.getValues(resources);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.getValues(resources);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.getValues(resources);	  Validator    validator    =    resources.getValues(option);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
76	[BUG]  [BUGGY]  Validator  validator  =  resources.getValues(option,  values);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  resources.getValues(option,  values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  resources.getValues(option,  values);	  Validator    validator    =    resources.getValues(option);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
77	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  maximum);  [CE]  <identifier>  expected  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  maximum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  maximum);	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
78	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum);  [CE]  <identifier>  expected  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum);	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
79	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  values);  [CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  values);	  Validator    validator    =    option.validate(values,    defaultValues);    	non-compiled	[CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;	11	None	replace
80	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  defaultValues,  minimum);  [CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  defaultValues,  minimum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  defaultValues,  minimum);	  Validator    validator    =    option.validate(values,    defaultValues);    	non-compiled	[CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;	11	None	replace
81	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  defaultValues);  [CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  minimum,  defaultValues);	  Validator    validator    =    option.validate(values,    defaultValues);    	non-compiled	[CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;	11	None	replace
82	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  valueDefaults);  [CE]  cannot  find  symbol  valueDefaults  [FE]                              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  valueDefaults);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  valueDefaults);	  Validator    validator    =    option.validate(values,    defaultValues);    	non-compiled	[CE]  cannot  find  symbol  valueDefaults	11	None	replace
83	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  minimum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  minimum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  minimum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    valueCount);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)	65	None	replace
84	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  minimal);  [CE]  cannot  find  symbol  minimal  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  minimal);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  minimal);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    valueCount);    	non-compiled	[CE]  cannot  find  symbol  minimal	65	None	replace
85	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  values);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValue(option,  values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValue(option,  values);	  Validator    validator    =    getValue(option);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
86	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  values.size());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValue(option,  values.size());  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValue(option,  values.size());	  Validator    validator    =    getValue(option);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
87	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  resources);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValue(option,  resources);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValue(option,  resources);	  Validator    validator    =    getValue(option);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
88	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));  (String)values.get(maximum));  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	110	None	replace
89	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum));  (String)values.get(maximum));  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum));  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum));  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	110	None	replace
90	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  (String)values.get(maximum));  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	110	None	replace
91	[BUG]  [BUGGY]  (String)values.get(maximum));  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	(String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	110	None	replace
92	[BUG]  [BUGGY]  Throwables.throwAsUnexpectedException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  [CE]  cannot  find  symbol  Throwables  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throwAsUnexpectedException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throwAsUnexpectedException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    valueValues.toString());    	non-compiled	[CE]  cannot  find  symbol  Throwables	61	None	replace
93	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(resources);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.getValue(resources);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.getValue(resources);	  Validator    validator    =    resources.getValue(option);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
94	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(option,  values);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  resources.getValue(option,  values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  resources.getValue(option,  values);	  Validator    validator    =    resources.getValue(option);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
95	[BUG]  [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
96	[BUG]  [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
97	[BUG]  [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
98	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  minimum,  DEFAULT_INITIAL_SEPARATOR);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  minimum,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  minimum,  DEFAULT_INITIAL_SEPARATOR);	  Validator    validator    =    values.get(option,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	69	None	replace
99	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  maximum,  DEFAULT_INITIAL_SEPARATOR);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  maximum,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  maximum,  DEFAULT_INITIAL_SEPARATOR);	  Validator    validator    =    values.get(option,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	69	None	replace
100	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  minimum);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  minimum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  minimum);	  Validator    validator    =    values.get(option,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	69	None	replace
101	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  maximum);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  maximum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  maximum);	  Validator    validator    =    values.get(option,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	69	None	replace
102	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  minimum,  maximum);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  minimum,  maximum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  minimum,  maximum);	  Validator    validator    =    values.get(option,    maximum);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	26	None	replace
103	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  maximum,  argumentCount);  [CE]  cannot  find  symbol  argumentCount  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  maximum,  argumentCount);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  maximum,  argumentCount);	  Validator    validator    =    values.get(option,    maximum);    	non-compiled	[CE]  cannot  find  symbol  argumentCount	26	None	replace
104	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  minimum,  valueCount);  [CE]  cannot  find  symbol  valueCount  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  minimum,  valueCount);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  minimum,  valueCount);	  Validator    validator    =    values.get(option,    maximum);    	non-compiled	[CE]  cannot  find  symbol  valueCount	26	None	replace
105	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  maximum,  minimum);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  maximum,  minimum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  maximum,  minimum);	  Validator    validator    =    values.get(option,    maximum);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	26	None	replace
106	[BUG]  [BUGGY]  MutableValues.checkState(values.size()  >  maximum)  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  MutableValues.checkState(values.size()  >  maximum)  {  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	MutableValues.checkState(values.size()  >  maximum)  {	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0));    }    	non-compiled	[CE]  ';'  expected	18	None	replace
107	[BUG]  [BUGGY]  validateValues(values,  maximum))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  validateValues(values,  maximum))  {  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	validateValues(values,  maximum))  {	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0));    }    	non-compiled	[CE]  ';'  expected	18	None	replace
108	[BUG]  [BUGGY]  MutableValues.checkState(values.size()  <  maximum)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  MutableValues.checkState(values.size()  <  maximum)  {  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	MutableValues.checkState(values.size()  <  maximum)  {	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0));    }    	non-compiled	[CE]  ';'  expected	18	None	replace
109	[BUG]  [BUGGY]  MutableValues.checkState(values.size()  >  maximum);  [CE]  cannot  find  symbol  MutableValues  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  MutableValues.checkState(values.size()  >  maximum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	MutableValues.checkState(values.size()  >  maximum);	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0));    }    	non-compiled	[CE]  cannot  find  symbol  MutableValues	18	None	replace
110	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  values.size()  -  1);  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  values.size()  -  1);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  values.size()  -  1);	  Validator    validator    =    new    Validator(DEFAULT_INITIAL_SEPARATOR,    values.size());    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	33	None	replace
111	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  values.size()  +  1);  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  values.size()  +  1);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  values.size()  +  1);	  Validator    validator    =    new    Validator(DEFAULT_INITIAL_SEPARATOR,    values.size());    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	33	None	replace
112	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(values.size(),  DEFAULT_INITIAL_SEPARATOR);  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(values.size(),  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(values.size(),  DEFAULT_INITIAL_SEPARATOR);	  Validator    validator    =    new    Validator(DEFAULT_INITIAL_SEPARATOR,    values.size());    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	33	None	replace
113	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(option,  DEFAULT_INITIAL_SEPARATOR);  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.getValue(option,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.getValue(option,  DEFAULT_INITIAL_SEPARATOR);	  Validator    validator    =    commandLine.getValue(option);    	non-compiled	[CE]  incompatible  types	17	None	replace
114	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(option,  values);  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.getValue(option,  values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.getValue(option,  values);	  Validator    validator    =    commandLine.getValue(option);    	non-compiled	[CE]  incompatible  types	17	None	replace
115	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(option,  defaultValues);  [CE]  incompatible  types  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.getValue(option,  defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.getValue(option,  defaultValues);	  Validator    validator    =    commandLine.getValue(option);    	non-compiled	[CE]  incompatible  types	17	None	replace
116	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(option,  false);  [CE]  incompatible  types  [FE]                          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.getValue(option,  false);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.getValue(option,  false);	  Validator    validator    =    commandLine.getValue(option);    	non-compiled	[CE]  incompatible  types	17	None	replace
117	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  maximum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,int)  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  maximum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  maximum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    maximum);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,int)	39	None	replace
118	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  valueCount);  [CE]  cannot  find  symbol  valueCount  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  valueCount);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  valueCount);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    maximum);    	non-compiled	[CE]  cannot  find  symbol  valueCount	39	None	replace
119	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1),  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1),  id);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1),  id);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0),    id);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	57	None	replace
120	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  argumentCount);  [CE]  cannot  find  symbol  argumentCount  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  argumentCount);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  argumentCount);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0),    id);    	non-compiled	[CE]  cannot  find  symbol  argumentCount	57	None	replace
121	[BUG]  [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    Option    option    =    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  ';'  expected	75	None	replace
122	[BUG]  [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));  [CE]  <identifier>  expected  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    Option    option    =    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
123	[BUG]  [BUGGY]  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    Option    option    =    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  ';'  expected	75	None	replace
124	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  option);  [CE]  no  suitable  method  found  for  validate(List,Option)  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  option);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  option);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    option);    	non-compiled	[CE]  no  suitable  method  found  for  validate(List,Option)	88	None	replace
125	[BUG]  [BUGGY]  Validator  validator  =  this.validate(values,  option);  [CE]  no  suitable  method  found  for  validate(List,Option)  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  this.validate(values,  option);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  this.validate(values,  option);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    option);    	non-compiled	[CE]  no  suitable  method  found  for  validate(List,Option)	88	None	replace
126	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  options);  [CE]  cannot  find  symbol  options  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  options);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  options);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    option);    	non-compiled	[CE]  cannot  find  symbol  options	88	None	replace
127	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.NUL);  [CE]  cannot  find  symbol  NUL  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.NUL);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.NUL);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    option);    	non-compiled	[CE]  cannot  find  symbol  NUL	88	None	replace
128	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  argumentCount);  [CE]  cannot  find  symbol  argumentCount  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  argumentCount);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  minimum,  argumentCount);	  Validator    validator    =    option.validate(values,    minimum);    	non-compiled	[CE]  cannot  find  symbol  argumentCount	9	None	replace
129	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  id);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  minimum,  id);	  Validator    validator    =    option.validate(values,    minimum);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	9	None	replace
130	[BUG]  [BUGGY]  Validator  validator  =  resources!=  null?  resources.getValues()  :  DEFAULT_INITIAL_SEPARATOR;  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  resources!=  null?  resources.getValues()  :  DEFAULT_INITIAL_SEPARATOR;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  resources!=  null?  resources.getValues()  :  DEFAULT_INITIAL_SEPARATOR;	  Validator    validator    =    resources.getValues();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
131	[BUG]  [BUGGY]  Validator  validator  =  resources!=  null?  resources.getValues()  :  null;  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  resources!=  null?  resources.getValues()  :  null;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  resources!=  null?  resources.getValues()  :  null;	  Validator    validator    =    resources.getValues();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
132	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.id,  (String)values.get(minimum));  [CE]  cannot  find  symbol  id  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.id,  (String)values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.id,  (String)values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.id,    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol  id	104	None	replace
133	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.values.id,  (String)values.get(minimum));  [CE]  cannot  find  symbol  values  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.values.id,  (String)values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.values.id,  (String)values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.id,    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol  values	104	None	replace
134	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(values);  [CE]  cannot  find  symbol  options  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  options.getValue(values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  options.getValue(values);	  Validator    validator    =    values.getValue(option);    	non-compiled	[CE]  cannot  find  symbol  options	15	None	replace
135	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(values);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.getValue(values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.getValue(values);	  Validator    validator    =    values.getValue(option);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
136	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(key);  [CE]  cannot  find  symbol  key  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  options.getValue(key);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  options.getValue(key);	  Validator    validator    =    values.getValue(option);    	non-compiled	[CE]  cannot  find  symbol  key	15	None	replace
137	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  }  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	add	if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  }	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_CONSUME_REMAINING);    	compilable	  [FE]  ComparisonFailure  	73	1	replace
138	[BUG]  [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  }  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  }	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_CONSUME_REMAINING);    	compilable	  [FE]  ComparisonFailure  	73	1	replace
139	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING,  values.size());  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,String,int)  [FE]      ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING,  values.size());  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING,  values.size());	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_CONSUME_REMAINING);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,String,int)	73	None	replace
140	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  NUL);  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  NUL);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  NUL);	  Validator    validator    =    new    Validator(DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	32	None	replace
141	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  valueCount);  [CE]  cannot  find  symbol  valueCount  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  valueCount);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  valueCount);	  Validator    validator    =    new    Validator(DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  valueCount	32	None	replace
142	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(resources);  [CE]  no  suitable  method  found  for  getValue(ResourceHelper)  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.getValue(resources);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.getValue(resources);	  Validator    validator    =    resources.getValue(commandLine);    	non-compiled	[CE]  no  suitable  method  found  for  getValue(ResourceHelper)	66	None	replace
143	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(commandLine);  [CE]  no  suitable  method  found  for  getValue(WriteableCommandLine)  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.getValue(commandLine);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.getValue(commandLine);	  Validator    validator    =    resources.getValue(commandLine);    	non-compiled	[CE]  no  suitable  method  found  for  getValue(WriteableCommandLine)	66	None	replace
144	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  (String)values.get(argumentCount));  [CE]  cannot  find  symbol  argumentCount  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  (String)values.get(argumentCount));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  (String)values.get(argumentCount));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.size(),    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol  argumentCount	1	None	replace
145	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  minimum,  (String)values.get(maximum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,int,String)  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  minimum,  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  minimum,  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.size(),    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,int,String)	1	None	replace
146	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  valueCount,  (String)values.get(maximum));  [CE]  cannot  find  symbol  valueCount  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  valueCount,  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  valueCount,  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.size(),    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol  valueCount	1	None	replace
147	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  maximum,  (String)values.get(maximum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,int,String)  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  maximum,  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  maximum,  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.size(),    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,int,String)	1	None	replace
148	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_INITIAL_SEPARATOR);  [CE]  cannot  find  symbol  DEFAULT_CONSUME_REMAINING  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_INITIAL_SEPARATOR);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_CONSUME_REMAINING,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_CONSUME_REMAINING	102	None	replace
149	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_MISSING_VALUES);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_MISSING_VALUES);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_MISSING_VALUES);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_CONSUME_REMAINING,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	102	None	replace
150	[BUG]  [BUGGY]  Validator  validator  =  defaultValues.get(option);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  defaultValues.get(option);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  defaultValues.get(option);	  Validator    validator    =    values.get(option,    defaultValues);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	25	None	replace
151	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  defaultValues,  valueCount);  [CE]  cannot  find  symbol  valueCount  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  defaultValues,  valueCount);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  defaultValues,  valueCount);	  Validator    validator    =    values.get(option,    defaultValues);    	non-compiled	[CE]  cannot  find  symbol  valueCount	25	None	replace
152	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  defaultValues,  minimum);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  defaultValues,  minimum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  defaultValues,  minimum);	  Validator    validator    =    values.get(option,    defaultValues);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	25	None	replace
153	[BUG]  [BUGGY]  Validator  validator  =  defaultValues.get(option,  values);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  defaultValues.get(option,  values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  defaultValues.get(option,  values);	  Validator    validator    =    values.get(option,    defaultValues);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	25	None	replace
154	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	44	None	replace
155	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum));  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	44	None	replace
156	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	44	None	replace
157	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	44	None	replace
158	[BUG]  [BUGGY]  Validator  validator  =  values.get(minimum,  maximum);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(minimum,  maximum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(minimum,  maximum);	  Validator    validator    =    values.get(minimum);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	6	None	replace
159	[BUG]  [BUGGY]  Validator  validator  =  resources.get(minimum);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  resources.get(minimum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  resources.get(minimum);	  Validator    validator    =    values.get(minimum);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
160	[BUG]  [BUGGY]  Validator  validator  =  values.get(minimum  +  1);  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(minimum  +  1);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(minimum  +  1);	  Validator    validator    =    values.get(minimum);    	non-compiled	[CE]  incompatible  types	6	None	replace
161	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  id);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  id);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    id);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	94	None	replace
162	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  arguments);  [CE]  cannot  find  symbol  arguments  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  arguments);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  arguments);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    id);    	non-compiled	[CE]  cannot  find  symbol  arguments	94	None	replace
163	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum),  DEFAULT_INITIAL_SEPARATOR);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,char)  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum),  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum),  DEFAULT_INITIAL_SEPARATOR);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    values.get(minimum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,char)	53	None	replace
164	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum)+  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum)+  1);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum)+  1);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    values.get(minimum));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	53	None	replace
165	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSeparator);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,char)  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSeparator);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSeparator);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    initialSeparator);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,char)	92	None	replace
166	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  subsequentSeparator);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,char)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  subsequentSeparator);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  subsequentSeparator);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    initialSeparator);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,char)	92	None	replace
167	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  nextSeparator);  [CE]  cannot  find  symbol  nextSeparator  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  nextSeparator);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  nextSeparator);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    initialSeparator);    	non-compiled	[CE]  cannot  find  symbol  nextSeparator	92	None	replace
168	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  initialSeparator,  subsequentSeparator);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,char,char)  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  initialSeparator,  subsequentSeparator);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  initialSeparator,  subsequentSeparator);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    initialSeparator);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,char,char)	92	None	replace
169	[BUG]  [BUGGY]  Validator  validator  =  commandLine.validate(values);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.validate(values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.validate(values);	  Validator    validator    =    commandLine.getValues();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
170	[BUG]  [BUGGY]  Validator  validator  =  commandLine.validateValues(option);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.validateValues(option);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.validateValues(option);	  Validator    validator    =    commandLine.getValues();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
171	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING);  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING);	  Validator    validator    =    new    Validator(DEFAULT_INITIAL_SEPARATOR,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	31	None	replace
172	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSplit);  [CE]  cannot  find  symbol  initialSplit  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSplit);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSplit);	  Validator    validator    =    new    Validator(DEFAULT_INITIAL_SEPARATOR,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  initialSplit	31	None	replace
173	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(values,  DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(values,  DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(values,  DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);	  Validator    validator    =    new    Validator(DEFAULT_INITIAL_SEPARATOR,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	31	None	replace
174	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(commandLine,  DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(commandLine,  DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(commandLine,  DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);	  Validator    validator    =    new    Validator(DEFAULT_INITIAL_SEPARATOR,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	31	None	replace
175	[BUG]  [BUGGY]  Option  option  =  option.getOption(RenderingConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  [CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Option  option  =  option.getOption(RenderingConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Option  option  =  option.getOption(RenderingConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(1));    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)	20	None	replace
176	[BUG]  [BUGGY]  Option  option  =  option.getOption(RenderingConstants.ARGUMENT_UNEXPECTED_VALUE);  [CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Option  option  =  option.getOption(RenderingConstants.ARGUMENT_UNEXPECTED_VALUE);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Option  option  =  option.getOption(RenderingConstants.ARGUMENT_UNEXPECTED_VALUE);	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(1));    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)	20	None	replace
177	[BUG]  [BUGGY]  Option  option  =  option.getOption(RenderingConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  [CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Option  option  =  option.getOption(RenderingConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Option  option  =  option.getOption(RenderingConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(1));    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)	20	None	replace
178	[BUG]  [BUGGY]  Option  option  =  option.getOption(RenderingConstants.ARGUMENT_UNEXPECTED_VALUE),  values.get(1);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Option  option  =  option.getOption(RenderingConstants.ARGUMENT_UNEXPECTED_VALUE),  values.get(1);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Option  option  =  option.getOption(RenderingConstants.ARGUMENT_UNEXPECTED_VALUE),  values.get(1);	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(1));    }    	non-compiled	[CE]  ';'  expected	20	None	replace
179	[BUG]  [BUGGY]  Validator  validator  =(values.size()  >  minimum)?  values.get(0):  null;  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =(values.size()  >  minimum)?  values.get(0):  null;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =(values.size()  >  minimum)?  values.get(0):  null;	  Validator    validator    =(values.size()    >    maximum)?    values.get(0):    null;    	non-compiled	[CE]  incompatible  types	107	None	replace
180	[BUG]  [BUGGY]  Validator  validator  =(values.size()  >  minimum)?  values.get(1):  null;  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =(values.size()  >  minimum)?  values.get(1):  null;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =(values.size()  >  minimum)?  values.get(1):  null;	  Validator    validator    =(values.size()    >    maximum)?    values.get(0):    null;    	non-compiled	[CE]  incompatible  types	107	None	replace
181	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  values.get(maximum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,Object)  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    minimum,    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,Object)	2	None	replace
182	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  values.get(minimum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,Object)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    minimum,    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,Object)	2	None	replace
183	[BUG]  [BUGGY]  Validator  validator  =  options.validate(defaultValues);  [CE]  cannot  find  symbol  options  [FE]                          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  options.validate(defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  options.validate(defaultValues);	  Validator    validator    =    options.validate(values);    	non-compiled	[CE]  cannot  find  symbol  options	12	None	replace
184	[BUG]  [BUGGY]  Validator  validator  =  values.validate(option);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.validate(option);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.validate(option);	  Validator    validator    =    options.validate(values);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
185	[BUG]  [BUGGY]  Validator  validator  =  resources.validate(values);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  resources.validate(values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  resources.validate(values);	  Validator    validator    =    options.validate(values);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
186	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  minimum,  argumentCount);  [CE]  cannot  find  symbol  argumentCount  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  minimum,  argumentCount);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  minimum,  argumentCount);	  Validator    validator    =    values.get(option,    minimum);    	non-compiled	[CE]  cannot  find  symbol  argumentCount	24	None	replace
187	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  minimum,  0);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  minimum,  0);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  minimum,  0);	  Validator    validator    =    values.get(option,    minimum);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	24	None	replace
188	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  arguments);  [CE]  cannot  find  symbol  arguments  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  arguments);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  arguments);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    minimum);    	non-compiled	[CE]  cannot  find  symbol  arguments	37	None	replace
189	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  argumentCount);  [CE]  cannot  find  symbol  argumentCount  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  argumentCount);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  argumentCount);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    minimum);    	non-compiled	[CE]  cannot  find  symbol  argumentCount	37	None	replace
190	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1),  minimum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int)  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1),  minimum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1),  minimum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(1));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int)	19	None	replace
191	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1),  maximum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int)  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1),  maximum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1),  maximum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(1));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int)	19	None	replace
192	[BUG]  [BUGGY]  validateValues(option,  values.size());  Validator  validator  =  null;  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  validateValues(option,  values.size());  Validator  validator  =  null;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	validateValues(option,  values.size());  Validator  validator  =  null;	          Validator    validator    =    null;    validateValues(option,    values.size());    Validator    validator    =    null;    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
193	[BUG]  [BUGGY]  Validator  validator  =  null;  validateValues(option,  values.size()  -  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  validateValues(option,  values.size()  -  1);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  validateValues(option,  values.size()  -  1);	          Validator    validator    =    null;    validateValues(option,    values.size());    Validator    validator    =    null;    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
194	[BUG]  [BUGGY]  Validator  validator  =  null;  validateValues(option,  values.size());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  validateValues(option,  values.size());  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  validateValues(option,  values.size());	          Validator    validator    =    null;    validateValues(option,    values.size());    Validator    validator    =    null;    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
195	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values.size()  -  1);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values.size()  -  1);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values.size()  -  1);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    values.size());    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)	63	None	replace
196	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  values.size());  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  values.size());  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  values.size());	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    values.size());    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)	63	None	replace
197	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values.size()  +  1);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values.size()  +  1);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values.size()  +  1);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    values.size());    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)	63	None	replace
198	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  minimal);  [CE]  cannot  find  symbol  minimal  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  minimal);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  minimal);	  Validator    validator    =    values.get(option,    valueCount);    	non-compiled	[CE]  cannot  find  symbol  minimal	71	None	replace
199	[BUG]  [BUGGY]  Validator  validator  =  option,  values.getValues(option);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option,  values.getValues(option);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option,  values.getValues(option);	  Validator    validator    =    option.getValues(option);    	non-compiled	[CE]  ';'  expected	80	None	replace
200	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  maximum,  minimum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int,int)  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  maximum,  minimum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  maximum,  minimum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0),    minimum);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int,int)	55	None	replace
201	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum,  maximum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int,int)  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum,  maximum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum,  maximum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0),    minimum);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int,int)	55	None	replace
202	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum,  argumentCount);  [CE]  cannot  find  symbol  argumentCount  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum,  argumentCount);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum,  argumentCount);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0),    minimum);    	non-compiled	[CE]  cannot  find  symbol  argumentCount	55	None	replace
203	[BUG]  [BUGGY]  validateValues(option,  values.get(maximum));  Validator  validator  =  null;  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  validateValues(option,  values.get(maximum));  Validator  validator  =  null;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	validateValues(option,  values.get(maximum));  Validator  validator  =  null;	          Validator    validator    =    null;    validateValues(option,    values.get(maximum));    Validator    validator    =    null;    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
204	[BUG]  [BUGGY]  validateValues(option,  values.get(minimum));  Validator  validator  =  null;  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  validateValues(option,  values.get(minimum));  Validator  validator  =  null;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	validateValues(option,  values.get(minimum));  Validator  validator  =  null;	          Validator    validator    =    null;    validateValues(option,    values.get(maximum));    Validator    validator    =    null;    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
205	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(option,  values.get(maximum));  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(option,  values.get(maximum));  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(option,  values.get(maximum));	          Validator    validator    =    null;    validateValues(option,    values.get(maximum));    Validator    validator    =    null;    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	85	None	replace
206	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(minimum));  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(minimum));	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(id));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
207	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSplit);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSplit);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSplit);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_INITIAL_SEPARATOR,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	100	None	replace
208	[BUG]  [BUGGY]  validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_INITIAL_SEPARATOR,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	100	None	replace
209	[BUG]  [BUGGY]  Validator  validator  =  resources.get(values);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  resources.get(values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  resources.get(values);	  Validator    validator    =    options.get(values);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
210	[BUG]  [BUGGY]  Validator  validator  =  options.get(defaultValues);  [CE]  cannot  find  symbol  options  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  options.get(defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  options.get(defaultValues);	  Validator    validator    =    options.get(values);    	non-compiled	[CE]  cannot  find  symbol  options	70	None	replace
211	[BUG]  [BUGGY]  Validator  validator  =  options.get(option);  [CE]  cannot  find  symbol  options  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  options.get(option);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  options.get(option);	  Validator    validator    =    options.get(values);    	non-compiled	[CE]  cannot  find  symbol  options	70	None	replace
212	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  (String)values.get(1);  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  (String)values.get(1);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  (String)values.get(1);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    (String)values.get(0));    	non-compiled	[CE]  not  a  statement	105	None	replace
213	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  (String)values.get(0));  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  (String)values.get(0));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  (String)values.get(0));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    (String)values.get(0));    	non-compiled	[CE]  not  a  statement	105	None	replace
214	[BUG]  [BUGGY]  (String)values.get(0);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  (String)values.get(0);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	(String)values.get(0);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    (String)values.get(0));    	non-compiled	[CE]  not  a  statement	105	None	replace
215	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	add	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(minimum));    	compilable	  [FE]  ComparisonFailure  	77	1	replace
216	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(minimum));    	compilable	  [FE]  ComparisonFailure  	77	1	replace
217	[BUG]  [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  }  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  }  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  }	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)	43	None	replace
218	[BUG]  [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));  }  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));  }  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));  }	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(0));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)	84	None	replace
219	[BUG]  [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(1));  }  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)  [FE]      ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(1));  }  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(1));  }	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(0));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)	84	None	replace
220	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  values);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,List)  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  values);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  values);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    values);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,List)	64	None	replace
221	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values,  minimum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,List,int)  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values,  minimum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values,  minimum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    values);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,List,int)	64	None	replace
222	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  minimum,  values);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int,List)  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  minimum,  values);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  minimum,  values);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    values);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int,List)	64	None	replace
223	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString(),  arguments);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString(),  arguments);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString(),  arguments);	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
224	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toArray(new  String[values.size()  ]));  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toArray(new  String[values.size()  ]));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toArray(new  String[values.size()  ]));	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
225	[BUG]  [BUGGY]  Validator  validator  =  values.get(defaultValues,  minimum);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(defaultValues,  minimum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(defaultValues,  minimum);	  Validator    validator    =    values.get(defaultValues);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	27	None	replace
226	[BUG]  [BUGGY]  Validator  validator  =  values.get(defaultValues,  defaultValues.size());  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(defaultValues,  defaultValues.size());  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(defaultValues,  defaultValues.size());	  Validator    validator    =    values.get(defaultValues);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	27	None	replace
227	[BUG]  [BUGGY]  Validator  validator  =  values.get(defaultValues,  maximum);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(defaultValues,  maximum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(defaultValues,  maximum);	  Validator    validator    =    values.get(defaultValues);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	27	None	replace
228	[BUG]  [BUGGY]  Validator  validator  =  values.get(defaultValues,  valueCount);  [CE]  cannot  find  symbol  valueCount  [FE]                          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(defaultValues,  valueCount);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(defaultValues,  valueCount);	  Validator    validator    =    values.get(defaultValues);    	non-compiled	[CE]  cannot  find  symbol  valueCount	27	None	replace
229	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(command);  [CE]  cannot  find  symbol  command  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.getValue(command);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.getValue(command);	  Validator    validator    =    commands.getValue(commandLine);    	non-compiled	[CE]  cannot  find  symbol  command	67	None	replace
230	[BUG]  [BUGGY]  Validator  validator  =(values.size()  >  minimum)?  values.get(maximum):  null;  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =(values.size()  >  minimum)?  values.get(maximum):  null;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =(values.size()  >  minimum)?  values.get(maximum):  null;	  Validator    validator    =(values.size()    >    maximum)?    values.get(maximum):    null;    	non-compiled	[CE]  incompatible  types	106	None	replace
231	[BUG]  [BUGGY]  Validator  validator  =(values.size()  >  minimum)?  values.get(minimum):  null;  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =(values.size()  >  minimum)?  values.get(minimum):  null;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =(values.size()  >  minimum)?  values.get(minimum):  null;	  Validator    validator    =(values.size()    >    maximum)?    values.get(maximum):    null;    	non-compiled	[CE]  incompatible  types	106	None	replace
232	[BUG]  [BUGGY]  Validator  validator  =(values.size()  >  maximum)?  values.get(minimum):  null;  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =(values.size()  >  maximum)?  values.get(minimum):  null;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =(values.size()  >  maximum)?  values.get(minimum):  null;	  Validator    validator    =(values.size()    >    maximum)?    values.get(maximum):    null;    	non-compiled	[CE]  incompatible  types	106	None	replace
233	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  [CE]  unreachable  statement  [FE]    junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value     "[testfile.txt    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());	  	non-compiled	[CE]  unreachable  statement	58	None	add
234	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value     "[testfile.txt    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());	  	non-compiled	[CE]  not  a  statement	58	None	add
235	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  (String)values.get(maximum));  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value     "[testfile.txt    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    (String)values.get(maximum));	  	non-compiled	[CE]  not  a  statement	58	None	add
236	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  Option  option  =  option.getOptionalValue();  [CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]          junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value     "[testfile.txt    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  Option  option  =  option.getOptionalValue();  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    Option  option  =  option.getOptionalValue();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)	58	None	add
237	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  keys.toString());  [CE]  cannot  find  symbol  keys  [FE]            junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value     "[testfile.txt    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  keys.toString());  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  keys.toString());	  	non-compiled	[CE]  cannot  find  symbol  keys	58	None	add
238	[BUG]  [BUGGY]  throw  new  OptionException(option,  resourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum,  maximum);  [CE]  cannot  find  symbol  resourceConstants  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  resourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum,  maximum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  resourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum,  maximum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0),    maximum);    	non-compiled	[CE]  cannot  find  symbol  resourceConstants	56	None	replace
239	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  minimum,  maximum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int,int)  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  minimum,  maximum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  minimum,  maximum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    maximum);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int,int)	108	None	replace
240	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  maximum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  maximum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  maximum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    maximum);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)	108	None	replace
241	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimal);  [CE]  cannot  find  symbol  minimal  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  minimal);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  minimal);	  Validator    validator    =    option.validate(values,    valueCount);    	non-compiled	[CE]  cannot  find  symbol  minimal	82	None	replace
242	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR);	  Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  not  a  statement	109	None	replace
243	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  arguments);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  arguments);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  arguments);	  Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  not  a  statement	109	None	replace
244	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  values.size());  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  values.size());  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  values.size());	  Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  not  a  statement	109	None	replace
245	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);	  Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  not  a  statement	109	None	replace
246	[BUG]  [BUGGY]  Validator  validator  =  option,  values.getValue(option);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option,  values.getValue(option);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option,  values.getValue(option);	  Validator    validator    =    option.getValue(option);    	non-compiled	[CE]  ';'  expected	78	None	replace
247	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  (String)values.get(maximum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,String)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    id,    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,String)	3	None	replace
248	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  id,  values.get(minimum));  [CE]  id  has  private  access  in  OptionImpl  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  id,  values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  id,  values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    id,    (String)values.get(maximum));    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	3	None	replace
249	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_INITIAL_SEPARATOR,    DEFAULT_CONSUME_REMAINING);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	103	None	replace
250	[BUG]  [BUGGY]  Validator  validator  =  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_INITIAL_SEPARATOR,    DEFAULT_CONSUME_REMAINING);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	103	None	replace
251	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING,  NUL);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING,  NUL);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING,  NUL);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_INITIAL_SEPARATOR,    DEFAULT_CONSUME_REMAINING);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	103	None	replace
252	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING,  initialSplit);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING,  initialSplit);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING,  initialSplit);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_INITIAL_SEPARATOR,    DEFAULT_CONSUME_REMAINING);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	103	None	replace
253	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(minimum),  DEFAULT_INITIAL_SEPARATOR);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,char)  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(minimum),  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(minimum),  DEFAULT_INITIAL_SEPARATOR);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(minimum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,char)	14	None	replace
254	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(minimum)+  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(minimum)+  1);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(minimum)+  1);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(minimum));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	14	None	replace
255	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSplit);  [CE]  cannot  find  symbol  initialSplit  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSplit);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSplit);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  initialSplit	62	None	replace
256	[BUG]  [BUGGY]  Validator  validator  =  getValues().values.iterator();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues().values.iterator();  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues().values.iterator();	  Validator    validator    =    getValues().iterator();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
257	[BUG]  [BUGGY]  Validator  validator  =  getValues().entrySet().iterator();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues().entrySet().iterator();  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues().entrySet().iterator();	  Validator    validator    =    getValues().iterator();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
258	[BUG]  [BUGGY]  Validator  validator  =  getValues().toArray(new  Validator[values.size()  ]);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues().toArray(new  Validator[values.size()  ]);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues().toArray(new  Validator[values.size()  ]);	  Validator    validator    =    getValues().iterator();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
259	[BUG]  [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
260	[BUG]  [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
261	[BUG]  [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum));  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
262	[BUG]  [BUGGY]  option(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  option(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	option(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
263	[BUG]  [BUGGY]  Validator  validator  =  NUL_VALUES;  [CE]  cannot  find  symbol  NUL_VALUES  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  NUL_VALUES;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  NUL_VALUES;	  Validator    validator    =    NUL;    	non-compiled	[CE]  cannot  find  symbol  NUL_VALUES	98	None	replace
264	[BUG]  [BUGGY]  Validator  validator  =  NUL_VALUE;  [CE]  cannot  find  symbol  NUL_VALUE  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  NUL_VALUE;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  NUL_VALUE;	  Validator    validator    =    NUL;    	non-compiled	[CE]  cannot  find  symbol  NUL_VALUE	98	None	replace
265	[BUG]  [BUGGY]  Validator  validator  =  NUL.validate(values);  [CE]  char  cannot  be  dereferenced  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  NUL.validate(values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  NUL.validate(values);	  Validator    validator    =    NUL;    	non-compiled	[CE]  char  cannot  be  dereferenced	98	None	replace
266	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  values);  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  values);	  Validator    validator    =    new    Validator(DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	32	None	replace
267	[BUG]  [BUGGY]  Validator  validator  =  null;  validateValues(option,  values.get(maximum));  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  validateValues(option,  values.get(maximum));  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  validateValues(option,  values.get(maximum));	          Validator    validator    =    null;    validateValues(option,    values.get(maximum));    Validator    validator    =    null;    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
268	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0);  [CE]  <identifier>  expected  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(0));    Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0);	  	non-compiled	[CE]  <identifier>  expected	83	None	add
269	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  defaultValues);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValue(option,  defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValue(option,  defaultValues);	  Validator    validator    =    getValue(option);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
270	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	add	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  DEFAULT_CONSUME_REMAINING);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_CONSUME_REMAINING);    	compilable	  [FE]  ComparisonFailure  	73	1	replace
271	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  DEFAULT_CONSUME_REMAINING);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  DEFAULT_CONSUME_REMAINING);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_CONSUME_REMAINING);    	compilable	  [FE]  ComparisonFailure  	73	1	replace
272	[BUG]  [BUGGY]  Validator  validator  =  getValues().toArray(values);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues().toArray(values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues().toArray(values);	  Validator    validator    =    getValues().iterator();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
273	[BUG]  [BUGGY]  Validator  validator  =  getValues().enterator();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues().enterator();  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues().enterator();	  Validator    validator    =    getValues().iterator();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
274	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(argumentCount));  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(argumentCount));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(argumentCount));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	44	None	replace
275	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_DUBSEQUENT_SEPARATOR);  [CE]  cannot  find  symbol  DEFAULT_DUBSEQUENT_SEPARATOR  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_DUBSEQUENT_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_DUBSEQUENT_SEPARATOR);	          Validator    validator    =    null;    Validator    validator    =    null;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_DUBSEQUENT_SEPARATOR	35	None	replace
276	[BUG]  [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,(String)values.get(0);  [CE]  <identifier>  expected  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,(String)values.get(0);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,(String)values.get(0);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    Option    option    =    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
277	[BUG]  [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,(String)values.get(1);  [CE]  <identifier>  expected  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,(String)values.get(1);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,(String)values.get(1);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    Option    option    =    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
278	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  values.get(argumentCount));  [CE]  cannot  find  symbol  argumentCount  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  values.get(argumentCount));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  values.get(argumentCount));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    minimum,    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol  argumentCount	2	None	replace
279	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values,  minimum,  (String)values.get(maximum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,List,int,String)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values,  minimum,  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values,  minimum,  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    minimum,    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,List,int,String)	2	None	replace
280	[BUG]  [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,(String)values.get(argumentCount));  [CE]  <identifier>  expected  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,(String)values.get(argumentCount));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,(String)values.get(argumentCount));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    Option    option    =    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
281	[BUG]  [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,(String)values.get(maximum));  [CE]  <identifier>  expected  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,(String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,(String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    Option    option    =    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
282	[BUG]  [BUGGY]  Validator  validator  =  null;  if(values.size()  >  maximum)  {  this.validate(values,  option);  }  [CE]  no  suitable  method  found  for  validate(List,Option)  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  if(values.size()  >  maximum)  {  this.validate(values,  option);  }  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  if(values.size()  >  maximum)  {  this.validate(values,  option);  }	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    option);    	non-compiled	[CE]  no  suitable  method  found  for  validate(List,Option)	88	None	replace
283	[BUG]  [BUGGY]  Validator  validator  =  values.get(defaultValues,  option);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(defaultValues,  option);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(defaultValues,  option);	  Validator    validator    =    values.get(option,    defaultValues);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	25	None	replace
284	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  defaultValues);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  defaultValues);	  Validator    validator    =    values.get(option,    defaultValues);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	25	None	replace
285	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum,  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum,  id);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum,  id);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0),    minimum);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	55	None	replace
286	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values.size());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values.size());  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values.size());	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    values.size());    	non-compiled	[CE]  <identifier>  expected	63	None	replace
287	[BUG]  [BUGGY]  MutableValues.checkArgument(values.size()  >  maximum)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  MutableValues.checkArgument(values.size()  >  maximum)  {  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	MutableValues.checkArgument(values.size()  >  maximum)  {	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(1));    }    	non-compiled	[CE]  ';'  expected	20	None	replace
288	[BUG]  [BUGGY]  MutableValues.validate(values,  option);  [CE]  cannot  find  symbol  MutableValues  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  MutableValues.validate(values,  option);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	MutableValues.validate(values,  option);	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(1));    }    	non-compiled	[CE]  cannot  find  symbol  MutableValues	20	None	replace
289	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(  commands);  [CE]  cannot  find  symbol  commands  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.getValue(  commands);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.getValue(  commands);	  Validator    validator    =    commands.getValue(commandLine);    	non-compiled	[CE]  cannot  find  symbol  commands	67	None	replace
290	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  maximum,  0);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  maximum,  0);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  maximum,  0);	  Validator    validator    =    values.get(option,    maximum);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	26	None	replace
291	[BUG]  [BUGGY]  Validator  validator  =  OptionUtil.getValue(option);  [CE]  cannot  find  symbol  OptionUtil  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  OptionUtil.getValue(option);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  OptionUtil.getValue(option);	  Validator    validator    =    option.getValue(option);    	non-compiled	[CE]  cannot  find  symbol  OptionUtil	78	None	replace
292	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  max);  [CE]  cannot  find  symbol  max  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  max);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  max);	  Validator    validator    =    option.validate(values,    valueCount);    	non-compiled	[CE]  cannot  find  symbol  max	82	None	replace
293	[BUG]  [BUGGY]  Validator  validator  =  NUL_DEFAULT;  [CE]  cannot  find  symbol  NUL_DEFAULT  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  NUL_DEFAULT;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  NUL_DEFAULT;	  Validator    validator    =    NUL;    	non-compiled	[CE]  cannot  find  symbol  NUL_DEFAULT	98	None	replace
294	[BUG]  [BUGGY]  Validator  validator  =  NUL_validator;  [CE]  cannot  find  symbol  NUL_validator  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  NUL_validator;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  NUL_validator;	  Validator    validator    =    NUL;    	non-compiled	[CE]  cannot  find  symbol  NUL_validator	98	None	replace
295	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE;  DEFAULT_CONSUME_REMAINING);  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE;  DEFAULT_CONSUME_REMAINING);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_CONSUME_REMAINING);    Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE;  DEFAULT_CONSUME_REMAINING);	  	non-compiled	[CE]  not  a  statement	72	None	add
296	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  initialSeparator);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  initialSeparator);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  initialSeparator);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    initialSeparator);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
297	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_CONSUME_REMAINING,  DEFAULT_INITIAL_SEPARATOR);  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_CONSUME_REMAINING,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(DEFAULT_CONSUME_REMAINING,  DEFAULT_INITIAL_SEPARATOR);	  Validator    validator    =    new    Validator(DEFAULT_INITIAL_SEPARATOR,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	31	None	replace
298	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(value);  [CE]  cannot  find  symbol  value  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  options.getValue(value);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  options.getValue(value);	  Validator    validator    =    values.getValue(option);    	non-compiled	[CE]  cannot  find  symbol  value	15	None	replace
299	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(argumentsCount));  [CE]  cannot  find  symbol  argumentsCount  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(argumentsCount));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(argumentsCount));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol  argumentsCount	4	None	replace
300	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  (String)values.get(1));  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  (String)values.get(1));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  (String)values.get(1));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    (String)values.get(0));    	non-compiled	[CE]  not  a  statement	105	None	replace
301	[BUG]  [BUGGY]  Validator  validator  =  option.getValues(value);  [CE]  cannot  find  symbol  value  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.getValues(value);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.getValues(value);	  Validator    validator    =    values.getValues(option);    	non-compiled	[CE]  cannot  find  symbol  value	40	None	replace
302	[BUG]  [BUGGY]  Validator  validator  =  options.getValues(value);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  options.getValues(value);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  options.getValues(value);	  Validator    validator    =    values.getValues(option);    	non-compiled	[CE]  cannot  find  symbol  value	40	None	replace
303	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(argumentCount  -  1));  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(argumentCount  -  1));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(argumentCount  -  1));	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(maximum));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
304	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(argumentsCount));  [CE]  cannot  find  symbol  argumentsCount  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(argumentsCount));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(argumentsCount));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol  argumentsCount	54	None	replace
305	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(maximum));  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(maximum));	  Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    	non-compiled	[CE]  not  a  statement	81	None	replace
306	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  NUL);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  NUL);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  NUL);	  Validator    validator    =    values.get(option,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	69	None	replace
307	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  valueCount);  [CE]  cannot  find  symbol  valueCount  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  valueCount);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  valueCount);	  Validator    validator    =    values.get(option,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  valueCount	69	None	replace
308	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(1));    	non-compiled	[CE]  not  a  statement	51	None	replace
309	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(commandLine,  option);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  resources.getValue(commandLine,  option);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  resources.getValue(commandLine,  option);	  Validator    validator    =    resources.getValue(commandLine);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
310	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE;  values.toString();  [CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]    junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value     "[testfile.txt    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE;  values.toString();  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE;  values.toString();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)	58	None	add
311	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString();  [CE]  ';'  expected  [FE]      junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value     "[testfile.txt    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString();  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString();	  	non-compiled	[CE]  ';'  expected	58	None	add
312	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE;  [CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]        junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value     "[testfile.txt    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE;  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE;	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)	58	None	add
313	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  maximal);  [CE]  cannot  find  symbol  maximal  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  maximal);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  maximal);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    maximum);    	non-compiled	[CE]  cannot  find  symbol  maximal	108	None	replace
314	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  maximum);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  maximum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  maximum);	  Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  not  a  statement	109	None	replace
315	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  values,  defaultValues);  [CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  values,  defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  values,  defaultValues);	  Validator    validator    =    option.validate(values,    defaultValues);    	non-compiled	[CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;	11	None	replace
316	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  valueValues);  [CE]  cannot  find  symbol  valueValues  [FE]                          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  valueValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  valueValues);	  Validator    validator    =    option.validate(values,    defaultValues);    	non-compiled	[CE]  cannot  find  symbol  valueValues	11	None	replace
317	[BUG]  [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum));  }  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum));  }  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum));  }	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(minimum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)	46	None	replace
318	[BUG]  [BUGGY]  Validator  validator  =  commandLine.validate(defaultValues);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.validate(defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.validate(defaultValues);	  Validator    validator    =    commandLine.getValues();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
319	[BUG]  [BUGGY]  Validator  validator  =  commandLine.validate(values,  false);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  commandLine.validate(values,  false);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.validate(values,  false);	  Validator    validator    =    commandLine.getValues();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
320	[BUG]  [BUGGY]  Validator  validator  =  values.get(defaultValues,  options);  [CE]  cannot  find  symbol  options  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(defaultValues,  options);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(defaultValues,  options);	  Validator    validator    =    values.get(defaultValues);    	non-compiled	[CE]  cannot  find  symbol  options	27	None	replace
321	[BUG]  [BUGGY]  Validator  validator  =  values.get(defaultValues,  defaultValues);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(defaultValues,  defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(defaultValues,  defaultValues);	  Validator    validator    =    values.get(defaultValues);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	27	None	replace
322	[BUG]  [BUGGY]  Validator  validator  =  resources.getValues(option,  defaultValues);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  resources.getValues(option,  defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  resources.getValues(option,  defaultValues);	  Validator    validator    =    resources.getValues(option);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
323	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(resources);  [CE]  cannot  find  symbol  options  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  options.getValue(resources);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  options.getValue(resources);	  Validator    validator    =    resources.getValue(option);    	non-compiled	[CE]  cannot  find  symbol  options	16	None	replace
324	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING,  argumentCount);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING,  argumentCount);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING,  argumentCount);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_INITIAL_SEPARATOR,    DEFAULT_CONSUME_REMAINING);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	103	None	replace
325	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(argumentCount));  (String)values.get(argumentCount));  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(argumentCount));  (String)values.get(argumentCount));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(argumentCount));  (String)values.get(argumentCount));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	110	None	replace
326	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(id));  (String)values.get(maximum));  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(id));  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(id));  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	110	None	replace
327	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString(),  maximum);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString(),  maximum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString(),  maximum);	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
328	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_CONSUME_REMAINING,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	102	None	replace
329	[BUG]  [BUGGY]  Validator  validator  =  option,  resources.getValues(option);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option,  resources.getValues(option);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option,  resources.getValues(option);	  Validator    validator    =    option.getValues(option);    	non-compiled	[CE]  ';'  expected	80	None	replace
330	[BUG]  [BUGGY]  Validator  validator  =  OptionUtil.getValues(option);  [CE]  cannot  find  symbol  OptionUtil  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  OptionUtil.getValues(option);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  OptionUtil.getValues(option);	  Validator    validator    =    option.getValues(option);    	non-compiled	[CE]  cannot  find  symbol  OptionUtil	80	None	replace
331	[BUG]  [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(1));  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(1));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(1));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
332	[BUG]  [BUGGY]  Throwables.throwAsIAE(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));  [CE]  cannot  find  symbol  Throwables  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throwAsIAE(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throwAsIAE(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(0));    	non-compiled	[CE]  cannot  find  symbol  Throwables	84	None	replace
333	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  valueCount  ()values.get(maximum));  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  valueCount  ()values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  valueCount  ()values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.size(),    (String)values.get(maximum));    	non-compiled	[CE]  ')'  expected	1	None	replace
334	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  NUL,  values.get(maximum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,char,Object)  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  NUL,  values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  NUL,  values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.size(),    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,char,Object)	1	None	replace
335	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.values,  (String)values.get(maximum));  [CE]  cannot  find  symbol  values  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.values,  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.values,  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.id,    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol  values	104	None	replace
336	[BUG]  [BUGGY]  Validator  validator  =  options.validateValues(option,  values.size());  [CE]  cannot  find  symbol  options  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  options.validateValues(option,  values.size());  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  options.validateValues(option,  values.size());	          Validator    validator    =    null;    validateValues(option,    values.size());    Validator    validator    =    null;    	non-compiled	[CE]  cannot  find  symbol  options	86	None	replace
337	[BUG]  [BUGGY]  Validator  validator  =  options.validate(values,  maximum);  [CE]  cannot  find  symbol  options  [FE]                          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  options.validate(values,  maximum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  options.validate(values,  maximum);	  Validator    validator    =    options.validate(values);    	non-compiled	[CE]  cannot  find  symbol  options	12	None	replace
338	[BUG]  [BUGGY]  Validator  validator  =  options.validate(values,  minimum);  [CE]  cannot  find  symbol  options  [FE]                            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  options.validate(values,  minimum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  options.validate(values,  minimum);	  Validator    validator    =    options.validate(values);    	non-compiled	[CE]  cannot  find  symbol  options	12	None	replace
339	[BUG]  [BUGGY]  Validator  validator  =  defaultValues.values;  [CE]  cannot  find  symbol  values  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  defaultValues.values;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  defaultValues.values;	  Validator    validator    =    defaultValues;    	non-compiled	[CE]  cannot  find  symbol  values	96	None	replace
340	[BUG]  [BUGGY]  Validator  validator  =  values;  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values;	  Validator    validator    =    defaultValues;    	non-compiled	[CE]  incompatible  types	96	None	replace
341	[BUG]  [BUGGY]  Validator  validator  =(values.size()  >  maximum)?  values.get(argumentCount):  null;  [CE]  cannot  find  symbol  argumentCount  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =(values.size()  >  maximum)?  values.get(argumentCount):  null;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =(values.size()  >  maximum)?  values.get(argumentCount):  null;	  Validator    validator    =(values.size()    >    maximum)?    values.get(maximum):    null;    	non-compiled	[CE]  cannot  find  symbol  argumentCount	106	None	replace
342	[BUG]  [BUGGY]  Validator  validator  =  getValues().validate(values,  max);  [CE]  cannot  find  symbol  max  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues().validate(values,  max);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues().validate(values,  max);	  Validator    validator    =    getValues().validate(values);    	non-compiled	[CE]  cannot  find  symbol  max	90	None	replace
343	[BUG]  [BUGGY]  Validator  validator  =  getValues().validate(values,  defaultValues);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues().validate(values,  defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues().validate(values,  defaultValues);	  Validator    validator    =    getValues().validate(values);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
344	[BUG]  [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(argumentCount));  [CE]  cannot  find  symbol  argumentCount  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(argumentCount));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(argumentCount));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol  argumentCount	45	None	replace
345	[BUG]  [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
346	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  DEFAULT_INITIAL_SEPARATOR);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  DEFAULT_INITIAL_SEPARATOR);	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
347	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_INITIAL_SEPARATOR,  DEFAULT_INITIAL_SEPARATOR);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_INITIAL_SEPARATOR,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_INITIAL_SEPARATOR,  DEFAULT_INITIAL_SEPARATOR);	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
348	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  id);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  id);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    minimum);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	37	None	replace
349	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    values);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
350	[BUG]  [BUGGY]  throw  new  OptionException(option,  resourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  values);  [CE]  cannot  find  symbol  resourceConstants  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  resourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  values);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  resourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  values);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    values);    	non-compiled	[CE]  cannot  find  symbol  resourceConstants	64	None	replace
351	[BUG]  [BUGGY]  MutableValues.checkArgument(values.get(0));  [CE]  cannot  find  symbol  MutableValues  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  MutableValues.checkArgument(values.get(0));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	MutableValues.checkArgument(values.get(0));	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0));    }    	non-compiled	[CE]  cannot  find  symbol  MutableValues	18	None	replace
352	[BUG]  [BUGGY]  MutableValues.checkArgument(values.get(0),  values.get(1));  [CE]  cannot  find  symbol  MutableValues  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  MutableValues.checkArgument(values.get(0),  values.get(1));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	MutableValues.checkArgument(values.get(0),  values.get(1));	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0));    }    	non-compiled	[CE]  cannot  find  symbol  MutableValues	18	None	replace
353	[BUG]  [BUGGY]  Validator  validator  =  getValues(option,  defaultValues);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues(option,  defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues(option,  defaultValues);	  Validator    validator    =    getValues(option);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
354	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  [CE]  <identifier>  expected  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(minimum));    Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));	  	non-compiled	[CE]  <identifier>  expected	76	None	add
355	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE;  (String)values.get(minimum));  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE;  (String)values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(minimum));    Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE;  (String)values.get(minimum));	  	non-compiled	[CE]  not  a  statement	76	None	add
356	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  maximum,  argumentCount);  [CE]  cannot  find  symbol  argumentCount  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  maximum,  argumentCount);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  maximum,  argumentCount);	  Validator    validator    =    option.validate(values,    maximum);    	non-compiled	[CE]  cannot  find  symbol  argumentCount	10	None	replace
357	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  maximum,  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  maximum,  id);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  maximum,  id);	  Validator    validator    =    option.validate(values,    maximum);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	10	None	replace
358	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum),  DEFAULT_CONSUME_REMAINING);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,String)  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum),  DEFAULT_CONSUME_REMAINING);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum),  DEFAULT_CONSUME_REMAINING);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    values.get(minimum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,String)	53	None	replace
359	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  maximum,  null);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  maximum,  null);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  maximum,  null);	  Validator    validator    =    values.get(option,    maximum);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	26	None	replace
360	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  maximum,  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  maximum,  id);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  maximum,  id);	  Validator    validator    =    values.get(option,    maximum);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	26	None	replace
361	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  maximum,  valueCount);  [CE]  cannot  find  symbol  valueCount  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  maximum,  valueCount);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  maximum,  valueCount);	  Validator    validator    =    values.get(option,    maximum);    	non-compiled	[CE]  cannot  find  symbol  valueCount	26	None	replace
362	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  null);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  null);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR,  null);	  Validator    validator    =    values.get(option,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	69	None	replace
363	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  (String)values.get(minimum));  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  (String)values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(minimum));    (String)values.get(minimum));	  	non-compiled	[CE]  not  a  statement	76	None	add
364	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSeparator);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSeparator);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSeparator);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_INITIAL_SEPARATOR,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	100	None	replace
365	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  NUL);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  NUL);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  NUL);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_INITIAL_SEPARATOR,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	100	None	replace
366	[BUG]  [BUGGY]  Validator  validator  =  findValues().iterator();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  findValues().iterator();  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  findValues().iterator();	  Validator    validator    =    getValues().iterator();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
367	[BUG]  [BUGGY]  Validator  validator  =  values.iterator();  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.iterator();  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.iterator();	  Validator    validator    =    getValues().iterator();    	non-compiled	[CE]  incompatible  types	29	None	replace
368	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  minimum,  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  minimum,  id);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  minimum,  id);	  Validator    validator    =    values.get(option,    minimum);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	24	None	replace
369	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values.get(maximum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,Object)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    values.size());    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,Object)	63	None	replace
370	[BUG]  [BUGGY]  OptionException.option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  OptionException.option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	OptionException.option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	45	None	replace
371	[BUG]  [BUGGY]  Validator  validator  =  null  &&  values.get(maximum));  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null  &&  values.get(maximum));  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null  &&  values.get(maximum));	          Validator    validator    =    null;    validateValues(option,    values.get(maximum));    Validator    validator    =    null;    	non-compiled	[CE]  ';'  expected	85	None	replace
372	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(option,  values.get(minimum));  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(option,  values.get(minimum));  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(option,  values.get(minimum));	          Validator    validator    =    null;    validateValues(option,    values.get(maximum));    Validator    validator    =    null;    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	85	None	replace
373	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(values,  DEFAULT_INITIAL_SEPARATOR.toString());  [CE]  char  cannot  be  dereferenced  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(values,  DEFAULT_INITIAL_SEPARATOR.toString());  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(values,  DEFAULT_INITIAL_SEPARATOR.toString());	  Validator    validator    =    new    Validator(DEFAULT_INITIAL_SEPARATOR,    values.size());    	non-compiled	[CE]  char  cannot  be  dereferenced	33	None	replace
374	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_DUBSEQUENT_SEPARATOR);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_DUBSEQUENT_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_DUBSEQUENT_SEPARATOR);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_CONSUME_REMAINING,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	102	None	replace
375	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  defaultValues);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  defaultValues);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_CONSUME_REMAINING,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	102	None	replace
376	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.remove(0));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.remove(0));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.remove(0));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(0));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)	84	None	replace
377	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString()  +  1);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString()  +  1);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString()  +  1);	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
378	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(defaultValues);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.getValue(defaultValues);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.getValue(defaultValues);	  Validator    validator    =    option.getValue(option);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
379	[BUG]  [BUGGY]  Option  option  =  option.getOption(R.option.NUMBER_EXPECTED_VALUE,  values.get(1));  [CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Option  option  =  option.getOption(R.option.NUMBER_EXPECTED_VALUE,  values.get(1));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Option  option  =  option.getOption(R.option.NUMBER_EXPECTED_VALUE,  values.get(1));	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(1));    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)	20	None	replace
380	[BUG]  [BUGGY]  Option  option  =  option.getOption(R.option.NUMBER_EXPECTED_VALUE);  [CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Option  option  =  option.getOption(R.option.NUMBER_EXPECTED_VALUE);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Option  option  =  option.getOption(R.option.NUMBER_EXPECTED_VALUE);	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(1));    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)	20	None	replace
381	[BUG]  [BUGGY]  Option  option  =  option.getOption(R.option.NUMBER_OF_VALUES);  [CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Option  option  =  option.getOption(R.option.NUMBER_OF_VALUES);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Option  option  =  option.getOption(R.option.NUMBER_OF_VALUES);	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(1));    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)	20	None	replace
382	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  NUL);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,char)  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  NUL);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  NUL);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    id);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,char)	94	None	replace
383	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING,  (String)values.get(maximum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,String,String)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING,  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING,  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    id,    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,String,String)	3	None	replace
384	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  id,  values.get(maximum));  [CE]  id  has  private  access  in  OptionImpl  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  id,  values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  id,  values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    id,    (String)values.get(maximum));    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	3	None	replace
385	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.id,  (String)values.get(argumentCount));  [CE]  cannot  find  symbol  id  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.id,  (String)values.get(argumentCount));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.id,  (String)values.get(argumentCount));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.id,    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol  id	104	None	replace
386	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.itemCount,  (String)values.get(maximum));  [CE]  cannot  find  symbol  itemCount  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.itemCount,  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.itemCount,  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.id,    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol  itemCount	104	None	replace
387	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  values.size());  [CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  values.size());  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  minimum,  values.size());	  Validator    validator    =    option.validate(values,    minimum);    	non-compiled	[CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;	9	None	replace
388	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUES,  values.toString());  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUES,  values.toString());  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUES,  values.toString());	  Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    	non-compiled	[CE]  not  a  statement	81	None	replace
389	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_UNKNOWN_SEPARATOR);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_UNKNOWN_SEPARATOR);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_UNKNOWN_SEPARATOR);	  Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  not  a  statement	109	None	replace
390	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  defaultValues,  valueCount);  [CE]  cannot  find  symbol  valueCount  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  defaultValues,  valueCount);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  defaultValues,  valueCount);	  Validator    validator    =    option.validate(values,    defaultValues);    	non-compiled	[CE]  cannot  find  symbol  valueCount	11	None	replace
391	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_CONSUME_REMAINING);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  DEFAULT_CONSUME_REMAINING);	  Validator    validator    =    values.get(option,    valueCount);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	71	None	replace
392	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  Option  option  =  option.getOptionalValue();  if(option!=  null)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  }  [CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]    junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value     "[testfile.txt    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  Option  option  =  option.getOptionalValue();  if(option!=  null)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  }  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.toString());    Option  option  =  option.getOptionalValue();  if(option!=  null)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)	58	None	add
393	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(minimum),  DEFAULT_CONSUME_REMAINING);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,String)  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(minimum),  DEFAULT_CONSUME_REMAINING);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(minimum),  DEFAULT_CONSUME_REMAINING);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(minimum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,String)	14	None	replace
394	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  maximum,  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  maximum,  id);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  maximum,  id);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0),    maximum);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	56	None	replace
395	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  not  a  statement	44	None	replace
396	[BUG]  [BUGGY]  Validator  validator  =  getValues().values,  minimum);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  getValues().values,  minimum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues().values,  minimum);	  Validator    validator    =    getValues().values;    	non-compiled	[CE]  ';'  expected	30	None	replace
397	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  values);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  values);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  values);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR,    values);    	non-compiled	[CE]  not  a  statement	64	None	replace
398	[BUG]  [BUGGY]  validator  =  null;  Validator  validator  =  null;  this.validate(values,  option);  [CE]  cannot  assign  a  value  to  final  variable  validator  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  validator  =  null;  Validator  validator  =  null;  this.validate(values,  option);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	validator  =  null;  Validator  validator  =  null;  this.validate(values,  option);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    option);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  validator	88	None	replace
399	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validateValues(values,  option);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validateValues(values,  option);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validateValues(values,  option);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    option);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
400	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  valueDefaults);  [CE]  cannot  find  symbol  valueDefaults  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(option,  valueDefaults);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  valueDefaults);	  Validator    validator    =    values.get(option,    defaultValues);    	non-compiled	[CE]  cannot  find  symbol  valueDefaults	25	None	replace
401	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  values);  [CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  values);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  minimum,  values);	  Validator    validator    =    option.validate(values,    maximum);    	non-compiled	[CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;	10	None	replace
402	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  value);  [CE]  cannot  find  symbol  value  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  value);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  minimum,  value);	  Validator    validator    =    option.validate(values,    maximum);    	non-compiled	[CE]  cannot  find  symbol  value	10	None	replace
403	[BUG]  [BUGGY]  Validator  validator  =  values.get(defaultValues,  value);  [CE]  cannot  find  symbol  value  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(defaultValues,  value);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(defaultValues,  value);	  Validator    validator    =    values.get(defaultValues);    	non-compiled	[CE]  cannot  find  symbol  value	27	None	replace
404	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(1));  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(1));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(1));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    Throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(1));    	non-compiled	[CE]  not  a  statement	51	None	replace
405	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSeparator);  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSeparator);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSeparator);	  Validator    validator    =    new    Validator(DEFAULT_INITIAL_SEPARATOR,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	31	None	replace
406	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  NUL);  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  NUL);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR,  NUL);	  Validator    validator    =    new    Validator(DEFAULT_INITIAL_SEPARATOR,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	31	None	replace
407	[BUG]  [BUGGY]  Validator  validator  =  defaultValues.iterator().next();  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  defaultValues.iterator().next();  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  defaultValues.iterator().next();	  Validator    validator    =    defaultValues;    	non-compiled	[CE]  incompatible  types	96	None	replace
408	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  (String)values.get(0));  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  (String)values.get(0));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(0));    (String)values.get(0));	  	non-compiled	[CE]  not  a  statement	83	None	add
409	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  NUL);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  NUL);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  NUL);	  Throwables.throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
410	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  minimum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  minimum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR,  minimum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)	62	None	replace
411	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  id);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  id);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    maximum);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	39	None	replace
412	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  maximum,  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  maximum,  id);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  maximum,  id);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    maximum);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	39	None	replace
413	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  Option  option  =  option.getOptionalValue();  if(option!=  null)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  }  [CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  Option  option  =  option.getOptionalValue();  if(option!=  null)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  }  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_CONSUME_REMAINING);    Option  option  =  option.getOptionalValue();  if(option!=  null)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  }	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)	72	None	add
414	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  (String)values.get(maximum));  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  (String)values.get(maximum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_CONSUME_REMAINING);    (String)values.get(maximum));	  	non-compiled	[CE]  not  a  statement	72	None	add
415	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  Option  option  =  option.getOptionalValue();  [CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]        ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  Option  option  =  option.getOptionalValue();  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_CONSUME_REMAINING);    Option  option  =  option.getOptionalValue();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  validate(WriteableCommandLine,Option)	72	None	add
416	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  (String)values.get(minimum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,String)  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  (String)values.get(minimum));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  (String)values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.size(),    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,String)	1	None	replace
417	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  (String)values.get(id));  [CE]  id  has  private  access  in  OptionImpl  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  (String)values.get(id));  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  (String)values.get(id));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.size(),    (String)values.get(maximum));    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	1	None	replace
418	[BUG]  [BUGGY]  MutableValues.checkArgument(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  MutableValues.checkArgument(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  }  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	MutableValues.checkArgument(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  }	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0));    }    	non-compiled	[CE]  ';'  expected	18	None	replace
419	[BUG]  [BUGGY]  MutableValues.checkArgument(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  MutableValues.checkArgument(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  }  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	MutableValues.checkArgument(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  }	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0));    }    	non-compiled	[CE]  ';'  expected	18	None	replace
420	[BUG]  [BUGGY]  MutableValues.checkArgument(values.get(0),  values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  MutableValues.checkArgument(values.get(0),  values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  }  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	MutableValues.checkArgument(values.get(0),  values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  }	  if(values.size()    >    maximum)    {    throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0));    }    	non-compiled	[CE]  ';'  expected	18	None	replace
421	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  valueDefaults.toString());  [CE]  cannot  find  symbol  valueDefaults  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  valueDefaults.toString());  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  valueDefaults.toString());	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    valueValues.toString());    	non-compiled	[CE]  cannot  find  symbol  valueDefaults	61	None	replace
422	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUMES_REMAINING,  DEFAULT_SUBSEQUENT_SEPARATOR);  [CE]  cannot  find  symbol  DEFAULT_CONSUMES_REMAINING  [FE]          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUMES_REMAINING,  DEFAULT_SUBSEQUENT_SEPARATOR);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUMES_REMAINING,  DEFAULT_SUBSEQUENT_SEPARATOR);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_CONSUME_REMAINING,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_CONSUMES_REMAINING	101	None	replace
423	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSeparator);  [CE]  cannot  find  symbol  DEFAULT_CONSUME_REMAINING  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSeparator);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_SUBSEQUENT_SEPARATOR,  initialSeparator);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_CONSUME_REMAINING,    DEFAULT_SUBSEQUENT_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_CONSUME_REMAINING	101	None	replace
424	[BUG]  [BUGGY]  Validator  validator  =  values.get(minimum)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  values.get(minimum)+  1;  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(minimum)+  1;	  Validator    validator    =    values.get(minimum);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	6	None	replace
425	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING,  initialSeparator);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING,  initialSeparator);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING,  initialSeparator);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_INITIAL_SEPARATOR,    DEFAULT_CONSUME_REMAINING);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	103	None	replace
426	[BUG]  [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING,  arguments);  [CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING,  arguments);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING,  arguments);	          Validator    validator    =    null;    Validator    validator    =    null;    this.validate(values,    Option.DEFAULT_INITIAL_SEPARATOR,    DEFAULT_CONSUME_REMAINING);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INITIAL_SEPARATOR	103	None	replace
427	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING,  maximum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,String,int)  [FE]    ComparisonFailure    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {      [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING,  maximum);  [BUGGY]      (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING,  maximum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_CONSUME_REMAINING);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,String,int)	73	None	replace
