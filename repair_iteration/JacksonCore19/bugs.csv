bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] super(ctxt, features); [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { [BUGGY] super(ctxt, features); [BUGGY] _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; _inputEnd = 0; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	134	134	1	replace	
2	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { [BUGGY] [BUGGY] super(ctxt, features); _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; _inputEnd = 0; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	134	134	1	add	
3	[BUG] [BUGGY] _reader = r; [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); [BUGGY] _reader = r; [BUGGY] _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; _inputEnd = 0; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	135	135	1	replace	
4	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); [BUGGY] [BUGGY] _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; _inputEnd = 0; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	135	135	1	add	
5	[BUG] [BUGGY] _inputBuffer = ctxt.allocTokenBuffer(); [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); _reader = r; [BUGGY] _inputBuffer = ctxt.allocTokenBuffer(); [BUGGY] _inputPtr = 0; _inputEnd = 0; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	136	136	1	replace	
6	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); _reader = r; [BUGGY] [BUGGY] _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; _inputEnd = 0; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	136	136	1	add	
7	[BUG] [BUGGY] _inputPtr = 0; [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); [BUGGY] _inputPtr = 0; [BUGGY] _inputEnd = 0; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	137	137	1	replace	
8	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); [BUGGY] [BUGGY] _inputPtr = 0; _inputEnd = 0; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	137	137	1	add	
9	[BUG] [BUGGY] _inputEnd = 0; [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; [BUGGY] _inputEnd = 0; [BUGGY] _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	138	138	1	replace	
10	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; [BUGGY] [BUGGY] _inputEnd = 0; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	138	138	1	add	
11	[BUG] [BUGGY] _objectCodec = codec; [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; _inputEnd = 0; [BUGGY] _objectCodec = codec; [BUGGY] _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	139	139	1	replace	
12	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; _inputEnd = 0; [BUGGY] [BUGGY] _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	139	139	1	add	
13	[BUG] [BUGGY] _symbols = st; [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; _inputEnd = 0; _objectCodec = codec; [BUGGY] _symbols = st; [BUGGY] _hashSeed = st.hashSeed(); _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	140	140	1	replace	
14	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; _inputEnd = 0; _objectCodec = codec; [BUGGY] [BUGGY] _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	140	140	1	add	
15	[BUG] [BUGGY] _hashSeed = st.hashSeed(); [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; _inputEnd = 0; _objectCodec = codec; _symbols = st; [BUGGY] _hashSeed = st.hashSeed(); [BUGGY] _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	141	141	1	replace	
16	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public ReaderBasedJsonParser(IOContext ctxt, int features, Reader r, ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; _inputEnd = 0; _objectCodec = codec; _symbols = st; [BUGGY] [BUGGY] _hashSeed = st.hashSeed(); _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	141	141	1	add	
17	[BUG] [BUGGY] _bufferRecyclable = true; [FE] ArrayIndexOutOfBoundsException [CONTEXT] ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; _inputEnd = 0; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); [BUGGY] _bufferRecyclable = true; [BUGGY] } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	142	142	1	replace	
18	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] ObjectCodec codec, CharsToNameCanonicalizer st) { super(ctxt, features); _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; _inputEnd = 0; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); [BUGGY] [BUGGY] _bufferRecyclable = true; } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	142	142	1	add	
19	[BUG] [BUGGY] } [FE] ArrayIndexOutOfBoundsException [CONTEXT] { super(ctxt, features); _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; _inputEnd = 0; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = true; [BUGGY] } [BUGGY]  [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	143	143	1	replace	
20	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { super(ctxt, features); _reader = r; _inputBuffer = ctxt.allocTokenBuffer(); _inputPtr = 0; _inputEnd = 0; _objectCodec = codec; _symbols = st; _hashSeed = st.hashSeed(); _bufferRecyclable = true; [BUGGY] [BUGGY] } [CLASS] ReaderBasedJsonParser [METHOD] <init> [RETURN_TYPE] CharsToNameCanonicalizer)  IOContext ctxt int features Reader r ObjectCodec codec CharsToNameCanonicalizer st [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r IOContext ctxt int[] _icLatin1 ObjectCodec _objectCodec codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow end features start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	143	143	1	add	
21	[BUG] [BUGGY] int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); [FE] ArrayIndexOutOfBoundsException [CONTEXT] _currInputProcessed += bufSize; _currInputRowStart -= bufSize;    _nameStartOffset -= bufSize; if (_reader != null) { [BUGGY] int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); [BUGGY] if (count > 0) { _inputPtr = 0; _inputEnd = count; return true; }  _closeInput();  if (count == 0) { throw new IOException("Reader returned 0 characters when trying to read "+_inputEnd); [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	180	180	1	replace	
22	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] _currInputProcessed += bufSize; _currInputRowStart -= bufSize;    _nameStartOffset -= bufSize; if (_reader != null) { [BUGGY] [BUGGY] int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); if (count > 0) { _inputPtr = 0; _inputEnd = count; return true; }  _closeInput();  if (count == 0) { throw new IOException("Reader returned 0 characters when trying to read "+_inputEnd); [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	180	180	1	add	
23	[BUG] [BUGGY] if (count > 0) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] _currInputProcessed += bufSize; _currInputRowStart -= bufSize;    _nameStartOffset -= bufSize; if (_reader != null) { int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); [BUGGY] if (count > 0) { [BUGGY] _inputPtr = 0; _inputEnd = count; return true; }  _closeInput();  if (count == 0) { throw new IOException("Reader returned 0 characters when trying to read "+_inputEnd); } [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	181	181	1	replace	
24	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] _currInputProcessed += bufSize; _currInputRowStart -= bufSize;    _nameStartOffset -= bufSize; if (_reader != null) { int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); [BUGGY] [BUGGY] if (count > 0) { _inputPtr = 0; _inputEnd = count; return true; }  _closeInput();  if (count == 0) { throw new IOException("Reader returned 0 characters when trying to read "+_inputEnd); } [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	181	181	1	add	
25	[BUG] [BUGGY] _inputPtr = 0; [FE] ArrayIndexOutOfBoundsException [CONTEXT] _currInputRowStart -= bufSize;    _nameStartOffset -= bufSize; if (_reader != null) { int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); if (count > 0) { [BUGGY] _inputPtr = 0; [BUGGY] _inputEnd = count; return true; }  _closeInput();  if (count == 0) { throw new IOException("Reader returned 0 characters when trying to read "+_inputEnd); } } [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	182	182	1	replace	
26	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] _currInputRowStart -= bufSize;    _nameStartOffset -= bufSize; if (_reader != null) { int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); if (count > 0) { [BUGGY] [BUGGY] _inputPtr = 0; _inputEnd = count; return true; }  _closeInput();  if (count == 0) { throw new IOException("Reader returned 0 characters when trying to read "+_inputEnd); } } [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	182	182	1	add	
27	[BUG] [BUGGY] _inputEnd = count; [FE] ArrayIndexOutOfBoundsException [CONTEXT]    _nameStartOffset -= bufSize; if (_reader != null) { int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); if (count > 0) { _inputPtr = 0; [BUGGY] _inputEnd = count; [BUGGY] return true; }  _closeInput();  if (count == 0) { throw new IOException("Reader returned 0 characters when trying to read "+_inputEnd); } } return false; [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	183	183	1	replace	
28	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT]    _nameStartOffset -= bufSize; if (_reader != null) { int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); if (count > 0) { _inputPtr = 0; [BUGGY] [BUGGY] _inputEnd = count; return true; }  _closeInput();  if (count == 0) { throw new IOException("Reader returned 0 characters when trying to read "+_inputEnd); } } return false; [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	183	183	1	add	
29	[BUG] [BUGGY] return true; [FE] ArrayIndexOutOfBoundsException [CONTEXT]    _nameStartOffset -= bufSize; if (_reader != null) { int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); if (count > 0) { _inputPtr = 0; _inputEnd = count; [BUGGY] return true; [BUGGY] }  _closeInput();  if (count == 0) { throw new IOException("Reader returned 0 characters when trying to read "+_inputEnd); } } return false; } [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	184	184	1	replace	
30	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT]    _nameStartOffset -= bufSize; if (_reader != null) { int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); if (count > 0) { _inputPtr = 0; _inputEnd = count; [BUGGY] [BUGGY] return true; }  _closeInput();  if (count == 0) { throw new IOException("Reader returned 0 characters when trying to read "+_inputEnd); } } return false; } [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	184	184	1	add	
31	[BUG] [BUGGY] return _parseNumber2(neg, startPtr); [FE] ArrayIndexOutOfBoundsException [CONTEXT] { final int inputLen = _inputEnd; int fractLen = 0;  if (ch == '.') { // yes, fraction fract_loop: while (true) { if (ptr >= inputLen) { [BUGGY] return _parseNumber2(neg, startPtr); [BUGGY] } ch = (int) _inputBuffer[ptr++]; if (ch < INT_0 || ch > INT_9) { break fract_loop; } ++fractLen; }  if (fractLen == 0) { reportUnexpectedNumberChar(ch, "Decimal point not followed by a digit"); [CLASS] ReaderBasedJsonParser [METHOD] _parseFloat [RETURN_TYPE] JsonToken  int ch int startPtr int ptr boolean neg int intLen [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject neg Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	1266	1266	1	replace	
32	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { final int inputLen = _inputEnd; int fractLen = 0;  if (ch == '.') { // yes, fraction fract_loop: while (true) { if (ptr >= inputLen) { [BUGGY] [BUGGY] return _parseNumber2(neg, startPtr); } ch = (int) _inputBuffer[ptr++]; if (ch < INT_0 || ch > INT_9) { break fract_loop; } ++fractLen; }  if (fractLen == 0) { reportUnexpectedNumberChar(ch, "Decimal point not followed by a digit"); [CLASS] ReaderBasedJsonParser [METHOD] _parseFloat [RETURN_TYPE] JsonToken  int ch int startPtr int ptr boolean neg int intLen [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject neg Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	1266	1266	1	add	
33	[BUG] [BUGGY] _inputPtr = ptr; [FE] ArrayIndexOutOfBoundsException [CONTEXT] _inputPtr = startPtr; return _parseNumber2(false, startPtr); } ch = (int) _inputBuffer[ptr++]; if (ch < INT_0 || ch > INT_9) { break int_loop; } ++intLen; } if (ch == INT_PERIOD || ch == INT_e || ch == INT_E) { [BUGGY] _inputPtr = ptr; [BUGGY] return _parseFloat(ch, startPtr, ptr, false, intLen); }  --ptr; // need to push back following separator _inputPtr = ptr;  if (_parsingContext.inRoot()) { _verifyRootSpace(ch); } int len = ptr-startPtr; [CLASS] ReaderBasedJsonParser [METHOD] _parsePosNumber [RETURN_TYPE] JsonToken  int ch [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end features i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	replace	
34	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] _inputPtr = startPtr; return _parseNumber2(false, startPtr); } ch = (int) _inputBuffer[ptr++]; if (ch < INT_0 || ch > INT_9) { break int_loop; } ++intLen; } if (ch == INT_PERIOD || ch == INT_e || ch == INT_E) { [BUGGY] [BUGGY] _inputPtr = ptr; return _parseFloat(ch, startPtr, ptr, false, intLen); }  --ptr; // need to push back following separator _inputPtr = ptr;  if (_parsingContext.inRoot()) { _verifyRootSpace(ch); } int len = ptr-startPtr; [CLASS] ReaderBasedJsonParser [METHOD] _parsePosNumber [RETURN_TYPE] JsonToken  int ch [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end features i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1240	1240	1	add	
35	[BUG] [BUGGY] return _parseFloat(ch, startPtr, ptr, false, intLen); [FE] ArrayIndexOutOfBoundsException [CONTEXT] return _parseNumber2(false, startPtr); } ch = (int) _inputBuffer[ptr++]; if (ch < INT_0 || ch > INT_9) { break int_loop; } ++intLen; } if (ch == INT_PERIOD || ch == INT_e || ch == INT_E) { _inputPtr = ptr; [BUGGY] return _parseFloat(ch, startPtr, ptr, false, intLen); [BUGGY] }  --ptr; // need to push back following separator _inputPtr = ptr;  if (_parsingContext.inRoot()) { _verifyRootSpace(ch); } int len = ptr-startPtr; _textBuffer.resetWithShared(_inputBuffer, startPtr, len); [CLASS] ReaderBasedJsonParser [METHOD] _parsePosNumber [RETURN_TYPE] JsonToken  int ch [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end features i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1241	1241	1	replace	
36	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] return _parseNumber2(false, startPtr); } ch = (int) _inputBuffer[ptr++]; if (ch < INT_0 || ch > INT_9) { break int_loop; } ++intLen; } if (ch == INT_PERIOD || ch == INT_e || ch == INT_E) { _inputPtr = ptr; [BUGGY] [BUGGY] return _parseFloat(ch, startPtr, ptr, false, intLen); }  --ptr; // need to push back following separator _inputPtr = ptr;  if (_parsingContext.inRoot()) { _verifyRootSpace(ch); } int len = ptr-startPtr; _textBuffer.resetWithShared(_inputBuffer, startPtr, len); [CLASS] ReaderBasedJsonParser [METHOD] _parsePosNumber [RETURN_TYPE] JsonToken  int ch [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end features i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1241	1241	1	add	
37	[BUG] [BUGGY] final int inputLen = _inputEnd; [FE] ArrayIndexOutOfBoundsException [CONTEXT] { [BUGGY] final int inputLen = _inputEnd; [BUGGY] int fractLen = 0;  if (ch == '.') { // yes, fraction fract_loop: while (true) { if (ptr >= inputLen) { return _parseNumber2(neg, startPtr); } ch = (int) _inputBuffer[ptr++]; [CLASS] ReaderBasedJsonParser [METHOD] _parseFloat [RETURN_TYPE] JsonToken  int ch int startPtr int ptr boolean neg int intLen [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject neg Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	replace	
38	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { [BUGGY] [BUGGY] final int inputLen = _inputEnd; int fractLen = 0;  if (ch == '.') { // yes, fraction fract_loop: while (true) { if (ptr >= inputLen) { return _parseNumber2(neg, startPtr); } ch = (int) _inputBuffer[ptr++]; [CLASS] ReaderBasedJsonParser [METHOD] _parseFloat [RETURN_TYPE] JsonToken  int ch int startPtr int ptr boolean neg int intLen [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject neg Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1258	1258	1	add	
39	[BUG] [BUGGY] int fractLen = 0; [FE] ArrayIndexOutOfBoundsException [CONTEXT] { final int inputLen = _inputEnd; [BUGGY] int fractLen = 0; [BUGGY]   if (ch == '.') { // yes, fraction fract_loop: while (true) { if (ptr >= inputLen) { return _parseNumber2(neg, startPtr); } ch = (int) _inputBuffer[ptr++]; if (ch < INT_0 || ch > INT_9) { [CLASS] ReaderBasedJsonParser [METHOD] _parseFloat [RETURN_TYPE] JsonToken  int ch int startPtr int ptr boolean neg int intLen [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject neg Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1259	1259	1	replace	
40	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { final int inputLen = _inputEnd; [BUGGY] [BUGGY] int fractLen = 0;  if (ch == '.') { // yes, fraction fract_loop: while (true) { if (ptr >= inputLen) { return _parseNumber2(neg, startPtr); } ch = (int) _inputBuffer[ptr++]; if (ch < INT_0 || ch > INT_9) { [CLASS] ReaderBasedJsonParser [METHOD] _parseFloat [RETURN_TYPE] JsonToken  int ch int startPtr int ptr boolean neg int intLen [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject neg Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1259	1259	1	add	
41	[BUG] [BUGGY] if (ch == '.') { // yes, fraction fract_loop:  while (true) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] { final int inputLen = _inputEnd; int fractLen = 0;  [BUGGY] if (ch == '.') { // yes, fraction   fract_loop:      while (true) { [BUGGY] fract_loop: while (true) { if (ptr >= inputLen) { return _parseNumber2(neg, startPtr); } ch = (int) _inputBuffer[ptr++]; if (ch < INT_0 || ch > INT_9) { break fract_loop; } ++fractLen; [CLASS] ReaderBasedJsonParser [METHOD] _parseFloat [RETURN_TYPE] JsonToken  int ch int startPtr int ptr boolean neg int intLen [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject neg Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1262	1264	1	replace	
42	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { final int inputLen = _inputEnd; int fractLen = 0;  [BUGGY] [BUGGY] if (ch == '.') { // yes, fraction   fract_loop:      while (true) { fract_loop: while (true) { if (ptr >= inputLen) { return _parseNumber2(neg, startPtr); } ch = (int) _inputBuffer[ptr++]; if (ch < INT_0 || ch > INT_9) { break fract_loop; } ++fractLen; [CLASS] ReaderBasedJsonParser [METHOD] _parseFloat [RETURN_TYPE] JsonToken  int ch int startPtr int ptr boolean neg int intLen [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject neg Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1262	1264	1	add	
43	[BUG] [BUGGY] if (ptr >= inputLen) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] { final int inputLen = _inputEnd; int fractLen = 0;  if (ch == '.') { // yes, fraction fract_loop: while (true) { [BUGGY] if (ptr >= inputLen) { [BUGGY] return _parseNumber2(neg, startPtr); } ch = (int) _inputBuffer[ptr++]; if (ch < INT_0 || ch > INT_9) { break fract_loop; } ++fractLen; }  if (fractLen == 0) { [CLASS] ReaderBasedJsonParser [METHOD] _parseFloat [RETURN_TYPE] JsonToken  int ch int startPtr int ptr boolean neg int intLen [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject neg Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1265	1265	1	replace	
44	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { final int inputLen = _inputEnd; int fractLen = 0;  if (ch == '.') { // yes, fraction fract_loop: while (true) { [BUGGY] [BUGGY] if (ptr >= inputLen) { return _parseNumber2(neg, startPtr); } ch = (int) _inputBuffer[ptr++]; if (ch < INT_0 || ch > INT_9) { break fract_loop; } ++fractLen; }  if (fractLen == 0) { [CLASS] ReaderBasedJsonParser [METHOD] _parseFloat [RETURN_TYPE] JsonToken  int ch int startPtr int ptr boolean neg int intLen [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject neg Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1265	1265	1	add	
45	[BUG] [BUGGY] ch = (int) _inputBuffer[ptr++]; [FE] ArrayIndexOutOfBoundsException [CONTEXT] final int inputLen = _inputEnd; int fractLen = 0;  if (ch == '.') { // yes, fraction fract_loop: while (true) { if (ptr >= inputLen) { return _parseNumber2(neg, startPtr); } [BUGGY] ch = (int) _inputBuffer[ptr++]; [BUGGY] if (ch < INT_0 || ch > INT_9) { break fract_loop; } ++fractLen; }  if (fractLen == 0) { reportUnexpectedNumberChar(ch, "Decimal point not followed by a digit"); } } [CLASS] ReaderBasedJsonParser [METHOD] _parseFloat [RETURN_TYPE] JsonToken  int ch int startPtr int ptr boolean neg int intLen [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject neg Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1268	1268	1	replace	
46	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] final int inputLen = _inputEnd; int fractLen = 0;  if (ch == '.') { // yes, fraction fract_loop: while (true) { if (ptr >= inputLen) { return _parseNumber2(neg, startPtr); } [BUGGY] [BUGGY] ch = (int) _inputBuffer[ptr++]; if (ch < INT_0 || ch > INT_9) { break fract_loop; } ++fractLen; }  if (fractLen == 0) { reportUnexpectedNumberChar(ch, "Decimal point not followed by a digit"); } } [CLASS] ReaderBasedJsonParser [METHOD] _parseFloat [RETURN_TYPE] JsonToken  int ch int startPtr int ptr boolean neg int intLen [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject neg Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1268	1268	1	add	
47	[BUG] [BUGGY] if (ch < INT_0 || ch > INT_9) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] int fractLen = 0;  if (ch == '.') { // yes, fraction fract_loop: while (true) { if (ptr >= inputLen) { return _parseNumber2(neg, startPtr); } ch = (int) _inputBuffer[ptr++]; [BUGGY] if (ch < INT_0 || ch > INT_9) { [BUGGY] break fract_loop; } ++fractLen; }  if (fractLen == 0) { reportUnexpectedNumberChar(ch, "Decimal point not followed by a digit"); } } int expLen = 0; [CLASS] ReaderBasedJsonParser [METHOD] _parseFloat [RETURN_TYPE] JsonToken  int ch int startPtr int ptr boolean neg int intLen [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject neg Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1269	1269	1	replace	
48	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] int fractLen = 0;  if (ch == '.') { // yes, fraction fract_loop: while (true) { if (ptr >= inputLen) { return _parseNumber2(neg, startPtr); } ch = (int) _inputBuffer[ptr++]; [BUGGY] [BUGGY] if (ch < INT_0 || ch > INT_9) { break fract_loop; } ++fractLen; }  if (fractLen == 0) { reportUnexpectedNumberChar(ch, "Decimal point not followed by a digit"); } } int expLen = 0; [CLASS] ReaderBasedJsonParser [METHOD] _parseFloat [RETURN_TYPE] JsonToken  int ch int startPtr int ptr boolean neg int intLen [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject neg Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1269	1269	1	add	
50	[BUG] [BUGGY] outBuf[outPtr++] = c; [FE] ArrayIndexOutOfBoundsException [CONTEXT] c = _inputBuffer[_inputPtr++]; }  if (intLen == 0) { return _handleInvalidNumberStart(c, neg); } int fractLen = 0;  if (c == '.') { // yes, fraction [BUGGY] outBuf[outPtr++] = c; [BUGGY]  fract_loop: while (true) { if (_inputPtr >= _inputEnd && !loadMore()) { eof = true; break fract_loop; } c = _inputBuffer[_inputPtr++]; if (c < INT_0 || c > INT_9) { break fract_loop; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1418	1418	1	replace	
51	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] c = _inputBuffer[_inputPtr++]; }  if (intLen == 0) { return _handleInvalidNumberStart(c, neg); } int fractLen = 0;  if (c == '.') { // yes, fraction [BUGGY] [BUGGY] outBuf[outPtr++] = c; fract_loop: while (true) { if (_inputPtr >= _inputEnd && !loadMore()) { eof = true; break fract_loop; } c = _inputBuffer[_inputPtr++]; if (c < INT_0 || c > INT_9) { break fract_loop; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4472135954999579	1418	1418	1	add	
52	[BUG] [BUGGY] if (!loadMore()) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] {   if (_inputPtr >= _inputEnd) { [BUGGY] if (!loadMore()) { [BUGGY] return _eofAsNextChar(); } } int i = _inputBuffer[_inputPtr++]; if (i > INT_SPACE) { if (i == INT_SLASH || i == INT_HASH) { --_inputPtr; return _skipWSOrEnd2(); } return i; [CLASS] ReaderBasedJsonParser [METHOD] _skipWSOrEnd [RETURN_TYPE] int  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof firstOk gotColon inObject neg negative Reader _reader r int[] _icLatin1 codes ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end endChar expLen features fractLen hash i id inLen inPtr inputLen intLen len maxCode nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inBuf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	2259	2259	1	replace	
53	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] {   if (_inputPtr >= _inputEnd) { [BUGGY] [BUGGY] if (!loadMore()) { return _eofAsNextChar(); } } int i = _inputBuffer[_inputPtr++]; if (i > INT_SPACE) { if (i == INT_SLASH || i == INT_HASH) { --_inputPtr; return _skipWSOrEnd2(); } return i; [CLASS] ReaderBasedJsonParser [METHOD] _skipWSOrEnd [RETURN_TYPE] int  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof firstOk gotColon inObject neg negative Reader _reader r int[] _icLatin1 codes ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end endChar expLen features fractLen hash i id inLen inPtr inputLen intLen len maxCode nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inBuf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.4082482904638631	2259	2259	1	add	
54	[BUG] [BUGGY] final int bufSize = _inputEnd; [FE] ArrayIndexOutOfBoundsException [CONTEXT] { [BUGGY] final int bufSize = _inputEnd; [BUGGY]  _currInputProcessed += bufSize; _currInputRowStart -= bufSize;    _nameStartOffset -= bufSize; if (_reader != null) { [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.3779644730092272	169	169	1	replace	
55	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { [BUGGY] [BUGGY] final int bufSize = _inputEnd; _currInputProcessed += bufSize; _currInputRowStart -= bufSize;    _nameStartOffset -= bufSize; if (_reader != null) { [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.3779644730092272	169	169	1	add	
56	[BUG] [BUGGY] _currInputProcessed += bufSize; [FE] ArrayIndexOutOfBoundsException [CONTEXT] { final int bufSize = _inputEnd; [BUGGY] _currInputProcessed += bufSize; [BUGGY] _currInputRowStart -= bufSize;    _nameStartOffset -= bufSize; if (_reader != null) { int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); if (count > 0) { [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.3779644730092272	171	171	1	replace	
57	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { final int bufSize = _inputEnd; [BUGGY] [BUGGY] _currInputProcessed += bufSize; _currInputRowStart -= bufSize;    _nameStartOffset -= bufSize; if (_reader != null) { int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); if (count > 0) { [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.3779644730092272	171	171	1	add	
58	[BUG] [BUGGY] _currInputRowStart -= bufSize; [FE] ArrayIndexOutOfBoundsException [CONTEXT] { final int bufSize = _inputEnd; _currInputProcessed += bufSize; [BUGGY] _currInputRowStart -= bufSize; [BUGGY]     _nameStartOffset -= bufSize; if (_reader != null) { int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); if (count > 0) { _inputPtr = 0; [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.3779644730092272	172	172	1	replace	
59	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { final int bufSize = _inputEnd; _currInputProcessed += bufSize; [BUGGY] [BUGGY] _currInputRowStart -= bufSize;    _nameStartOffset -= bufSize; if (_reader != null) { int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); if (count > 0) { _inputPtr = 0; [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.3779644730092272	172	172	1	add	
60	[BUG] [BUGGY] _nameStartOffset -= bufSize; [FE] ArrayIndexOutOfBoundsException [CONTEXT] { final int bufSize = _inputEnd; _currInputProcessed += bufSize; _currInputRowStart -= bufSize;    [BUGGY] _nameStartOffset -= bufSize; [BUGGY]  if (_reader != null) { int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); if (count > 0) { _inputPtr = 0; _inputEnd = count; return true; }  _closeInput(); [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.3779644730092272	177	177	1	replace	
61	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { final int bufSize = _inputEnd; _currInputProcessed += bufSize; _currInputRowStart -= bufSize;    [BUGGY] [BUGGY] _nameStartOffset -= bufSize; if (_reader != null) { int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); if (count > 0) { _inputPtr = 0; _inputEnd = count; return true; }  _closeInput(); [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.3779644730092272	177	177	1	add	
62	[BUG] [BUGGY] if (_reader != null) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] final int bufSize = _inputEnd; _currInputProcessed += bufSize; _currInputRowStart -= bufSize;    _nameStartOffset -= bufSize; [BUGGY] if (_reader != null) { [BUGGY] int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); if (count > 0) { _inputPtr = 0; _inputEnd = count; return true; }  _closeInput();  if (count == 0) { [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.3779644730092272	179	179	1	replace	
63	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] final int bufSize = _inputEnd; _currInputProcessed += bufSize; _currInputRowStart -= bufSize;    _nameStartOffset -= bufSize; [BUGGY] [BUGGY] if (_reader != null) { int count = _reader.read(_inputBuffer, 0, _inputBuffer.length); if (count > 0) { _inputPtr = 0; _inputEnd = count; return true; }  _closeInput();  if (count == 0) { [CLASS] ReaderBasedJsonParser [METHOD] loadMore [RETURN_TYPE] boolean  [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bufSize count end features origPtr start long _nameStartOffset char[] _inputBuffer inputBuffer  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.3779644730092272	179	179	1	add	
64	[BUG] [BUGGY] _inputPtr = neg ? (startPtr+1) : startPtr; [FE] ArrayIndexOutOfBoundsException [CONTEXT] { [BUGGY] _inputPtr = neg ? (startPtr+1) : startPtr; [BUGGY] char[] outBuf = _textBuffer.emptyAndGetCurrentSegment(); int outPtr = 0;  if (neg) { outBuf[outPtr++] = '-'; }  int intLen = 0; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1376	1376	1	replace	
65	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { [BUGGY] [BUGGY] _inputPtr = neg ? (startPtr+1) : startPtr; char[] outBuf = _textBuffer.emptyAndGetCurrentSegment(); int outPtr = 0;  if (neg) { outBuf[outPtr++] = '-'; }  int intLen = 0; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1376	1376	1	add	
66	[BUG] [BUGGY] char[] outBuf = _textBuffer.emptyAndGetCurrentSegment(); [FE] ArrayIndexOutOfBoundsException [CONTEXT] { _inputPtr = neg ? (startPtr+1) : startPtr; [BUGGY] char[] outBuf = _textBuffer.emptyAndGetCurrentSegment(); [BUGGY] int outPtr = 0;  if (neg) { outBuf[outPtr++] = '-'; }  int intLen = 0; char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	replace	
67	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { _inputPtr = neg ? (startPtr+1) : startPtr; [BUGGY] [BUGGY] char[] outBuf = _textBuffer.emptyAndGetCurrentSegment(); int outPtr = 0;  if (neg) { outBuf[outPtr++] = '-'; }  int intLen = 0; char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1377	1377	1	add	
68	[BUG] [BUGGY] int outPtr = 0; [FE] ArrayIndexOutOfBoundsException [CONTEXT] { _inputPtr = neg ? (startPtr+1) : startPtr; char[] outBuf = _textBuffer.emptyAndGetCurrentSegment(); [BUGGY] int outPtr = 0; [BUGGY]   if (neg) { outBuf[outPtr++] = '-'; }  int intLen = 0; char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); if (c == '0') { [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1378	1378	1	replace	
69	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { _inputPtr = neg ? (startPtr+1) : startPtr; char[] outBuf = _textBuffer.emptyAndGetCurrentSegment(); [BUGGY] [BUGGY] int outPtr = 0;  if (neg) { outBuf[outPtr++] = '-'; }  int intLen = 0; char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); if (c == '0') { [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1378	1378	1	add	
70	[BUG] [BUGGY] if (neg) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] { _inputPtr = neg ? (startPtr+1) : startPtr; char[] outBuf = _textBuffer.emptyAndGetCurrentSegment(); int outPtr = 0;  [BUGGY] if (neg) { [BUGGY] outBuf[outPtr++] = '-'; }  int intLen = 0; char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); if (c == '0') { c = _verifyNoLeadingZeroes(); } boolean eof = false; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1381	1381	1	replace	
71	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] { _inputPtr = neg ? (startPtr+1) : startPtr; char[] outBuf = _textBuffer.emptyAndGetCurrentSegment(); int outPtr = 0;  [BUGGY] [BUGGY] if (neg) { outBuf[outPtr++] = '-'; }  int intLen = 0; char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); if (c == '0') { c = _verifyNoLeadingZeroes(); } boolean eof = false; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1381	1381	1	add	
72	[BUG] [BUGGY] int intLen = 0; [FE] ArrayIndexOutOfBoundsException [CONTEXT] _inputPtr = neg ? (startPtr+1) : startPtr; char[] outBuf = _textBuffer.emptyAndGetCurrentSegment(); int outPtr = 0;  if (neg) { outBuf[outPtr++] = '-'; }  [BUGGY] int intLen = 0; [BUGGY] char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); if (c == '0') { c = _verifyNoLeadingZeroes(); } boolean eof = false;  int_loop: while (c >= '0' && c <= '9') { ++intLen; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	replace	
73	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] _inputPtr = neg ? (startPtr+1) : startPtr; char[] outBuf = _textBuffer.emptyAndGetCurrentSegment(); int outPtr = 0;  if (neg) { outBuf[outPtr++] = '-'; }  [BUGGY] [BUGGY] int intLen = 0; char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); if (c == '0') { c = _verifyNoLeadingZeroes(); } boolean eof = false;  int_loop: while (c >= '0' && c <= '9') { ++intLen; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1386	1386	1	add	
74	[BUG] [BUGGY] char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); [FE] ArrayIndexOutOfBoundsException [CONTEXT] char[] outBuf = _textBuffer.emptyAndGetCurrentSegment(); int outPtr = 0;  if (neg) { outBuf[outPtr++] = '-'; }  int intLen = 0; [BUGGY] char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); [BUGGY] if (c == '0') { c = _verifyNoLeadingZeroes(); } boolean eof = false;  int_loop: while (c >= '0' && c <= '9') { ++intLen; if (outPtr >= outBuf.length) { [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	
75	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] char[] outBuf = _textBuffer.emptyAndGetCurrentSegment(); int outPtr = 0;  if (neg) { outBuf[outPtr++] = '-'; }  int intLen = 0; [BUGGY] [BUGGY] char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); if (c == '0') { c = _verifyNoLeadingZeroes(); } boolean eof = false;  int_loop: while (c >= '0' && c <= '9') { ++intLen; if (outPtr >= outBuf.length) { [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	add	
76	[BUG] [BUGGY] if (c == '0') { [FE] ArrayIndexOutOfBoundsException [CONTEXT] int outPtr = 0;  if (neg) { outBuf[outPtr++] = '-'; }  int intLen = 0; char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); [BUGGY] if (c == '0') { [BUGGY] c = _verifyNoLeadingZeroes(); } boolean eof = false;  int_loop: while (c >= '0' && c <= '9') { ++intLen; if (outPtr >= outBuf.length) { outBuf = _textBuffer.finishCurrentSegment(); [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1388	1388	1	replace	
77	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] int outPtr = 0;  if (neg) { outBuf[outPtr++] = '-'; }  int intLen = 0; char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); [BUGGY] [BUGGY] if (c == '0') { c = _verifyNoLeadingZeroes(); } boolean eof = false;  int_loop: while (c >= '0' && c <= '9') { ++intLen; if (outPtr >= outBuf.length) { outBuf = _textBuffer.finishCurrentSegment(); [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1388	1388	1	add	
78	[BUG] [BUGGY] boolean eof = false; [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (neg) { outBuf[outPtr++] = '-'; }  int intLen = 0; char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); if (c == '0') { c = _verifyNoLeadingZeroes(); } [BUGGY] boolean eof = false; [BUGGY]   int_loop: while (c >= '0' && c <= '9') { ++intLen; if (outPtr >= outBuf.length) { outBuf = _textBuffer.finishCurrentSegment(); outPtr = 0; } outBuf[outPtr++] = c; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1391	1391	1	replace	
79	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] if (neg) { outBuf[outPtr++] = '-'; }  int intLen = 0; char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); if (c == '0') { c = _verifyNoLeadingZeroes(); } [BUGGY] [BUGGY] boolean eof = false;  int_loop: while (c >= '0' && c <= '9') { ++intLen; if (outPtr >= outBuf.length) { outBuf = _textBuffer.finishCurrentSegment(); outPtr = 0; } outBuf[outPtr++] = c; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1391	1391	1	add	
80	[BUG] [BUGGY] while (c >= '0' && c <= '9') { [FE] ArrayIndexOutOfBoundsException [CONTEXT]  int intLen = 0; char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); if (c == '0') { c = _verifyNoLeadingZeroes(); } boolean eof = false;  int_loop: [BUGGY] while (c >= '0' && c <= '9') { [BUGGY] ++intLen; if (outPtr >= outBuf.length) { outBuf = _textBuffer.finishCurrentSegment(); outPtr = 0; } outBuf[outPtr++] = c; if (_inputPtr >= _inputEnd && !loadMore()) {  c = CHAR_NULL; eof = true; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1395	1395	1	replace	
81	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT]  int intLen = 0; char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); if (c == '0') { c = _verifyNoLeadingZeroes(); } boolean eof = false;  int_loop: [BUGGY] [BUGGY] while (c >= '0' && c <= '9') { ++intLen; if (outPtr >= outBuf.length) { outBuf = _textBuffer.finishCurrentSegment(); outPtr = 0; } outBuf[outPtr++] = c; if (_inputPtr >= _inputEnd && !loadMore()) {  c = CHAR_NULL; eof = true; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1395	1395	1	add	
82	[BUG] [BUGGY] ++intLen; [FE] ArrayIndexOutOfBoundsException [CONTEXT] int intLen = 0; char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); if (c == '0') { c = _verifyNoLeadingZeroes(); } boolean eof = false;  int_loop: while (c >= '0' && c <= '9') { [BUGGY] ++intLen; [BUGGY] if (outPtr >= outBuf.length) { outBuf = _textBuffer.finishCurrentSegment(); outPtr = 0; } outBuf[outPtr++] = c; if (_inputPtr >= _inputEnd && !loadMore()) {  c = CHAR_NULL; eof = true; break int_loop; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1396	1396	1	replace	
83	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] int intLen = 0; char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); if (c == '0') { c = _verifyNoLeadingZeroes(); } boolean eof = false;  int_loop: while (c >= '0' && c <= '9') { [BUGGY] [BUGGY] ++intLen; if (outPtr >= outBuf.length) { outBuf = _textBuffer.finishCurrentSegment(); outPtr = 0; } outBuf[outPtr++] = c; if (_inputPtr >= _inputEnd && !loadMore()) {  c = CHAR_NULL; eof = true; break int_loop; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1396	1396	1	add	
84	[BUG] [BUGGY] if (outPtr >= outBuf.length) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); if (c == '0') { c = _verifyNoLeadingZeroes(); } boolean eof = false;  int_loop: while (c >= '0' && c <= '9') { ++intLen; [BUGGY] if (outPtr >= outBuf.length) { [BUGGY] outBuf = _textBuffer.finishCurrentSegment(); outPtr = 0; } outBuf[outPtr++] = c; if (_inputPtr >= _inputEnd && !loadMore()) {  c = CHAR_NULL; eof = true; break int_loop; } [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1397	1397	1	replace	
85	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] char c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar("No digit following minus sign"); if (c == '0') { c = _verifyNoLeadingZeroes(); } boolean eof = false;  int_loop: while (c >= '0' && c <= '9') { ++intLen; [BUGGY] [BUGGY] if (outPtr >= outBuf.length) { outBuf = _textBuffer.finishCurrentSegment(); outPtr = 0; } outBuf[outPtr++] = c; if (_inputPtr >= _inputEnd && !loadMore()) {  c = CHAR_NULL; eof = true; break int_loop; } [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1397	1397	1	add	
86	[BUG] [BUGGY] outBuf[outPtr++] = c; [FE] ArrayIndexOutOfBoundsException [CONTEXT] boolean eof = false;  int_loop: while (c >= '0' && c <= '9') { ++intLen; if (outPtr >= outBuf.length) { outBuf = _textBuffer.finishCurrentSegment(); outPtr = 0; } [BUGGY] outBuf[outPtr++] = c; [BUGGY] if (_inputPtr >= _inputEnd && !loadMore()) {  c = CHAR_NULL; eof = true; break int_loop; } c = _inputBuffer[_inputPtr++]; }  if (intLen == 0) { [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	replace	
87	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] boolean eof = false;  int_loop: while (c >= '0' && c <= '9') { ++intLen; if (outPtr >= outBuf.length) { outBuf = _textBuffer.finishCurrentSegment(); outPtr = 0; } [BUGGY] [BUGGY] outBuf[outPtr++] = c; if (_inputPtr >= _inputEnd && !loadMore()) {  c = CHAR_NULL; eof = true; break int_loop; } c = _inputBuffer[_inputPtr++]; }  if (intLen == 0) { [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1401	1401	1	add	
88	[BUG] [BUGGY] if (_inputPtr >= _inputEnd && !loadMore()) { [FE] ArrayIndexOutOfBoundsException [CONTEXT]  int_loop: while (c >= '0' && c <= '9') { ++intLen; if (outPtr >= outBuf.length) { outBuf = _textBuffer.finishCurrentSegment(); outPtr = 0; } outBuf[outPtr++] = c; [BUGGY] if (_inputPtr >= _inputEnd && !loadMore()) { [BUGGY]  c = CHAR_NULL; eof = true; break int_loop; } c = _inputBuffer[_inputPtr++]; }  if (intLen == 0) { return _handleInvalidNumberStart(c, neg); [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1402	1402	1	replace	
89	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT]  int_loop: while (c >= '0' && c <= '9') { ++intLen; if (outPtr >= outBuf.length) { outBuf = _textBuffer.finishCurrentSegment(); outPtr = 0; } outBuf[outPtr++] = c; [BUGGY] [BUGGY] if (_inputPtr >= _inputEnd && !loadMore()) {  c = CHAR_NULL; eof = true; break int_loop; } c = _inputBuffer[_inputPtr++]; }  if (intLen == 0) { return _handleInvalidNumberStart(c, neg); [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1402	1402	1	add	
90	[BUG] [BUGGY] c = _inputBuffer[_inputPtr++]; [FE] ArrayIndexOutOfBoundsException [CONTEXT] outBuf = _textBuffer.finishCurrentSegment(); outPtr = 0; } outBuf[outPtr++] = c; if (_inputPtr >= _inputEnd && !loadMore()) {  c = CHAR_NULL; eof = true; break int_loop; } [BUGGY] c = _inputBuffer[_inputPtr++]; [BUGGY] }  if (intLen == 0) { return _handleInvalidNumberStart(c, neg); } int fractLen = 0;  if (c == '.') { // yes, fraction outBuf[outPtr++] = c; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1408	1408	1	replace	
91	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] outBuf = _textBuffer.finishCurrentSegment(); outPtr = 0; } outBuf[outPtr++] = c; if (_inputPtr >= _inputEnd && !loadMore()) {  c = CHAR_NULL; eof = true; break int_loop; } [BUGGY] [BUGGY] c = _inputBuffer[_inputPtr++]; }  if (intLen == 0) { return _handleInvalidNumberStart(c, neg); } int fractLen = 0;  if (c == '.') { // yes, fraction outBuf[outPtr++] = c; [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1408	1408	1	add	
92	[BUG] [BUGGY] if (intLen == 0) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] outBuf[outPtr++] = c; if (_inputPtr >= _inputEnd && !loadMore()) {  c = CHAR_NULL; eof = true; break int_loop; } c = _inputBuffer[_inputPtr++]; }  [BUGGY] if (intLen == 0) { [BUGGY] return _handleInvalidNumberStart(c, neg); } int fractLen = 0;  if (c == '.') { // yes, fraction outBuf[outPtr++] = c; fract_loop: while (true) { [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1411	1411	1	replace	
93	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] outBuf[outPtr++] = c; if (_inputPtr >= _inputEnd && !loadMore()) {  c = CHAR_NULL; eof = true; break int_loop; } c = _inputBuffer[_inputPtr++]; }  [BUGGY] [BUGGY] if (intLen == 0) { return _handleInvalidNumberStart(c, neg); } int fractLen = 0;  if (c == '.') { // yes, fraction outBuf[outPtr++] = c; fract_loop: while (true) { [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1411	1411	1	add	
94	[BUG] [BUGGY] int fractLen = 0; [FE] ArrayIndexOutOfBoundsException [CONTEXT] eof = true; break int_loop; } c = _inputBuffer[_inputPtr++]; }  if (intLen == 0) { return _handleInvalidNumberStart(c, neg); } [BUGGY] int fractLen = 0; [BUGGY]  if (c == '.') { // yes, fraction outBuf[outPtr++] = c; fract_loop: while (true) { if (_inputPtr >= _inputEnd && !loadMore()) { eof = true; break fract_loop; } [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	replace	
95	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] eof = true; break int_loop; } c = _inputBuffer[_inputPtr++]; }  if (intLen == 0) { return _handleInvalidNumberStart(c, neg); } [BUGGY] [BUGGY] int fractLen = 0;  if (c == '.') { // yes, fraction outBuf[outPtr++] = c; fract_loop: while (true) { if (_inputPtr >= _inputEnd && !loadMore()) { eof = true; break fract_loop; } [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1415	1415	1	add	
96	[BUG] [BUGGY] if (c == '.') { // yes, fraction outBuf[outPtr++] = c; [FE] ArrayIndexOutOfBoundsException [CONTEXT] } c = _inputBuffer[_inputPtr++]; }  if (intLen == 0) { return _handleInvalidNumberStart(c, neg); } int fractLen = 0;  [BUGGY] if (c == '.') { // yes, fraction   outBuf[outPtr++] = c; [BUGGY] outBuf[outPtr++] = c; fract_loop: while (true) { if (_inputPtr >= _inputEnd && !loadMore()) { eof = true; break fract_loop; } c = _inputBuffer[_inputPtr++]; if (c < INT_0 || c > INT_9) { [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1417	1418	1	replace	
97	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] } c = _inputBuffer[_inputPtr++]; }  if (intLen == 0) { return _handleInvalidNumberStart(c, neg); } int fractLen = 0;  [BUGGY] [BUGGY] if (c == '.') { // yes, fraction   outBuf[outPtr++] = c; outBuf[outPtr++] = c; fract_loop: while (true) { if (_inputPtr >= _inputEnd && !loadMore()) { eof = true; break fract_loop; } c = _inputBuffer[_inputPtr++]; if (c < INT_0 || c > INT_9) { [CLASS] ReaderBasedJsonParser [METHOD] _parseNumber2 [RETURN_TYPE] JsonToken  boolean neg int startPtr [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable eof inObject neg char c Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end expLen features fractLen i id inputLen intLen len nameLen offset origPtr outPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1417	1418	1	add	
98	[BUG] [BUGGY] ++intLen; [FE] ArrayIndexOutOfBoundsException [CONTEXT] int_loop: while (true) { if (ptr >= inputLen) { _inputPtr = startPtr; return _parseNumber2(false, startPtr); } ch = (int) _inputBuffer[ptr++]; if (ch < INT_0 || ch > INT_9) { break int_loop; } [BUGGY] ++intLen; [BUGGY] } if (ch == INT_PERIOD || ch == INT_e || ch == INT_E) { _inputPtr = ptr; return _parseFloat(ch, startPtr, ptr, false, intLen); }  --ptr; // need to push back following separator _inputPtr = ptr;  if (_parsingContext.inRoot()) { [CLASS] ReaderBasedJsonParser [METHOD] _parsePosNumber [RETURN_TYPE] JsonToken  int ch [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end features i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.31622776601683794	1237	1237	1	replace	
99	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] int_loop: while (true) { if (ptr >= inputLen) { _inputPtr = startPtr; return _parseNumber2(false, startPtr); } ch = (int) _inputBuffer[ptr++]; if (ch < INT_0 || ch > INT_9) { break int_loop; } [BUGGY] [BUGGY] ++intLen; } if (ch == INT_PERIOD || ch == INT_e || ch == INT_E) { _inputPtr = ptr; return _parseFloat(ch, startPtr, ptr, false, intLen); }  --ptr; // need to push back following separator _inputPtr = ptr;  if (_parsingContext.inRoot()) { [CLASS] ReaderBasedJsonParser [METHOD] _parsePosNumber [RETURN_TYPE] JsonToken  int ch [VARIABLES] boolean _bufferRecyclable _tokenIncomplete bufferRecyclable inObject Reader _reader r int[] _icLatin1 ObjectCodec _objectCodec c codec CharsToNameCanonicalizer _symbols st int _hashSeed _nameStartCol _nameStartRow bits bufSize ch count decodedData defaultValue end features i id inputLen intLen len nameLen offset origPtr outputCount outputEnd outputPtr ptr start startPtr long _nameStartOffset defaultValue char[] _inputBuffer buf inputBuffer nameChars  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.31622776601683794	1237	1237	1	add	
