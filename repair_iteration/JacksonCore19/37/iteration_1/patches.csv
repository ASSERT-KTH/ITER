bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  c  =(_inputPtr  <  inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign. ");  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =(_inputPtr  <  inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign. ");  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =(_inputPtr  <  inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign. ");	  char    c    =(_inputPtr    <    inputEnd)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    digit    following    minus    sign   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  char  c  =(_inputPtr  <  inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  intLen);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =(_inputPtr  <  inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  intLen);  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =(_inputPtr  <  inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  intLen);	  char    c    =(_inputPtr    <    inputEnd)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    digit    following    minus    sign   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  char  c  =(_inputPtr  <  inputLen)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  intLen);  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =(_inputPtr  <  inputLen)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  intLen);  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =(_inputPtr  <  inputLen)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  intLen);	  char    c    =(_inputPtr    <    inputLen)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    digit    following    minus    sign   ");    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  char  c  =(_inputPtr  <  inputLen)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign. ");  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =(_inputPtr  <  inputLen)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign. ");  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =(_inputPtr  <  inputLen)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign. ");	  char    c    =(_inputPtr    <    inputLen)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    digit    following    minus    sign   ");    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  char  c  =(_inputPtr  <  intLen)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ");  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =(_inputPtr  <  intLen)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ");  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =(_inputPtr  <  intLen)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ");	  char    c    =(_inputPtr    <    inputLen)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    digit    following    minus    sign   ");    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  char  c  =(_inputPtr  >>  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ");  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =(_inputPtr  >>  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ");  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =(_inputPtr  >>  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ");	  char    c    =(_inputPtr    >=    _inputEnd)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    digit    following    minus    sign   ");    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  char  c  =(_inputPtr  >=  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign. ");  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =(_inputPtr  >=  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign. ");  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =(_inputPtr  >=  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign. ");	  char    c    =(_inputPtr    >=    _inputEnd)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    digit    following    minus    sign   ");    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  char  c  =  _textBuffer.emptyAndGetCurrentSegment();  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =  _textBuffer.emptyAndGetCurrentSegment();  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =  _textBuffer.emptyAndGetCurrentSegment();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  char  c  =  _textBuffer.emptyAndClearBuffer();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =  _textBuffer.emptyAndClearBuffer();  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =  _textBuffer.emptyAndClearBuffer();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  char  c  =  _textBuffer.emptyAndGetCurrentSegment();  outBuf[outPtr++]  =  '-';  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =  _textBuffer.emptyAndGetCurrentSegment();  outBuf[outPtr++]  =  '-';  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =  _textBuffer.emptyAndGetCurrentSegment();  outBuf[outPtr++]  =  '-';	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  char  c  =  _parseChar(outBuf,  0,  outPtr);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =  _parseChar(outBuf,  0,  outPtr);  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =  _parseChar(outBuf,  0,  outPtr);	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  char  c  =  _textBuffer.finishCurrentSegment();  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =  _textBuffer.finishCurrentSegment();  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =  _textBuffer.finishCurrentSegment();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  char  c  =  _textBuffer.getChars(startPtr,  outPtr);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =  _textBuffer.getChars(startPtr,  outPtr);  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =  _textBuffer.getChars(startPtr,  outPtr);	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  intLen);  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  intLen);  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =(_inputPtr  <  _inputEnd)?  _inputBuffer[_inputPtr++]  :  getNextChar( "No  digit  following  minus  sign ",  intLen);	  char    c    =(_inputPtr    >=    _inputEnd)?    _inputBuffer[_inputPtr++]    :    getNextChar(   "No    digit    following    minus    sign   ");    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
15	[BUG]  [BUGGY]  char  c  =  _textBuffer.getCurrentSegment();  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =  _textBuffer.getCurrentSegment();  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =  _textBuffer.getCurrentSegment();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  char  c  =  Character.toLowerCase(_textBuffer.getCurrentSegment());  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =  Character.toLowerCase(_textBuffer.getCurrentSegment());  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =  Character.toLowerCase(_textBuffer.getCurrentSegment());	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  char  c  =  _tokenIncomplete();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    char[]  outBuf  =  _textBuffer.emptyAndGetCurrentSegment();  int  outPtr  =  0;  if  (neg)  {  outBuf[outPtr++]  =  '-';  }  int  intLen  =  0;    [BUGGY]  char  c  =  _tokenIncomplete();  [BUGGY]    if  (c  ==  '0')  {  c  =  _verifyNoLeadingZeroes();  }  boolean  eof  =  false;  int_loop:  while  (c  >=  '0'  &&  c  <=  '9')  {  ++intLen;  if  (outPtr  >=  outBuf.length)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1387	1387	1	replace	char  c  =  _tokenIncomplete();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
