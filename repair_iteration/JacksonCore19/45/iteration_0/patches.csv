bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  c  =  _textBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  c;  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  [BUGGY]  c  =  _textBuffer[_inputPtr++];  [BUGGY]  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }  int  fractLen  =  0;  if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1408	1408	1	replace	c  =  _textBuffer[_inputPtr++];	c  =  _inputBuffer[_inputPtr++];  	non-compiled	[CE]  illegal  start  of  type	90	None	replace
2	[BUG]  [BUGGY]  c  =  _inputBuffer[_inputPtr++]  +  1;  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  c;  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  [BUGGY]  c  =  _inputBuffer[_inputPtr++]  +  1;  [BUGGY]  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }  int  fractLen  =  0;  if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1408	1408	1	replace	c  =  _inputBuffer[_inputPtr++]  +  1;	c  =  _inputBuffer[_inputPtr++];  	non-compiled	[CE]  illegal  start  of  type	90	None	replace
3	[BUG]  [BUGGY]  c  =  _inputBuffer[outPtr++];  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  c;  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  [BUGGY]  c  =  _inputBuffer[outPtr++];  [BUGGY]  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }  int  fractLen  =  0;  if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1408	1408	1	replace	c  =  _inputBuffer[outPtr++];	c  =  _inputBuffer[_inputPtr++];  	non-compiled	[CE]  illegal  start  of  type	90	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  c;  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  [BUGGY]    [BUGGY]  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }  int  fractLen  =  0;  if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1408	1408	1	replace	  	c  =  _inputBuffer[_inputPtr++];  	non-compiled	[CE]  illegal  start  of  type	90	None	replace
5	[BUG]  [BUGGY]  c  =  _textBuffer.finishCurrentSegment();  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  c;  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  [BUGGY]  c  =  _textBuffer.finishCurrentSegment();  [BUGGY]  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }  int  fractLen  =  0;  if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1408	1408	1	replace	c  =  _textBuffer.finishCurrentSegment();	c  =  _inputBuffer[_inputPtr++];  	non-compiled	[CE]  illegal  start  of  type	90	None	replace
6	[BUG]  [BUGGY]  c  =  Character.toLowerCase(_inputBuffer,  startPtr++);  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  c;  if  (_inputPtr  >=  _inputEnd  &&  !loadMore())  {  c  =  CHAR_NULL;  eof  =  true;  break  int_loop;  }  [BUGGY]  c  =  Character.toLowerCase(_inputBuffer,  startPtr++);  [BUGGY]  }  if  (intLen  ==  0)  {  return  _handleInvalidNumberStart(c,  neg);  }  int  fractLen  =  0;  if  (c  ==  '.')  {  //  yes,  fraction  outBuf[outPtr++]  =  c;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber2  [RETURN_TYPE]  JsonToken  boolean  neg  int  startPtr  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  inObject  neg  char  c  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  expLen  features  fractLen  i  id  inputLen  intLen  len  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  inputBuffer  nameChars  outBuf  	projects/JacksonCore19/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.35355339059327373	1408	1408	1	replace	c  =  Character.toLowerCase(_inputBuffer,  startPtr++);	c  =  _inputBuffer[_inputPtr++];  	non-compiled	[CE]  illegal  start  of  type	90	None	replace
